(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN been)
        (VP (VBG wanting)
          (S
            (VP (TO to)
              (VP (VB write)
                (NP (DT this) (NN carrot) (NN cake) (NN recipe))
                (ADVP (RB ever))
                (SBAR (IN since)
                  (S
                    (NP (NNP Chef) (NNP William) (NNP Soh))
                    (VP (VBD wowed)
                      (NP (NN everyone))
                      (PP (IN with)
                        (NP (PRP$ his) (NN carrot) (NN cake)))
                      (PP (IN during)
                        (NP (PRP$ our) (NNP Ultimate) (NNP Hawker) (NNP Fest) (JJ last) (NN year))))))))))))
    (. .)))


nsubj(wanting-4, I-1)
aux(wanting-4, have-2)
aux(wanting-4, been-3)
root(ROOT-0, wanting-4)
aux(write-6, to-5)
xcomp(wanting-4, write-6)
det(recipe-10, this-7)
nn(recipe-10, carrot-8)
nn(recipe-10, cake-9)
dobj(write-6, recipe-10)
advmod(write-6, ever-11)
mark(wowed-16, since-12)
nn(Soh-15, Chef-13)
nn(Soh-15, William-14)
nsubj(wowed-16, Soh-15)
advcl(write-6, wowed-16)
dobj(wowed-16, everyone-17)
prep(wowed-16, with-18)
poss(cake-21, his-19)
nn(cake-21, carrot-20)
pobj(with-18, cake-21)
prep(wowed-16, during-22)
poss(year-28, our-23)
nn(year-28, Ultimate-24)
nn(year-28, Hawker-25)
nn(year-28, Fest-26)
amod(year-28, last-27)
pobj(during-22, year-28)


(ROOT
  (PP (IN As)
    (PP (IN with)
      (NP
        (NP (JJ many))
        (PP (IN of)
          (NP (PRP$ my) (JJ other) (NNS recipes)))
        (SBAR
          (WHNP (WDT which))
          (S
            (NP (PRP I))
            (VP (VBP have)
              (VP (VBN blogged)
                (PP (IN about))))))
        (, ,)))))


root(ROOT-0, As-1)
pcomp(As-1, with-2)
pobj(with-2, many-3)
prep(many-3, of-4)
poss(recipes-7, my-5)
amod(recipes-7, other-6)
pobj(of-4, recipes-7)
pobj(about-12, which-8)
nsubj(blogged-11, I-9)
aux(blogged-11, have-10)
rcmod(many-3, blogged-11)
prep(blogged-11, about-12)


(ROOT
  (S
    (NP (EX there))
    (VP (VBZ is)
      (ADVP (RB always))
      (NP
        (NP (DT the) (NN question))
        (PP (IN of) (`` ``)
          (NP (NNP Why) (NNP Bother)))))
    (. ?)))


expl(is-2, there-1)
root(ROOT-0, is-2)
advmod(is-2, always-3)
det(question-5, the-4)
nsubj(is-2, question-5)
prep(question-5, of-6)
nn(Bother-9, Why-8)
pobj(of-6, Bother-9)


(ROOT
  (S
    (VP
      (VP (VB '')
        (SBAR (IN since)
          (S
            (NP (PRP you))
            (VP (MD can)
              (ADVP (RB just))
              (VP (VB go)
                (PP (TO to)
                  (NP (DT the) (NN hawker) (NN center))))))))
      (CC and)
      (VP (VB have)
        (NP
          (NP (DT a) (JJ nice) (NN plate))
          (PP (IN of)
            (NP
              (NP (NN carrot) (NN cake))
              (PP (IN for)
                (NP (NNP $))))))))))


mark(go-6, since-2)
nsubj(go-6, you-3)
aux(go-6, can-4)
advmod(go-6, just-5)
advcl(''-1, go-6)
prep(go-6, to-7)
det(center-10, the-8)
nn(center-10, hawker-9)
pobj(to-7, center-10)
cc(''-1, and-11)
conj(''-1, have-12)
det(plate-15, a-13)
amod(plate-15, nice-14)
dobj(have-12, plate-15)
prep(plate-15, of-16)
nn(cake-18, carrot-17)
pobj(of-16, cake-18)
prep(cake-18, for-19)
pobj(for-19, $-20)


(ROOT
  (FRAG
    (NP (CD 2))
    (. ?)))


root(ROOT-0, 2-1)


(ROOT
  (FRAG
    (PP (IN Well))
    (, ,)))


root(ROOT-0, Well-1)


(ROOT
  (S
    (NP (EX there))
    (VP (VBP are)
      (NP (JJ several) (NNS reasons)))))


expl(are-2, there-1)
root(ROOT-0, are-2)
amod(reasons-4, several-3)
nsubj(are-2, reasons-4)


(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (VP (VBG writing)
        (PP (IN about)
          (NP (NN carrot) (NN cake)))))
    (. .)))


nsubj(writing-3, I-1)
aux(writing-3, am-2)
root(ROOT-0, writing-3)
prep(writing-3, about-4)
nn(cake-6, carrot-5)
pobj(about-4, cake-6)


(ROOT
  (INTJ (UH Firstly) (UH ,)))


root(ROOT-0, Firstly-1)


(ROOT
  (S
    (NP (PRP I))
    (VP (VBP want)
      (S
        (VP (TO to)
          (VP (VB encourage)
            (S
              (NP (JJ young) (NNS hawkers))
              (VP (TO to)
                (VP (VB come)
                  (PRT (RP up))
                  (PP (IN with)
                    (NP
                      (NP (DT a) (JJR better) (NN carrot) (NN cake))
                      (PP (IN than)
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (NP (PRP we))
                            (VP (VBP are)
                              (VP (VBG having)
                                (NP (NN right))))))))))))
            (ADVP (RB now))))))
    (. .)))


nsubj(want-2, I-1)
root(ROOT-0, want-2)
aux(encourage-4, to-3)
xcomp(want-2, encourage-4)
amod(hawkers-6, young-5)
nsubj(come-8, hawkers-6)
aux(come-8, to-7)
xcomp(encourage-4, come-8)
prt(come-8, up-9)
prep(come-8, with-10)
det(cake-14, a-11)
amod(cake-14, better-12)
nn(cake-14, carrot-13)
pobj(with-10, cake-14)
prep(cake-14, than-15)
dobj(having-19, what-16)
nsubj(having-19, we-17)
aux(having-19, are-18)
pcomp(than-15, having-19)
dobj(having-19, right-20)
advmod(encourage-4, now-21)


(ROOT
  (S
    (NP (PRP I))
    (VP (VBP hear)
      (PP (IN of)
        (NP (DT the) (JJ legendary) (NNP Lau) (NNP Goh))))
    (, ,)))


nsubj(hear-2, I-1)
root(ROOT-0, hear-2)
prep(hear-2, of-3)
det(Goh-7, the-4)
amod(Goh-7, legendary-5)
nn(Goh-7, Lau-6)
pobj(of-3, Goh-7)


(ROOT
  (SBARQ
    (WHNP (WP who))
    (SQ
      (VP (VBD started)
        (SBAR
          (S
            (S
              (NP
                (NP (DT the) (JJ white) (NN carrot) (NN cake) (NN revolution))
                (PP (IN in)
                  (NP (NNS years))))
              (VP (VBN gone)
                (PP (IN by))))
            (CC and)
            (S
              (NP (PRP I))
              (VP (VBP ask)
                (NP (PRP myself))))))
        (, ,)))))


nsubj(started-2, who-1)
root(ROOT-0, started-2)
det(revolution-7, the-3)
amod(revolution-7, white-4)
nn(revolution-7, carrot-5)
nn(revolution-7, cake-6)
nsubj(gone-10, revolution-7)
prep(revolution-7, in-8)
pobj(in-8, years-9)
dep(started-2, gone-10)
prep(gone-10, by-11)
cc(gone-10, and-12)
nsubj(ask-14, I-13)
conj(gone-10, ask-14)
dobj(ask-14, myself-15)


(ROOT
  (SQ
    (VP (`` ``) (VB Why) (RB not))
    (. ?)))


root(ROOT-0, Why-2)
neg(Why-2, not-3)


(ROOT
  (NP (FW '') (. .)))




(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP see)
        (NP (DT the) (JJ last) (VBG remaining) (NN hawker))
        (PP (IN at)
          (S
            (NP (NNP Bukit) (NNP Merah) (NNP View) (NNP Carrot) (NNP Cake))
            (ADVP (RB still))
            (VP (VBG milling)
              (NP (NN rice))
              (S
                (VP (TO to)
                  (VP (VB make)
                    (NP (PRP$ their) (JJ own) (NN carrot) (NN cake))))))))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP ask)
        (SBAR
          (S
            (NP (PRP myself))
            (`` ``)
            (VP (VBZ Why) (RB not))))))
    (. ?)))


nsubj(see-2, I-1)
root(ROOT-0, see-2)
det(hawker-6, the-3)
amod(hawker-6, last-4)
amod(hawker-6, remaining-5)
dobj(see-2, hawker-6)
prep(see-2, at-7)
nn(Cake-12, Bukit-8)
nn(Cake-12, Merah-9)
nn(Cake-12, View-10)
nn(Cake-12, Carrot-11)
nsubj(milling-14, Cake-12)
advmod(milling-14, still-13)
pcomp(at-7, milling-14)
dobj(milling-14, rice-15)
aux(make-17, to-16)
xcomp(milling-14, make-17)
poss(cake-21, their-18)
amod(cake-21, own-19)
nn(cake-21, carrot-20)
dobj(make-17, cake-21)
cc(see-2, and-22)
nsubj(ask-24, I-23)
conj(see-2, ask-24)
nsubj(Why-27, myself-25)
ccomp(ask-24, Why-27)
neg(Why-27, not-28)


(ROOT
  (NP (FW '') (. .)))




(ROOT
  (S (CC And)
    (NP (DT every) (NN time))
    (ADVP (PRP I))
    (VP (VBP eat)
      (NP (NN carrot) (NN cake)))
    (, ,)))


cc(eat-5, And-1)
det(time-3, every-2)
nsubj(eat-5, time-3)
advmod(eat-5, I-4)
root(ROOT-0, eat-5)
nn(cake-7, carrot-6)
dobj(eat-5, cake-7)


(ROOT
  (S
    (S
      (NP (PRP I))
      (ADVP (RB always))
      (VP (VB mull)
        (PP (IN over)
          (NP (DT the) (NN fact)))
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (MD ca) (RB n't)
              (ADVP (RB even))
              (VP (VB taste)
                (NP (DT the) (NN carrot))))))))
    (PRN (-LRB- -LRB-)
      (S
        (VP (VB radish)
          (ADVP (RB actually))))
      (-RRB- -RRB-))
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP ask)
        (VP (`` ``) (VB Why) (RB not))))
    (. ?)))


nsubj(mull-3, I-1)
advmod(mull-3, always-2)
root(ROOT-0, mull-3)
prep(mull-3, over-4)
det(fact-6, the-5)
pobj(over-4, fact-6)
mark(taste-12, that-7)
nsubj(taste-12, I-8)
aux(taste-12, ca-9)
neg(taste-12, n't-10)
advmod(taste-12, even-11)
ccomp(mull-3, taste-12)
det(carrot-14, the-13)
dobj(taste-12, carrot-14)
dep(mull-3, radish-16)
advmod(radish-16, actually-17)
cc(mull-3, and-19)
nsubj(ask-21, I-20)
conj(mull-3, ask-21)
dep(ask-21, Why-23)
neg(Why-23, not-24)


(ROOT
  (S ('' '')
    (NP (PRP$ My) (NN dream))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB see)
            (NP
              (NP (NN someone))
              (PP (VBG starting)
                (NP
                  (NP (DT a) (JJ little) (NN shop))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBZ has)
                        (NP
                          (NP (DT a) (NN space))
                          (PP (IN in)
                            (NP (NN front)))
                          (SBAR
                            (WHADVP (WRB where))
                            (S
                              (NP (NN rice))
                              (VP (VBZ is)
                                (VP (VBN milled)
                                  (S
                                    (VP (TO to)
                                      (VP (VB make)
                                        (NP
                                          (NP (NN carrot) (NN cake))
                                          (SBAR
                                            (WHNP (WDT that))
                                            (S
                                              (VP (VBZ is)
                                                (NP
                                                  (NP (NN chock))
                                                  (PP (JJ full) (IN of)
                                                    (NP (JJ white) (NNS radishes))))))))))))))))))))))))))
    (. .)))


poss(dream-3, My-2)
nsubj(is-4, dream-3)
root(ROOT-0, is-4)
aux(see-6, to-5)
xcomp(is-4, see-6)
dobj(see-6, someone-7)
prep(someone-7, starting-8)
det(shop-11, a-9)
amod(shop-11, little-10)
pobj(starting-8, shop-11)
nsubj(has-13, that-12)
rcmod(shop-11, has-13)
det(space-15, a-14)
dobj(has-13, space-15)
prep(space-15, in-16)
pobj(in-16, front-17)
advmod(milled-21, where-18)
nsubjpass(milled-21, rice-19)
auxpass(milled-21, is-20)
rcmod(space-15, milled-21)
aux(make-23, to-22)
xcomp(milled-21, make-23)
nn(cake-25, carrot-24)
dobj(make-23, cake-25)
nsubj(chock-28, that-26)
cop(chock-28, is-27)
rcmod(cake-25, chock-28)
dep(of-30, full-29)
prep(chock-28, of-30)
amod(radishes-32, white-31)
pobj(of-30, radishes-32)


(ROOT
  (S (RB Then)
    (NP
      (NP (DT another) (NN part))
      (PP (IN of)
        (NP
          (NP (DT the) (NN restaurant))
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (PRP it))
              (VP (VBZ is)
                (ADJP (RB expertly) (JJ fried)
                  (PP (IN over)
                    (NP (DT a) (NN smoking))))))))))
    (VP (VBD cast)
      (NP (NN iron) (NNS pan))
      (PP (TO to)
        (NP (NN perfection))))
    (. .)))


advmod(cast-15, Then-1)
det(part-3, another-2)
nsubj(cast-15, part-3)
prep(part-3, of-4)
det(restaurant-6, the-5)
pobj(of-4, restaurant-6)
advmod(fried-11, where-7)
nsubj(fried-11, it-8)
cop(fried-11, is-9)
advmod(fried-11, expertly-10)
rcmod(restaurant-6, fried-11)
prep(fried-11, over-12)
det(smoking-14, a-13)
pobj(over-12, smoking-14)
root(ROOT-0, cast-15)
nn(pan-17, iron-16)
dobj(cast-15, pan-17)
prep(cast-15, to-18)
pobj(to-18, perfection-19)


(ROOT
  (VP (VB Think)
    (PP (IN of)
      (NP (DT the) (NNP Soba) (NNS restaurants)))
    (PP (IN in)
      (NP
        (NP (NNP Japan))
        (CC and)
        (S
          (VP (VB ask)
            (NP (PRP yourself))))))
    (, ,)))


root(ROOT-0, Think-1)
prep(Think-1, of-2)
det(restaurants-5, the-3)
nn(restaurants-5, Soba-4)
pobj(of-2, restaurants-5)
prep(Think-1, in-6)
pobj(in-6, Japan-7)
cc(Japan-7, and-8)
conj(Japan-7, ask-9)
dobj(ask-9, yourself-10)


(ROOT
  (SQ
    (VP (`` ``) (VB Why) (RB not))
    (. ?)))


root(ROOT-0, Why-2)
neg(Why-2, not-3)


(ROOT
  (S
    (NP (NNP '') (NNP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (SBAR (IN if)
          (S
            (NP (PRP I))
            (VP (MD will)
              (ADVP (RB ever))
              (VP (VB see)
                (NP (DT that) (NN happening))))))))
    (, ,)))


nsubj(know-5, I-2)
aux(know-5, do-3)
neg(know-5, n't-4)
root(ROOT-0, know-5)
mark(see-10, if-6)
nsubj(see-10, I-7)
aux(see-10, will-8)
advmod(see-10, ever-9)
advcl(know-5, see-10)
det(happening-12, that-11)
dobj(see-10, happening-12)


(ROOT
  (S (CC but)
    (ADVP (IN until)
      (NP (DT that) (NN day)))
    (VP (VBZ dawns))
    (, ,)))


cc(dawns-5, but-1)
advmod(dawns-5, until-2)
det(day-4, that-3)
pobj(until-2, day-4)
root(ROOT-0, dawns-5)


(ROOT
  (S
    (NP (RB here))
    (VP (VBZ is)
      (NP (PRP$ my) (JJ small) (NN contribution)
        (S
          (VP (TO to)
            (VP (VB get)
              (NP (DT the) (NN stone) (NN mill) (NN rolling)))))))
    (. .)))


nsubj(contribution-5, here-1)
cop(contribution-5, is-2)
poss(contribution-5, my-3)
amod(contribution-5, small-4)
root(ROOT-0, contribution-5)
aux(get-7, to-6)
infmod(contribution-5, get-7)
det(rolling-11, the-8)
nn(rolling-11, stone-9)
nn(rolling-11, mill-10)
dobj(get-7, rolling-11)


(ROOT
  (FRAG
    (PP (IN Hopefully))
    (, ,)))


root(ROOT-0, Hopefully-1)


(ROOT
  (S
    (NP (DT a) (JJ smart) (NN entrepreneur))
    (VP (MD might)
      (ADVP (RB just))
      (VP
        (VP (VB pick)
          (PRT (RP up))
          (PP (IN on)
            (NP (DT the) (NN idea))))
        (CC and)
        (VP (VB give)
          (NP (DT the) (NN world))
          (NP (DT a) (NN carrot) (NN cake)
            (S
              (VP (TO to)
                (VP (VB behold))))))))
    (. .)))


det(entrepreneur-3, a-1)
amod(entrepreneur-3, smart-2)
nsubj(pick-6, entrepreneur-3)
aux(pick-6, might-4)
advmod(pick-6, just-5)
root(ROOT-0, pick-6)
prt(pick-6, up-7)
prep(pick-6, on-8)
det(idea-10, the-9)
pobj(on-8, idea-10)
cc(pick-6, and-11)
conj(pick-6, give-12)
det(world-14, the-13)
iobj(give-12, world-14)
det(cake-17, a-15)
nn(cake-17, carrot-16)
dobj(give-12, cake-17)
aux(behold-19, to-18)
infmod(cake-17, behold-19)


(ROOT
  (S
    (NP
      (NP (DT A) (NN carrot) (NN cake))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBZ is)
            (ADJP (JJ sublime)
              (PP (IN as)
                (NP (DT the) (JJS best) (NN Soba))))))))
    (VP (VBZ noodles)
      (PP (IN in)
        (NP (NNP Japan))))
    (. .)))


det(cake-3, A-1)
nn(cake-3, carrot-2)
nsubj(noodles-11, cake-3)
nsubj(sublime-6, that-4)
cop(sublime-6, is-5)
rcmod(cake-3, sublime-6)
prep(sublime-6, as-7)
det(Soba-10, the-8)
amod(Soba-10, best-9)
pobj(as-7, Soba-10)
root(ROOT-0, noodles-11)
prep(noodles-11, in-12)
pobj(in-12, Japan-13)


(ROOT
  (SQ
    (VP (`` ``) (VB Why) (RB not))
    (. ?)))


root(ROOT-0, Why-2)
neg(Why-2, not-3)


(ROOT
  (S ('' '')
    (NP (NNP Before))
    (ADVP (PRP we))
    (VP (VBP get)
      (SBAR
        (S
          (VP (VBD started)))))
    (, ,)))


nsubj(get-4, Before-2)
advmod(get-4, we-3)
root(ROOT-0, get-4)
ccomp(get-4, started-5)


(ROOT
  (S
    (VP (VB let)
      (NP (PRP me))
      (ADVP (RB just))
      (VP (VB add)
        (NP (DT this) (NN disclaimer))))
    (. .)))


root(ROOT-0, let-1)
dobj(let-1, me-2)
advmod(let-1, just-3)
dep(let-1, add-4)
det(disclaimer-6, this-5)
dobj(add-4, disclaimer-6)


(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (NP (PRP I))
        (VP (VBP have)
          (VP (VBN done)
            (ADVP (RB here))))))
    (VP (VBZ is)
      (ADVP (RB certainly))
      (VP (VBG NOT)
        (NP (DT the) (JJ ultimate) (NN carrot) (NN cake))))
    (. .)))


dobj(done-4, What-1)
nsubj(done-4, I-2)
aux(done-4, have-3)
csubj(NOT-8, done-4)
advmod(done-4, here-5)
aux(NOT-8, is-6)
advmod(NOT-8, certainly-7)
root(ROOT-0, NOT-8)
det(cake-12, the-9)
amod(cake-12, ultimate-10)
nn(cake-12, carrot-11)
dobj(NOT-8, cake-12)


(ROOT
  (S
    (NP (PRP I))
    (VP (MD would)
      (VP (VB give)
        (NP (PRP myself))
        (NP
          (QP (RB only) (DT a) (CD 4.25)))
        (ADVP (IN at) (JJS best))))
    (, ,)))


nsubj(give-3, I-1)
aux(give-3, would-2)
root(ROOT-0, give-3)
iobj(give-3, myself-4)
quantmod(4.25-7, only-5)
quantmod(4.25-7, a-6)
dobj(give-3, 4.25-7)
advmod(give-3, at-8)
pobj(at-8, best-9)


(ROOT
  (S (CC but)
    (NP (PRP it))
    (VP (VBZ is)
      (ADVP (RB certainly))
      (ADJP
        (ADJP (JJR better))
        (PP (IN than)
          (NP
            (NP (DT a) (NN lot))
            (PP (IN of)
              (NP (NN carrot) (NN cake))))))
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (VBP have)
            (VP (VBN eaten)
              (ADVP (RB elsewhere)))))))
    (. .)))


cc(better-5, but-1)
nsubj(better-5, it-2)
cop(better-5, is-3)
advmod(better-5, certainly-4)
root(ROOT-0, better-5)
prep(better-5, than-6)
det(lot-8, a-7)
pobj(than-6, lot-8)
prep(lot-8, of-9)
nn(cake-11, carrot-10)
pobj(of-9, cake-11)
mark(eaten-15, that-12)
nsubj(eaten-15, I-13)
aux(eaten-15, have-14)
ccomp(better-5, eaten-15)
advmod(eaten-15, elsewhere-16)


(ROOT
  (FRAG
    (S
      (ADJP
        (ADJP
          (NP (CD One))
          (NP (NN thing)))
        (PRN
          (PP (IN though))
          (, ,))))))


root(ROOT-0, One-1)
dep(One-1, thing-2)
dep(One-1, though-3)


(ROOT
  (S
    (NP (DT this))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN carrot) (NN cake))
        (SBAR
          (WHNP (WDT which))
          (S
            (NP (PRP you))
            (VP (MD will)
              (VP (VB be)
                (ADJP (JJ able)
                  (S
                    (VP (TO to)
                      (VP (VB taste)
                        (NP (DT the) (NN radish))))))))))))
    (. .)))


nsubj(cake-5, this-1)
cop(cake-5, is-2)
det(cake-5, a-3)
nn(cake-5, carrot-4)
root(ROOT-0, cake-5)
dobj(able-10, which-6)
nsubj(able-10, you-7)
aux(able-10, will-8)
cop(able-10, be-9)
rcmod(cake-5, able-10)
aux(taste-12, to-11)
xcomp(able-10, taste-12)
det(radish-14, the-13)
dobj(taste-12, radish-14)


(ROOT
  (S (IN So)
    (NP (PRP I))
    (VP (VBP am)
      (VP (VBG hoping)
        (SBAR (IN that)
          (S
            (NP (DT this) (NN recipe))
            (VP (MD will)
              (VP (VB get)
                (S
                  (NP (PRP you))
                  (VP (VBN started)
                    (PP (IN on)
                      (S
                        (VP (VBG making)
                          (NP
                            (NP (PRP$ your) (JJ own) (NN carrot) (NN cake))
                            (SBAR
                              (WHNP (WDT which))
                              (S
                                (VP (VBZ is)
                                  (NP (DT a) (NN hawker) (NN dish))
                                  (SBAR (IN that)
                                    (S
                                      (NP (PRP one))
                                      (VP (MD can)
                                        (ADVP (RB easily))
                                        (VP (VB make)
                                          (PP (IN at)
                                            (NP (NN home))))))))))))))))))))))
    (. .)))


dep(hoping-4, So-1)
nsubj(hoping-4, I-2)
aux(hoping-4, am-3)
root(ROOT-0, hoping-4)
mark(get-9, that-5)
det(recipe-7, this-6)
nsubj(get-9, recipe-7)
aux(get-9, will-8)
ccomp(hoping-4, get-9)
nsubj(started-11, you-10)
dep(get-9, started-11)
prep(started-11, on-12)
pcomp(on-12, making-13)
poss(cake-17, your-14)
amod(cake-17, own-15)
nn(cake-17, carrot-16)
dobj(making-13, cake-17)
nsubj(dish-22, which-18)
cop(dish-22, is-19)
det(dish-22, a-20)
nn(dish-22, hawker-21)
rcmod(cake-17, dish-22)
mark(make-27, that-23)
nsubj(make-27, one-24)
aux(make-27, can-25)
advmod(make-27, easily-26)
ccomp(dish-22, make-27)
prep(make-27, at-28)
pobj(at-28, home-29)


(ROOT
  (NP (NNS Ingredients) (: :)))


root(ROOT-0, Ingredients-1)


(ROOT
  (NP
    (NP
      (NP
        (PRN (-LRB- -LRB-)
          (NP
            (NP (NNP Courtesy))
            (PP (IN of)
              (NP (NNP Chef) (NNP William) (NNP Soh))))
          (-RRB- -RRB-))
        (NNP Rice) (NNP Flour))
      (NP (CD 250g) (NNP Tapioca) (NN flour) (JJ 10g) (NN Wheat) (NN flour) (NNS 10g)))
    (NP
      (NP
        (ADJP (NNP Salt) (JJ 5g))
        (NNP Sugar) (NNP 15g) (NNP MSG) (NNPS 10g)
        (PRN (-LRB- -LRB-)
          (NP (NNP optional))
          (-RRB- -RRB-))
        (NNP Radish))
      (NP
        (NP (CD 500g) (NNP Water) (CD 1.25) (NNP L))
        (-LRB- -LRB-)
        (NP
          (NP (NNS 900ml))
          (PP (IN for)
            (NP (NN radish))))
        (, ,)))))


dep(Flour-9, Courtesy-2)
prep(Courtesy-2, of-3)
nn(Soh-6, Chef-4)
nn(Soh-6, William-5)
pobj(of-3, Soh-6)
nn(Flour-9, Rice-8)
root(ROOT-0, Flour-9)
num(10g-16, 250g-10)
nn(10g-16, Tapioca-11)
nn(10g-16, flour-12)
amod(10g-16, 10g-13)
nn(10g-16, Wheat-14)
nn(10g-16, flour-15)
dep(Flour-9, 10g-16)
amod(5g-18, Salt-17)
amod(Radish-26, 5g-18)
nn(Radish-26, Sugar-19)
nn(Radish-26, 15g-20)
nn(Radish-26, MSG-21)
nn(Radish-26, 10g-22)
appos(Radish-26, optional-24)
dep(Flour-9, Radish-26)
num(L-30, 500g-27)
nn(L-30, Water-28)
num(L-30, 1.25-29)
dep(Radish-26, L-30)
dep(L-30, 900ml-32)
prep(900ml-32, for-33)
pobj(for-33, radish-34)


(ROOT
  (FRAG
    (NP (CD 350ml))
    (PP (IN for)
      (NP
        (NP (NN flour))
        (-RRB- -RRB-)
        (SBAR
          (S
            (VP (VBZ Chye)
              (NP (NNP Poh) (-LRB- -LRB-) (NNP ??) (-RRB- -RRB-)))))
        (: -)))))


root(ROOT-0, 350ml-1)
prep(350ml-1, for-2)
pobj(for-2, flour-3)
rcmod(flour-3, Chye-5)
nn(??-8, Poh-6)
dobj(Chye-5, ??-8)


(ROOT
  (NP
    (NP (CD 1) (NN packet) (NNP Garlic))
    (: -)))


num(Garlic-3, 1-1)
nn(Garlic-3, packet-2)
root(ROOT-0, Garlic-3)


(ROOT
  (NP
    (NP (CD 2) (NNS cloves))
    (NP (NNP Pork) (NNP Lard))))


num(cloves-2, 2-1)
root(ROOT-0, cloves-2)
nn(Lard-4, Pork-3)
dep(cloves-2, Lard-4)


(ROOT
  (NP
    (NP (JJ 250g) (-LRB- -LRB-) (JJ optional) (-RRB- -RRB-) (NNS Notes))
    (PP (IN on)
      (NP (NNS ingredients)))
    (: :)))


amod(Notes-5, 250g-1)
amod(Notes-5, optional-3)
root(ROOT-0, Notes-5)
prep(Notes-5, on-6)
pobj(on-6, ingredients-7)


(ROOT
  (FRAG
    (NP (CD 1))
    (. .)))


root(ROOT-0, 1-1)


(ROOT
  (NP (NNP Radish) (: :)))


root(ROOT-0, Radish-1)


(ROOT
  (SBAR (IN Since)
    (S
      (NP (PRP I))
      (VP (VBD was)
        (VP (VBG making)
          (NP (PRP$ my) (JJ own) (NN carrot) (NN cake))))
      (, ,))))


mark(making-4, Since-1)
nsubj(making-4, I-2)
aux(making-4, was-3)
root(ROOT-0, making-4)
poss(cake-8, my-5)
amod(cake-8, own-6)
nn(cake-8, carrot-7)
dobj(making-4, cake-8)


(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBD went)
        (PP (IN for)
          (NP (DT the) (JJS best))))
      (CC and)
      (VP (VBD got)
        (S
          (NP (PRP myself))
          (NP (DT a) (JJ Japanese) (NN Daikon)))))
    (. .)))


nsubj(went-2, I-1)
root(ROOT-0, went-2)
prep(went-2, for-3)
det(best-5, the-4)
pobj(for-3, best-5)
cc(went-2, and-6)
conj(went-2, got-7)
nsubj(Daikon-11, myself-8)
det(Daikon-11, a-9)
amod(Daikon-11, Japanese-10)
xcomp(got-7, Daikon-11)


(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (PP (IN of)
        (NP
          (NP (NN course))
          (ADJP (RBR more) (JJ expensive))))
      (PP (IN than)
        (NP
          (NP (DT the) (JJ local) (NNS ones))
          (SBAR
            (WHNP (WDT which))
            (S
              (NP (PRP you))
              (VP (MD can)
                (VP (VB buy)
                  (PP (IN from)
                    (NP (DT the) (JJ local) (NNS markets))))))))))
    (. .)))


nsubj(is-2, It-1)
root(ROOT-0, is-2)
prep(is-2, of-3)
pobj(of-3, course-4)
advmod(expensive-6, more-5)
amod(course-4, expensive-6)
prep(is-2, than-7)
det(ones-10, the-8)
amod(ones-10, local-9)
pobj(than-7, ones-10)
dobj(buy-14, which-11)
nsubj(buy-14, you-12)
aux(buy-14, can-13)
rcmod(ones-10, buy-14)
prep(buy-14, from-15)
det(markets-18, the-16)
amod(markets-18, local-17)
pobj(from-15, markets-18)


(ROOT
  (FRAG (CC But)
    (PP (IN at)
      (NP (NNP $)))))


root(ROOT-0, But-1)
prep(But-1, at-2)
pobj(at-2, $-3)


(ROOT
  (NP
    (NP (CD 5.60))
    (PP (IN per)
      (NP
        (NP (NN daikon))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ weighs)
              (PP (IN around)
                (NP (CD 1) (NNS kg) (, ,))))))))))


root(ROOT-0, 5.60-1)
prep(5.60-1, per-2)
pobj(per-2, daikon-3)
nsubj(weighs-5, which-4)
rcmod(daikon-3, weighs-5)
prep(weighs-5, around-6)
num(kg-8, 1-7)
pobj(around-6, kg-8)


(ROOT
  (S
    (NP (PRP you))
    (VP (MD can)
      (VP (VB make)
        (NP
          (NP (RB quite) (DT a) (NN lot))
          (PP (IN of)
            (NP (NN carrot) (NN cake))))))
    (, ,)))


nsubj(make-3, you-1)
aux(make-3, can-2)
root(ROOT-0, make-3)
advmod(lot-6, quite-4)
det(lot-6, a-5)
dobj(make-3, lot-6)
prep(lot-6, of-7)
nn(cake-9, carrot-8)
pobj(of-7, cake-9)


(ROOT
  (S (IN so)
    (NP (PRP it))
    (VP (VBZ is)
      (ADVP (RB still))
      (ADJP (RB quite) (JJ affordable)))
    (. .)))


dep(affordable-6, so-1)
nsubj(affordable-6, it-2)
cop(affordable-6, is-3)
advmod(affordable-6, still-4)
advmod(affordable-6, quite-5)
root(ROOT-0, affordable-6)


(ROOT
  (SBAR (IN If)
    (S
      (NP (PRP you))
      (VP (VBP are)
        (VP (VBG buying)
          (NP (DT the) (NNS ones))
          (PP (IN at)
            (NP (DT the) (NN market)))))
      (, ,))))


mark(buying-4, If-1)
nsubj(buying-4, you-2)
aux(buying-4, are-3)
root(ROOT-0, buying-4)
det(ones-6, the-5)
dobj(buying-4, ones-6)
prep(buying-4, at-7)
det(market-9, the-8)
pobj(at-7, market-9)


(ROOT
  (S
    (VP (VB go)
      (PP (IN for)
        (NP (DT the) (NNS ones)))
      (PP (IN from)
        (NP
          (NP (JJ Cameron) (NNS highlands))
          (PP (RB instead) (IN of)
            (NP
              (NP (DT the) (NNS ones))
              (PP (IN from)
                (NP (NNP China))))))))
    (. .)))


root(ROOT-0, go-1)
prep(go-1, for-2)
det(ones-4, the-3)
pobj(for-2, ones-4)
prep(go-1, from-5)
amod(highlands-7, Cameron-6)
pobj(from-5, highlands-7)
advmod(of-9, instead-8)
prep(highlands-7, of-9)
det(ones-11, the-10)
pobj(of-9, ones-11)
prep(ones-11, from-12)
pobj(from-12, China-13)


(ROOT
  (PP (VBG According)
    (PP (TO to)
      (NP
        (NP (DT the) (NNP Carrot) (NNP Cake) (NNP Uncle))
        (PP (IN at)
          (NP (NNP Fu) (NNP Ming))))
      (, ,))))


root(ROOT-0, According-1)
pcomp(According-1, to-2)
det(Uncle-6, the-3)
nn(Uncle-6, Carrot-4)
nn(Uncle-6, Cake-5)
pobj(to-2, Uncle-6)
prep(Uncle-6, at-7)
nn(Ming-9, Fu-8)
pobj(at-7, Ming-9)


(ROOT
  (S
    (NP (PRP they))
    (VP (VBP are)
      (ADJP
        (ADJP (JJR better))
        (PP (IN for)
          (S
            (VP (VBG making)
              (NP (NN carrot) (NN cake)))))))
    (. .)))


nsubj(better-3, they-1)
cop(better-3, are-2)
root(ROOT-0, better-3)
prep(better-3, for-4)
pcomp(for-4, making-5)
nn(cake-7, carrot-6)
dobj(making-5, cake-7)


(ROOT
  (FRAG
    (NP (CD 2))
    (. .)))


root(ROOT-0, 2-1)


(ROOT
  (NP (NNP Chye) (NNP Poh) (: :)))


nn(Poh-2, Chye-1)
root(ROOT-0, Poh-2)


(ROOT
  (S
    (NP (-LRB- -LRB-) (NN Preserved) (NNS turnips) (-RRB- -RRB-))
    (ADVP (RB There))
    (VP (VBP are)
      (NP
        (NP (CD two) (NNS types))
        (PP (IN of)
          (NP
            (NP (NNP Chye) (NNP Poh))
            (PP (IN in)
              (NP (DT the) (NN market)))))))
    (, ,)))


nn(turnips-3, Preserved-2)
nsubj(types-8, turnips-3)
advmod(types-8, There-5)
cop(types-8, are-6)
num(types-8, two-7)
root(ROOT-0, types-8)
prep(types-8, of-9)
nn(Poh-11, Chye-10)
pobj(of-9, Poh-11)
prep(Poh-11, in-12)
det(market-14, the-13)
pobj(in-12, market-14)


(ROOT
  (NP
    (NP
      (NP (DT a) (JJ sweet))
      (CC or)
      (NP (DT a) (JJ salty) (NN version)))
    (. .)))


det(sweet-2, a-1)
root(ROOT-0, sweet-2)
cc(sweet-2, or-3)
det(version-6, a-4)
amod(version-6, salty-5)
conj(sweet-2, version-6)


(ROOT
  (S
    (NP (JJS Most) (NN carrot) (NN cake) (NNS places))
    (VP (VBP use)
      (NP (DT the) (JJ salty) (NN version)))
    (. .)))


amod(places-4, Most-1)
nn(places-4, carrot-2)
nn(places-4, cake-3)
nsubj(use-5, places-4)
root(ROOT-0, use-5)
det(version-8, the-6)
amod(version-8, salty-7)
dobj(use-5, version-8)


(ROOT
  (FRAG
    (ADVP (RB However))
    (ADVP (RB ,))))


root(ROOT-0, However-1)


(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB actually))
    (VP (VBP like)
      (SBAR
        (NP
          (NP (DT a) (NN bit))
          (PP (IN of)
            (NP
              (NP (NN sweetness))
              (PP (IN in)
                (NP (PRP$ my) (NN carrot) (NN cake))))))
        (IN so)
        (S
          (NP (PRP I))
          (VP (VB mix)
            (NP (DT both))))))
    (. .)))


nsubj(like-3, I-1)
advmod(like-3, actually-2)
root(ROOT-0, like-3)
det(bit-5, a-4)
dep(mix-14, bit-5)
prep(bit-5, of-6)
pobj(of-6, sweetness-7)
prep(sweetness-7, in-8)
poss(cake-11, my-9)
nn(cake-11, carrot-10)
pobj(in-8, cake-11)
mark(mix-14, so-12)
nsubj(mix-14, I-13)
advcl(like-3, mix-14)
dobj(mix-14, both-15)


(ROOT
  (S
    (NP (DT The) (NN taste))
    (VP (VBZ is)
      (ADVP (RB really))
      (ADVP (RB up)
        (PP (TO to)
          (NP (PRP$ your) (NN preference)))))
    (. .)))


det(taste-2, The-1)
nsubj(is-3, taste-2)
root(ROOT-0, is-3)
advmod(is-3, really-4)
advmod(is-3, up-5)
prep(up-5, to-6)
poss(preference-8, your-7)
pobj(to-6, preference-8)


(ROOT
  (FRAG
    (NP (CD 3))
    (. .)))


root(ROOT-0, 3-1)


(ROOT
  (NP (NNP Rice) (NNP flour) (: :)))


nn(flour-2, Rice-1)
root(ROOT-0, flour-2)


(ROOT
  (SBAR (IN If)
    (S
      (NP (PRP I))
      (VP (VBD had)
        (S
          (NP (PRP it))
          (NP (PRP$ my) (NN way))))
      (, ,))))


mark(had-3, If-1)
nsubj(had-3, I-2)
root(ROOT-0, had-3)
nsubj(way-6, it-4)
poss(way-6, my-5)
xcomp(had-3, way-6)


(ROOT
  (S
    (NP (PRP I))
    (VP (MD would)
      (VP (VB grind)
        (NP (PRP$ my) (JJ own) (NN rice) (NN flour))
        (PP (IN with)
          (NP
            (NP (DT a) (NN stone) (NN mill))
            (VP (VBG using)
              (NP (NNP Thai) (NNP Jasmine) (NN rice)))))))
    (. .)))


nsubj(grind-3, I-1)
aux(grind-3, would-2)
root(ROOT-0, grind-3)
poss(flour-7, my-4)
amod(flour-7, own-5)
nn(flour-7, rice-6)
dobj(grind-3, flour-7)
prep(grind-3, with-8)
det(mill-11, a-9)
nn(mill-11, stone-10)
pobj(with-8, mill-11)
partmod(mill-11, using-12)
nn(rice-15, Thai-13)
nn(rice-15, Jasmine-14)
dobj(using-12, rice-15)


(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB have)
        (S
          (NP
            (NP (DT a) (NN stone) (NN mill))
            (PRN (-LRB- -LRB-)
              (ADVP (RB yet))
              (-RRB- -RRB-))
            (, ,)))))))


cc(have-5, But-1)
nsubj(have-5, I-2)
aux(have-5, do-3)
neg(have-5, n't-4)
root(ROOT-0, have-5)
det(mill-8, a-6)
nn(mill-8, stone-7)
xcomp(have-5, mill-8)
dep(mill-8, yet-10)


(ROOT
  (S (IN so)
    (NP (DT the) (JJS best) (NN alternative))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB buy)
            (NP (DT the)
              (ADJP (JJ ready) (JJ milled))
              (NN rice) (NN flour))
            (PP (IN from)
              (NP (DT the) (NNS shops)))))))
    (. .)))


dep(is-5, so-1)
det(alternative-4, the-2)
amod(alternative-4, best-3)
nsubj(is-5, alternative-4)
root(ROOT-0, is-5)
aux(buy-7, to-6)
xcomp(is-5, buy-7)
det(flour-12, the-8)
amod(milled-10, ready-9)
amod(flour-12, milled-10)
nn(flour-12, rice-11)
dobj(buy-7, flour-12)
prep(buy-7, from-13)
det(shops-15, the-14)
pobj(from-13, shops-15)


(ROOT
  (S
    (VP (VB Make)
      (ADJP (JJ sure)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (NP
                (NP (DT the)
                  (ADJP (JJ wet) (JJ milled))
                  (NN type))
                (CC and)
                (NP
                  (NP (RB not) (DT the)
                    (ADJP (JJ dry) (JJ milled))
                    (NN type))
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBZ is)
                        (VP (VBN used)
                          (S
                            (VP (TO to)
                              (VP (VB make)
                                (NP (NN batter))
                                (PP (IN for)
                                  (NP (JJ deep) (NN frying)))))))))))))))))
    (. .)))


root(ROOT-0, Make-1)
acomp(Make-1, sure-2)
nsubj(type-8, it-3)
cop(type-8, is-4)
det(type-8, the-5)
amod(milled-7, wet-6)
amod(type-8, milled-7)
ccomp(sure-2, type-8)
cc(type-8, and-9)
neg(type-14, not-10)
det(type-14, the-11)
amod(milled-13, dry-12)
amod(type-14, milled-13)
conj(type-8, type-14)
nsubjpass(used-17, which-15)
auxpass(used-17, is-16)
rcmod(type-14, used-17)
aux(make-19, to-18)
xcomp(used-17, make-19)
dobj(make-19, batter-20)
prep(make-19, for-21)
amod(frying-23, deep-22)
pobj(for-21, frying-23)


(ROOT
  (NP (NNS Steps) (: :)))


root(ROOT-0, Steps-1)


(ROOT
  (FRAG
    (NP (CD 1))
    (. .)))


root(ROOT-0, 1-1)


(ROOT
  (S
    (VP (VB Cut)
      (NP (DT the) (NN radish))
      (PP (IN into)
        (NP
          (NP (NNS strips))
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBP are)
                (PP (IN about)
                  (NP
                    (NP (RB twice) (DT the) (NN size))
                    (PP (IN of)
                      (NP (NNS matchsticks)))))))))))
    (. .)))


root(ROOT-0, Cut-1)
det(radish-3, the-2)
dobj(Cut-1, radish-3)
prep(Cut-1, into-4)
pobj(into-4, strips-5)
nsubj(are-7, which-6)
rcmod(strips-5, are-7)
prep(are-7, about-8)
advmod(size-11, twice-9)
det(size-11, the-10)
pobj(about-8, size-11)
prep(size-11, of-12)
pobj(of-12, matchsticks-13)


(ROOT
  (S
    (VP (VBG Cutting)
      (SBAR
        (S
          (NP (DT the) (NN radish))
          (VP (VBZ is)
            (ADJP
              (ADJP (JJR better))
              (PP (IN than)
                (S
                  (VP (VBG shredding)
                    (NP (PRP it))
                    (SBAR (IN because)
                      (WHADVP (WRB when))
                      (S
                        (NP (PRP you))
                        (VP (VBZ shred)
                          (NP (PRP it)))))
                    (, ,)))))))))))


root(ROOT-0, Cutting-1)
det(radish-3, the-2)
nsubj(better-5, radish-3)
cop(better-5, is-4)
ccomp(Cutting-1, better-5)
prep(better-5, than-6)
pcomp(than-6, shredding-7)
dobj(shredding-7, it-8)
mark(shred-12, because-9)
advmod(shred-12, when-10)
nsubj(shred-12, you-11)
advcl(shredding-7, shred-12)
dobj(shred-12, it-13)


(ROOT
  (S
    (NP (DT the) (NNS juices))
    (VP (VBP tend)
      (S
        (VP (TO to)
          (VP (VB leech)
            (PRT (RP out))
            (PP (IN of)
              (NP (DT the) (NN radish)))))))
    (. .)))


det(juices-2, the-1)
nsubj(tend-3, juices-2)
root(ROOT-0, tend-3)
aux(leech-5, to-4)
xcomp(tend-3, leech-5)
prt(leech-5, out-6)
prep(leech-5, of-7)
det(radish-9, the-8)
pobj(of-7, radish-9)


(ROOT
  (S
    (S
      (VP (VBG Cutting)
        (NP (PRP it))
        (ADVP (RB also))))
    (VP (VBZ means)
      (SBAR
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (NP (DT a) (JJ little) (JJR thicker)))))
        (CC and)
        (SBAR (IN so)
          (S
            (NP (PRP it))
            (VP (VBZ gives)
              (NP (PRP it))
              (NP (DT a) (JJR better) (NN bite)))))))
    (. .)))


csubj(means-4, Cutting-1)
dobj(Cutting-1, it-2)
advmod(Cutting-1, also-3)
root(ROOT-0, means-4)
nsubj(thicker-9, it-5)
cop(thicker-9, is-6)
det(thicker-9, a-7)
amod(thicker-9, little-8)
dep(means-4, thicker-9)
cc(thicker-9, and-10)
mark(gives-13, so-11)
nsubj(gives-13, it-12)
conj(thicker-9, gives-13)
iobj(gives-13, it-14)
det(bite-17, a-15)
amod(bite-17, better-16)
dobj(gives-13, bite-17)


(ROOT
  (FRAG
    (NP (CD 2))
    (. .)))


root(ROOT-0, 2-1)


(ROOT
  (FRAG
    (PP (IN Mix)
      (NP (DT the) (NN rice) (NN flour)))
    (, ,)))


root(ROOT-0, Mix-1)
det(flour-4, the-2)
nn(flour-4, rice-3)
pobj(Mix-1, flour-4)


(ROOT
  (S
    (NP (NN tapioca))
    (VP (VBP flour))
    (, ,)))


nsubj(flour-2, tapioca-1)
root(ROOT-0, flour-2)


(ROOT
  (S
    (NP (NN wheat))
    (VP (VBP flour)
      (PP (IN with)
        (NP (JJ 350ml) (NN water)))
      (PP (IN into)
        (NP (DT a) (JJ thick) (NN slurry))))
    (. .)))


nsubj(flour-2, wheat-1)
root(ROOT-0, flour-2)
prep(flour-2, with-3)
amod(water-5, 350ml-4)
pobj(with-3, water-5)
prep(flour-2, into-6)
det(slurry-9, a-7)
amod(slurry-9, thick-8)
pobj(into-6, slurry-9)


(ROOT
  (FRAG
    (NP (CD 3))
    (. .)))


root(ROOT-0, 3-1)


(ROOT
  (S
    (VP (VB Heat)
      (PRT (RP up))
      (NP
        (NP
          (NP (DT the) (NN water))
          (PP (IN in)
            (NP (DT a) (JJ separate) (NN pot))))
        (CC and)
        (NP (JJ add) (NN salt))
        (, ,)))))


root(ROOT-0, Heat-1)
prt(Heat-1, up-2)
det(water-4, the-3)
dobj(Heat-1, water-4)
prep(water-4, in-5)
det(pot-8, a-6)
amod(pot-8, separate-7)
pobj(in-5, pot-8)
cc(water-4, and-9)
amod(salt-11, add-10)
conj(water-4, salt-11)


(ROOT
  (NP
    (NP (NN sugar)
      (CC and)
      (NN msg))
    (PRN (-LRB- -LRB-)
      (NP (NNP optional))
      (-RRB- -RRB-))
    (. .)))


root(ROOT-0, sugar-1)
cc(sugar-1, and-2)
conj(sugar-1, msg-3)
appos(sugar-1, optional-5)


(ROOT
  (FRAG
    (PP (IN In)
      (NP (DT the) (NN photo)))
    (, ,)))


root(ROOT-0, In-1)
det(photo-3, the-2)
pobj(In-1, photo-3)


(ROOT
  (S
    (NP (PRP you))
    (VP (MD will)
      (VP (VB notice)
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (VBD added)
              (SBAR
                (S
                  (NP (DT some))
                  (VP (VBD dried)
                    (NP (NN cuttlefish))
                    (PP (TO to)
                      (NP (DT the) (NN water)))))))))))
    (. .)))


nsubj(notice-3, you-1)
aux(notice-3, will-2)
root(ROOT-0, notice-3)
mark(added-6, that-4)
nsubj(added-6, I-5)
ccomp(notice-3, added-6)
nsubj(dried-8, some-7)
ccomp(added-6, dried-8)
dobj(dried-8, cuttlefish-9)
prep(dried-8, to-10)
det(water-12, the-11)
pobj(to-10, water-12)


(ROOT
  (S
    (NP (PRP I))
    (VP (VBD did)
      (NP (DT this))
      (PP (IN in)
        (NP
          (NP (NN place))
          (PP (IN of)
            (NP (NN msg)))))
      (S
        (VP (TO to)
          (VP (VB give)
            (NP (DT the) (NN stock))
            (NP
              (NP (DT a) (NN bit))
              (PP (IN of)
                (NP (JJ umami) (NN flavor))))))))
    (. .)))


nsubj(did-2, I-1)
root(ROOT-0, did-2)
dobj(did-2, this-3)
prep(did-2, in-4)
pobj(in-4, place-5)
prep(place-5, of-6)
pobj(of-6, msg-7)
aux(give-9, to-8)
xcomp(did-2, give-9)
det(stock-11, the-10)
iobj(give-9, stock-11)
det(bit-13, a-12)
dobj(give-9, bit-13)
prep(bit-13, of-14)
amod(flavor-16, umami-15)
pobj(of-14, flavor-16)


(ROOT
  (S
    (NP (PRP You))
    (VP (MD can)
      (VP (VB use)
        (NP (JJ other) (NNS alternatives))
        (PP (TO to)
          (NP
            (NP (NN msg))
            (PP (JJ such) (IN as)
              (NP (NNP konbu)))))))
    (, ,)))


nsubj(use-3, You-1)
aux(use-3, can-2)
root(ROOT-0, use-3)
amod(alternatives-5, other-4)
dobj(use-3, alternatives-5)
prep(use-3, to-6)
pobj(to-6, msg-7)
mwe(as-9, such-8)
prep(msg-7, as-9)
pobj(as-9, konbu-10)


(ROOT
  (S
    (NP (NN ikan))
    (VP (VBZ bilis))
    (, ,)))


nsubj(bilis-2, ikan-1)
root(ROOT-0, bilis-2)


(ROOT
  (S
    (NP (NNP dried))
    (VP (VBZ scallops)
      (NP (FW etc.)))
    (. .)))


nsubj(scallops-2, dried-1)
root(ROOT-0, scallops-2)
dobj(scallops-2, etc.-3)


(ROOT
  (S
    (NP (PRP You))
    (VP (MD can)
      (PP (IN of)
        (NP (NN course)))
      (VP
        (VP (VB use)
          (NP
            (NP (DT a) (NN bit))
            (PP (IN of)
              (NP (NN chicken) (NN stock) (NN powder)))))
        (CONJP (CC but)
          (RB just))
        (VP (VB take)
          (NP (NN note))
          (SBAR (IN that)
            (S
              (NP (PRP it))
              (VP (VBZ is)
                (ADJP (RB as) (JJ good)
                  (PP (IN as)
                    (S
                      (VP (VBG adding)
                        (NP (NN msg))))))))))))
    (. .)))


nsubj(use-5, You-1)
aux(use-5, can-2)
prep(use-5, of-3)
pobj(of-3, course-4)
root(ROOT-0, use-5)
det(bit-7, a-6)
dobj(use-5, bit-7)
prep(bit-7, of-8)
nn(powder-11, chicken-9)
nn(powder-11, stock-10)
pobj(of-8, powder-11)
cc(just-13, but-12)
cc(use-5, just-13)
conj(use-5, take-14)
dobj(take-14, note-15)
mark(good-20, that-16)
nsubj(good-20, it-17)
cop(good-20, is-18)
advmod(good-20, as-19)
ccomp(take-14, good-20)
prep(good-20, as-21)
pcomp(as-21, adding-22)
dobj(adding-22, msg-23)


(ROOT
  (FRAG
    (ADVP (RB So))
    (SBAR (IN if)
      (S
        (S
          (NP (PRP you))
          (VP (VBP are)
            (VP (VBG doing)
              (NP (PRP it))
              (PP (IN as)
                (NP
                  (NP (DT a) (NN shortcut))
                  (PP (TO to)
                    (S
                      (VP (VBG making)
                        (NP (PRP$ your) (JJ own) (NN chicken) (NN stock))
                        (ADVP (RB then))))))))))
        (PRN
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (ADJP (JJ ok))))
          (, ,))))))


root(ROOT-0, So-1)
mark(doing-5, if-2)
nsubj(doing-5, you-3)
aux(doing-5, are-4)
dep(So-1, doing-5)
dobj(doing-5, it-6)
prep(doing-5, as-7)
det(shortcut-9, a-8)
pobj(as-7, shortcut-9)
prep(shortcut-9, to-10)
pcomp(to-10, making-11)
poss(stock-15, your-12)
amod(stock-15, own-13)
nn(stock-15, chicken-14)
dobj(making-11, stock-15)
advmod(making-11, then-16)
nsubj(ok-19, it-17)
cop(ok-19, is-18)
dep(doing-5, ok-19)


(ROOT
  (PRN (CC but)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP are)
          (VP (VBG trying)
            (S
              (VP (TO to)
                (VP (VB avoid)
                  (NP (NN msg)))))))
        (, ,)))))


cc(trying-5, but-1)
mark(trying-5, if-2)
nsubj(trying-5, you-3)
aux(trying-5, are-4)
root(ROOT-0, trying-5)
aux(avoid-7, to-6)
xcomp(trying-5, avoid-7)
dobj(avoid-7, msg-8)


(ROOT
  (S
    (ADVP (RB then))
    (NP (PRP it))
    (VP (VBZ is) (RB not)
      (NP (NN ok)))
    (. .)))


advmod(ok-5, then-1)
nsubj(ok-5, it-2)
cop(ok-5, is-3)
neg(ok-5, not-4)
root(ROOT-0, ok-5)


(ROOT
  (FRAG
    (NP (CD 4))
    (. .)))


root(ROOT-0, 4-1)


(ROOT
  (SBAR (IN Once)
    (S
      (NP (PRP$ your) (NN stock))
      (VP (VBZ is)
        (ADJP (JJ ready)))
      (, ,))))


mark(ready-5, Once-1)
poss(stock-3, your-2)
nsubj(ready-5, stock-3)
cop(ready-5, is-4)
root(ROOT-0, ready-5)


(ROOT
  (S
    (VP
      (VP (VB add)
        (NP (DT the) (NNS radishes))
        (PP (IN into)
          (NP (DT the) (JJ boiling) (NN water))))
      (CC and)
      (VP (VB cook)
        (SBAR (IN until)
          (S
            (NP (DT the) (NN radish))
            (VP (VBZ turns)
              (NP (JJ translucent)))))))
    (. .)))


root(ROOT-0, add-1)
det(radishes-3, the-2)
dobj(add-1, radishes-3)
prep(add-1, into-4)
det(water-7, the-5)
amod(water-7, boiling-6)
pobj(into-4, water-7)
cc(add-1, and-8)
conj(add-1, cook-9)
mark(turns-13, until-10)
det(radish-12, the-11)
nsubj(turns-13, radish-12)
advcl(cook-9, turns-13)
dobj(turns-13, translucent-14)


(ROOT
  (NP
    (NP (-LRB- -LRB-) (NN 5-10mins) (-RRB- -RRB-))
    (NP (CD 5))
    (. .)))


root(ROOT-0, 5-10mins-2)
dep(5-10mins-2, 5-4)


(ROOT
  (S
    (NP (NNP Next))
    (VP
      (VP (VBP add)
        (NP (DT the) (NN flour) (NN mixture))
        (PP (TO to)
          (NP (DT the) (NN radish))))
      (CC and)
      (VP (VBP stir)
        (SBAR (IN until)
          (S
            (NP (PRP it))
            (VP (VBZ has)
              (VP (VBN thickened)
                (ADVP (RB evenly))))))))
    (. .)))


nsubj(add-2, Next-1)
root(ROOT-0, add-2)
det(mixture-5, the-3)
nn(mixture-5, flour-4)
dobj(add-2, mixture-5)
prep(add-2, to-6)
det(radish-8, the-7)
pobj(to-6, radish-8)
cc(add-2, and-9)
conj(add-2, stir-10)
mark(thickened-14, until-11)
nsubj(thickened-14, it-12)
aux(thickened-14, has-13)
advcl(stir-10, thickened-14)
advmod(thickened-14, evenly-15)


(ROOT
  (FRAG
    (NP (CD 6))
    (. .)))


root(ROOT-0, 6-1)


(ROOT
  (S
    (NP (NNP Oil) (NNP the))
    (VP
      (VP (VBZ pans))
      (CC and)
      (VP
        (ADVP (RB then))
        (VBP add)
        (NP (DT the) (NN thicken) (NN mixture))))
    (. .)))


nn(the-2, Oil-1)
nsubj(pans-3, the-2)
root(ROOT-0, pans-3)
cc(pans-3, and-4)
advmod(add-6, then-5)
conj(pans-3, add-6)
det(mixture-9, the-7)
nn(mixture-9, thicken-8)
dobj(add-6, mixture-9)


(ROOT
  (FRAG
    (NP (CD 7))
    (. .)))


root(ROOT-0, 7-1)


(ROOT
  (S
    (VP
      (VP (VB Steam)
        (PP (IN for)
          (NP (CD 2) (NNS hours))))
      (CC and)
      (VP (VB leave)
        (ADVP (RB overnight))
        (PP (IN in)
          (NP (DT the) (NN fridge)))
        (S
          (VP (TO to)
            (VP (VB set))))))
    (. .)))


root(ROOT-0, Steam-1)
prep(Steam-1, for-2)
num(hours-4, 2-3)
pobj(for-2, hours-4)
cc(Steam-1, and-5)
conj(Steam-1, leave-6)
advmod(leave-6, overnight-7)
prep(leave-6, in-8)
det(fridge-10, the-9)
pobj(in-8, fridge-10)
aux(set-12, to-11)
xcomp(leave-6, set-12)


(ROOT
  (S
    (ADVP (RB Now))
    (NP (PRP we))
    (VP (MD can)
      (VP
        (VP (VB prepare)
          (NP (DT the) (JJ condiments) (NNP Pork) (NNP Lard)))
        (PRN (-LRB- -LRB-) (VB optional) (-RRB- -RRB-))
        (NP (CD 1))))
    (. .)))


advmod(prepare-4, Now-1)
nsubj(prepare-4, we-2)
aux(prepare-4, can-3)
root(ROOT-0, prepare-4)
det(Lard-8, the-5)
amod(Lard-8, condiments-6)
nn(Lard-8, Pork-7)
dobj(prepare-4, Lard-8)
dep(prepare-4, optional-10)
dobj(prepare-4, 1-12)


(ROOT
  (S
    (VP (VB Render)
      (NP (DT the) (NN pork) (NN lard))
      (PP (IN by)
        (S
          (VP
            (VP (VBG cutting)
              (NP (DT the) (NN fat))
              (PP (IN into)
                (NP (NNS cubes))))
            (CC and)
            (VP (VBG letting)
              (S
                (NP (PRP it))
                (ADJP (JJ render)
                  (PP (IN over)
                    (NP
                      (NP (DT a) (JJ slow) (NN fire))
                      (PRN (-LRB- -LRB-)
                        (VP (VBZ takes)
                          (PP (IN around)
                            (NP (CD 30) (NNS mins))))
                        (-RRB- -RRB-)))))))))))
    (. .)))


root(ROOT-0, Render-1)
det(lard-4, the-2)
nn(lard-4, pork-3)
dobj(Render-1, lard-4)
prep(Render-1, by-5)
pcomp(by-5, cutting-6)
det(fat-8, the-7)
dobj(cutting-6, fat-8)
prep(cutting-6, into-9)
pobj(into-9, cubes-10)
cc(cutting-6, and-11)
conj(cutting-6, letting-12)
nsubj(render-14, it-13)
xcomp(letting-12, render-14)
prep(render-14, over-15)
det(fire-18, a-16)
amod(fire-18, slow-17)
pobj(over-15, fire-18)
dep(fire-18, takes-20)
prep(takes-20, around-21)
num(mins-23, 30-22)
pobj(around-21, mins-23)


(ROOT
  (S
    (NP (PRP You))
    (VP (MD can)
      (VP (VB add)
        (NP (DT some) (NN pandan) (NNS leaves))
        (PP (IN for)
          (S
            (VP (VBG flavoring))))))
    (. .)))


nsubj(add-3, You-1)
aux(add-3, can-2)
root(ROOT-0, add-3)
det(leaves-6, some-4)
nn(leaves-6, pandan-5)
dobj(add-3, leaves-6)
prep(add-3, for-7)
pcomp(for-7, flavoring-8)


(ROOT
  (NP
    (NP (NNP Chye) (NNP Poh))
    (NP (CD 1))
    (. .)))


nn(Poh-2, Chye-1)
root(ROOT-0, Poh-2)
dep(Poh-2, 1-3)


(ROOT
  (S
    (ADVP (RB Finely))
    (VP
      (VP (VB chop)
        (NP
          (NP (CD two) (NNS cloves))
          (PP (IN of)
            (NP (NN garlic)))))
      (CC and)
      (VP (VB add)
        (NP (PRP them))
        (PP (TO to)
          (NP (DT the) (NNP Chye) (NNP Poh)))))
    (. .)))


advmod(chop-2, Finely-1)
root(ROOT-0, chop-2)
num(cloves-4, two-3)
dobj(chop-2, cloves-4)
prep(cloves-4, of-5)
pobj(of-5, garlic-6)
cc(chop-2, and-7)
conj(chop-2, add-8)
dobj(add-8, them-9)
prep(add-8, to-10)
det(Poh-13, the-11)
nn(Poh-13, Chye-12)
pobj(to-10, Poh-13)


(ROOT
  (S
    (VP
      (VP (VB Add)
        (NP (DT some) (NN pork) (NN lard)
          (CC or)
          (NN vegetable) (NN oil)))
      (CC and)
      (VP (VB cook)
        (SBAR (IN until)
          (S
            (NP (DT the) (JJ chye) (NN poh))
            (VP (VBZ turns)
              (NP (JJ brown)))))))
    (. .)))


root(ROOT-0, Add-1)
det(lard-4, some-2)
nn(lard-4, pork-3)
dobj(Add-1, lard-4)
cc(lard-4, or-5)
nn(oil-7, vegetable-6)
conj(lard-4, oil-7)
cc(Add-1, and-8)
conj(Add-1, cook-9)
mark(turns-14, until-10)
det(poh-13, the-11)
amod(poh-13, chye-12)
nsubj(turns-14, poh-13)
advcl(cook-9, turns-14)
dobj(turns-14, brown-15)


(ROOT
  (S
    (NP (PRP You))
    (VP (MD may)
      (VP (VB add)
        (NP (DT some) (NN sugar))
        (SBAR (IN if)
          (S
            (NP (PRP you))
            (VP (VBP prefer)
              (NP (PRP$ your) (JJ chye) (NN poh))
              (S
                (VP (TO to)
                  (VP (VB be)
                    (ADJP (JJ sweeter))))))))))
    (. .)))


nsubj(add-3, You-1)
aux(add-3, may-2)
root(ROOT-0, add-3)
det(sugar-5, some-4)
dobj(add-3, sugar-5)
mark(prefer-8, if-6)
nsubj(prefer-8, you-7)
advcl(add-3, prefer-8)
poss(poh-11, your-9)
amod(poh-11, chye-10)
dobj(prefer-8, poh-11)
aux(sweeter-14, to-12)
cop(sweeter-14, be-13)
xcomp(prefer-8, sweeter-14)


(ROOT
  (NP
    (NP (NNS Instructions))
    (PP (IN on)
      (S
        (VP (VBG frying)
          (SBAR (IN If)
            (S
              (NP (PRP I))
              (VP (VBD had)
                (NP (PRP$ my) (NN way))))))
        (, ,)))))


root(ROOT-0, Instructions-1)
prep(Instructions-1, on-2)
pcomp(on-2, frying-3)
mark(had-6, If-4)
nsubj(had-6, I-5)
advcl(frying-3, had-6)
poss(way-8, my-7)
dobj(had-6, way-8)


(ROOT
  (S
    (NP (PRP I))
    (VP (MD would)
      (VP (VB have)
        (S
          (NP (DT a) (JJ nice) (JJ flat) (NN cast) (NN iron))
          (VP (VB pan)
            (S
              (VP (TO to)
                (VP (VB fry)
                  (NP (DT the) (NN carrot) (NN cake))
                  (PP (IN over)
                    (NP (DT a) (NN charcoal) (NN fire))))))))))
    (. .)))


nsubj(have-3, I-1)
aux(have-3, would-2)
root(ROOT-0, have-3)
det(iron-8, a-4)
amod(iron-8, nice-5)
amod(iron-8, flat-6)
nn(iron-8, cast-7)
nsubj(pan-9, iron-8)
ccomp(have-3, pan-9)
aux(fry-11, to-10)
xcomp(pan-9, fry-11)
det(cake-14, the-12)
nn(cake-14, carrot-13)
dobj(fry-11, cake-14)
prep(fry-11, over-15)
det(fire-18, a-16)
nn(fire-18, charcoal-17)
pobj(over-15, fire-18)


(ROOT
  (S (CC But)
    (ADVP (IN since)
      (NP (DT this) (NN recipe)))
    (VP (VBZ is)
      (PP (IN for)
        (NP (NN home) (NN use))))
    (, ,)))


cc(is-5, But-1)
advmod(is-5, since-2)
det(recipe-4, this-3)
pobj(since-2, recipe-4)
root(ROOT-0, is-5)
prep(is-5, for-6)
nn(use-8, home-7)
pobj(for-6, use-8)


(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN taken)
        (NP
          (NP (NNP Chef) (NNP William) (POS 's))
          (NN advise)
          (S
            (VP (TO to)
              (VP (VB use)
                (S
                  (NP (DT a) (NN non) (NN stick))
                  (VP (VB pan)))))))))
    (. .)))


nsubj(taken-3, I-1)
aux(taken-3, have-2)
root(ROOT-0, taken-3)
nn(William-5, Chef-4)
poss(advise-7, William-5)
possessive(William-5, 's-6)
dobj(taken-3, advise-7)
aux(use-9, to-8)
infmod(advise-7, use-9)
det(stick-12, a-10)
nn(stick-12, non-11)
nsubj(pan-13, stick-12)
ccomp(use-9, pan-13)


(ROOT
  (S
    (NP (PRP It))
    (VP
      (VP
        (ADVP (RB actually))
        (VBZ works)
        (ADVP (RB pretty) (RB well)))
      (CC and)
      (VP (VBZ is)
        (ADJP (RBR more) (JJ practical))
        (PP (IN for)
          (NP (JJS most) (NNS people)))))
    (. .)))


nsubj(works-3, It-1)
advmod(works-3, actually-2)
root(ROOT-0, works-3)
advmod(well-5, pretty-4)
advmod(works-3, well-5)
cc(works-3, and-6)
cop(practical-9, is-7)
advmod(practical-9, more-8)
conj(works-3, practical-9)
prep(practical-9, for-10)
amod(people-12, most-11)
pobj(for-10, people-12)


(ROOT
  (FRAG
    (NP (CD 1))
    (. .)))


root(ROOT-0, 1-1)


(ROOT
  (S
    (VP (VB Cut)
      (NP (DT the) (NN carrot) (NN cake))
      (PP (IN into)
        (NP (CD 2) (NN cm) (NNS cubes))))
    (. .)))


root(ROOT-0, Cut-1)
det(cake-4, the-2)
nn(cake-4, carrot-3)
dobj(Cut-1, cake-4)
prep(Cut-1, into-5)
num(cubes-8, 2-6)
nn(cubes-8, cm-7)
pobj(into-5, cubes-8)


(ROOT
  (FRAG
    (NP (CD 2))
    (. .)))


root(ROOT-0, 2-1)


(ROOT
  (UCP
    (NP
      (NP (JJ Add) (NN oil))
      (PP (TO to)
        (NP (DT the) (NN pan))))
    (CC and)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP it))
        (VP (VBZ is)
          (ADJP (JJ hot)))
        (, ,)))))


amod(oil-2, Add-1)
root(ROOT-0, oil-2)
prep(oil-2, to-3)
det(pan-5, the-4)
pobj(to-3, pan-5)
cc(oil-2, and-6)
advmod(hot-10, when-7)
nsubj(hot-10, it-8)
cop(hot-10, is-9)
conj(oil-2, hot-10)


(ROOT
  (S
    (VP (VB add)
      (NP
        (NP (DT the) (NNS cubes))
        (PP (IN of)
          (NP (NN carrot) (NN cake)))))
    (. .)))


root(ROOT-0, add-1)
det(cubes-3, the-2)
dobj(add-1, cubes-3)
prep(cubes-3, of-4)
nn(cake-6, carrot-5)
pobj(of-4, cake-6)


(ROOT
  (S
    (VP (VB Press)
      (NP (DT the) (NN carrot) (NN cake))
      (ADVP (RB down) (RB gently)
        (PP (IN onto)
          (NP (DT the) (NN pan)))
        (RB so))
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBZ breaks)))))
    (. .)))


root(ROOT-0, Press-1)
det(cake-4, the-2)
nn(cake-4, carrot-3)
dobj(Press-1, cake-4)
advmod(so-10, down-5)
advmod(so-10, gently-6)
prep(so-10, onto-7)
det(pan-9, the-8)
pobj(onto-7, pan-9)
advmod(Press-1, so-10)
mark(breaks-13, that-11)
nsubj(breaks-13, it-12)
ccomp(Press-1, breaks-13)


(ROOT
  (S
    (NP (DT This))
    (VP (VBZ creates)
      (NP
        (NP (DT an) (NN irregular) (NN surface))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ enables)
              (NP (DT the) (JJ chye) (NN poh)
                (CC and)
                (NN fish) (NN sauce))
              (S
                (VP (TO to)
                  (VP (VB stick)
                    (PP (TO to))))))))))
    (. .)))


nsubj(creates-2, This-1)
root(ROOT-0, creates-2)
det(surface-5, an-3)
nn(surface-5, irregular-4)
dobj(creates-2, surface-5)
nsubj(enables-7, which-6)
rcmod(surface-5, enables-7)
det(poh-10, the-8)
amod(poh-10, chye-9)
dobj(enables-7, poh-10)
cc(poh-10, and-11)
nn(sauce-13, fish-12)
conj(poh-10, sauce-13)
aux(stick-15, to-14)
xcomp(enables-7, stick-15)
prep(stick-15, to-16)


(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (ADJP (RB much) (JJR better))
      (S
        (ADVP (RB then))
        (VP (VBG chopping)
          (NP (DT the) (NN carrot) (NN cake))
          (PP (IN with)
            (NP (DT a) (NN knife)))))
      (PP (IN into)
        (NP (JJR smaller) (NNS cubes)))
      (SBAR (IN as)
        (S
          (NP (PRP you))
          (VP (VBP get)
            (NP (RB only) (JJ smooth) (NN surface))
            (PP (IN on)
              (NP
                (NP (PRP$ your) (NN carrot) (NN cake))
                (NP (DT that) (NN way))))))))
    (. .)))


nsubj(better-4, This-1)
cop(better-4, is-2)
advmod(better-4, much-3)
root(ROOT-0, better-4)
advmod(chopping-6, then-5)
xcomp(better-4, chopping-6)
det(cake-9, the-7)
nn(cake-9, carrot-8)
dobj(chopping-6, cake-9)
prep(chopping-6, with-10)
det(knife-12, a-11)
pobj(with-10, knife-12)
prep(better-4, into-13)
amod(cubes-15, smaller-14)
pobj(into-13, cubes-15)
mark(get-18, as-16)
nsubj(get-18, you-17)
advcl(better-4, get-18)
advmod(surface-21, only-19)
amod(surface-21, smooth-20)
dobj(get-18, surface-21)
prep(get-18, on-22)
poss(cake-25, your-23)
nn(cake-25, carrot-24)
pobj(on-22, cake-25)
det(way-27, that-26)
dep(cake-25, way-27)


(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (PRP$ its) (JJR better))
          (VP (TO to)
            (VP
              (VP (VB start)
                (PP (IN with)
                  (NP (JJR larger) (NNS cubes))))
              (CC and)
              (VP (VB break)
                (NP (PRP it))
                (PP (IN into)
                  (NP
                    (NP (NN irregular))
                    (VP (VBN shaped)
                      (NP (JJR smaller) (NNS chunks)))))))))))
    (. .)))


nsubj(is-2, That-1)
root(ROOT-0, is-2)
advmod(start-7, why-3)
poss(better-5, its-4)
nsubj(start-7, better-5)
aux(start-7, to-6)
xcomp(is-2, start-7)
prep(start-7, with-8)
amod(cubes-10, larger-9)
pobj(with-8, cubes-10)
cc(start-7, and-11)
conj(start-7, break-12)
dobj(break-12, it-13)
prep(break-12, into-14)
pobj(into-14, irregular-15)
partmod(irregular-15, shaped-16)
amod(chunks-18, smaller-17)
dobj(shaped-16, chunks-18)


(ROOT
  (S
    (NP (DT The) (NN aim))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB have)
            (NP
              (NP (DT some) (JJ large) (NNS pieces))
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (PRP you))
                  (VP (MD can)
                    (VP (VB taste)
                      (NP
                        (NP (DT the) (NN rice)
                          (CC and)
                          (NN radish))
                        (CC and)
                        (NP (DT some) (JJR smaller) (NNS pieces)))
                      (SBAR (IN that)
                        (S
                          (S
                            (VP (VB get)
                              (ADJP (JJ charred))))
                          (CC and)
                          (S
                            (VP (VBN coated)
                              (PP (IN with)
                                (NP (JJ chye) (NN poh)
                                  (CC and)
                                  (NN fish) (NN sauce))))))))))))))))
    (. .)))


det(aim-2, The-1)
nsubj(is-3, aim-2)
root(ROOT-0, is-3)
aux(have-5, to-4)
xcomp(is-3, have-5)
det(pieces-8, some-6)
amod(pieces-8, large-7)
dobj(have-5, pieces-8)
advmod(taste-12, where-9)
nsubj(taste-12, you-10)
aux(taste-12, can-11)
rcmod(pieces-8, taste-12)
det(rice-14, the-13)
dobj(taste-12, rice-14)
cc(rice-14, and-15)
conj(rice-14, radish-16)
cc(rice-14, and-17)
det(pieces-20, some-18)
amod(pieces-20, smaller-19)
conj(rice-14, pieces-20)
mark(charred-23, that-21)
dep(charred-23, get-22)
ccomp(taste-12, charred-23)
cc(charred-23, and-24)
conj(charred-23, coated-25)
prep(coated-25, with-26)
amod(poh-28, chye-27)
pobj(with-26, poh-28)
cc(poh-28, and-29)
nn(sauce-31, fish-30)
conj(poh-28, sauce-31)


(ROOT
  (FRAG
    (NP (CD 3))
    (. .)))


root(ROOT-0, 3-1)


(ROOT
  (S
    (VP
      (VP (VB Add)
        (NP (NN fish) (NN sauce)))
      (CC and)
      (VP (VB continue)
        (PP (TO to)
          (NP
            (QP (CD fry) (CD 4))))))
    (. .)))


root(ROOT-0, Add-1)
nn(sauce-3, fish-2)
dobj(Add-1, sauce-3)
cc(Add-1, and-4)
conj(Add-1, continue-5)
prep(continue-5, to-6)
number(4-8, fry-7)
pobj(to-6, 4-8)


(ROOT
  (S
    (VP
      (VP (VB Add)
        (NP (NNP Chye) (NNP Poh) (NN mixture)))
      (CC and)
      (VP (VB continue)
        (PP (TO to)
          (NP (NN fry)))
        (SBAR (IN till)
          (S
            (NP (PRP it))
            (VP
              (VP (VBZ develops))
              (CC and)
              (VP (NN nice) (NN crust)))))))
    (. .)))


root(ROOT-0, Add-1)
nn(mixture-4, Chye-2)
nn(mixture-4, Poh-3)
dobj(Add-1, mixture-4)
cc(Add-1, and-5)
conj(Add-1, continue-6)
prep(continue-6, to-7)
pobj(to-7, fry-8)
mark(develops-11, till-9)
nsubj(develops-11, it-10)
advcl(continue-6, develops-11)
cc(develops-11, and-12)
conj(develops-11, nice-13)
dep(nice-13, crust-14)


(ROOT
  (FRAG
    (NP (CD 5))
    (. .)))


root(ROOT-0, 5-1)


(ROOT
  (S
    (VP (VB Add)
      (NP (NNS eggs)
        (CC and)
        (NN fry))
      (PP (IN till)
        (NP (JJ brown))))
    (. .)))


root(ROOT-0, Add-1)
dobj(Add-1, eggs-2)
cc(eggs-2, and-3)
conj(eggs-2, fry-4)
prep(Add-1, till-5)
pobj(till-5, brown-6)


(ROOT
  (S
    (VP (VB Serve)
      (PP (IN with)
        (NP
          (NP (JJ chopped) (NN spring) (NNS onions))
          (CC and)
          (NP
            (NP (DT a) (NN dash))
            (PP (IN of)
              (NP (JJ white) (NN pepper) (NNP Black) (NNP Version) (CD 1)))))))
    (. .)))


root(ROOT-0, Serve-1)
prep(Serve-1, with-2)
amod(onions-5, chopped-3)
nn(onions-5, spring-4)
pobj(with-2, onions-5)
cc(onions-5, and-6)
det(dash-8, a-7)
conj(onions-5, dash-8)
prep(dash-8, of-9)
amod(Version-13, white-10)
nn(Version-13, pepper-11)
nn(Version-13, Black-12)
pobj(of-9, Version-13)
num(Version-13, 1-14)


(ROOT
  (FRAG
    (PP (IN With)
      (NP (DT the) (JJ black) (NN version)))
    (, ,)))


root(ROOT-0, With-1)
det(version-4, the-2)
amod(version-4, black-3)
pobj(With-1, version-4)


(ROOT
  (S
    (VP (VB add)
      (NP
        (NP (DT the) (JJ dark) (NN sauce))
        (PP (IN towards)
          (NP
            (NP (DT the) (NN end))
            (PP (IN of)
              (NP (DT the) (VBG frying) (NN process)))))))
    (. .)))


root(ROOT-0, add-1)
det(sauce-4, the-2)
amod(sauce-4, dark-3)
dobj(add-1, sauce-4)
prep(sauce-4, towards-5)
det(end-7, the-6)
pobj(towards-5, end-7)
prep(end-7, of-8)
det(process-11, the-9)
amod(process-11, frying-10)
pobj(of-8, process-11)


(ROOT
  (S
    (VP (VB Fry)
      (SBAR (IN till)
        (S
          (NP (PRP you))
          (VP
            (VP (VB develop)
              (NP (DT some) (NN crust))
              (PP (IN on)
                (NP (DT the) (NN carrot) (NN cake))))
            (CC and)
            (VP
              (ADVP (RB then))
              (VB reduce)
              (NP (DT the) (NN heat)))
            (CC and)
            (VP (VB add)
              (NP (DT the) (JJ sweet) (JJ black) (NN sauce)))))))
    (. .)))


root(ROOT-0, Fry-1)
mark(develop-4, till-2)
nsubj(develop-4, you-3)
advcl(Fry-1, develop-4)
det(crust-6, some-5)
dobj(develop-4, crust-6)
prep(develop-4, on-7)
det(cake-10, the-8)
nn(cake-10, carrot-9)
pobj(on-7, cake-10)
cc(develop-4, and-11)
advmod(reduce-13, then-12)
conj(develop-4, reduce-13)
det(heat-15, the-14)
dobj(reduce-13, heat-15)
cc(develop-4, and-16)
conj(develop-4, add-17)
det(sauce-21, the-18)
amod(sauce-21, sweet-19)
amod(sauce-21, black-20)
dobj(add-17, sauce-21)


(ROOT
  (S
    (NP (NNS Toss))
    (ADVP (IN until) (RB evenly))
    (VP (VBD coasted))
    (. .)))


nsubj(coasted-4, Toss-1)
advmod(coasted-4, until-2)
advmod(until-2, evenly-3)
root(ROOT-0, coasted-4)


(ROOT
  (S
    (ADVP (RB Then))
    (VP
      (VP (VB turn)
        (PRT (RP off))
        (NP (DT the) (NN fire)))
      (CC and)
      (VP (VB add)
        (NP
          (NP
            (NP (DT some))
            (NP
              (ADJP (RBR more) (JJ sweet))
              (NN sauce)))
          (, ,))))))


advmod(turn-2, Then-1)
root(ROOT-0, turn-2)
prt(turn-2, off-3)
det(fire-5, the-4)
dobj(turn-2, fire-5)
cc(turn-2, and-6)
conj(turn-2, add-7)
dobj(add-7, some-8)
advmod(sweet-10, more-9)
amod(sauce-11, sweet-10)
dep(some-8, sauce-11)


(ROOT
  (S
    (VP
      (VP (VB stir)
        (NP (NN fry))
        (PP (IN till)
          (ADVP (RB even))))
      (CC and)
      (VP
        (ADVP (RB then))
        (VB serve)))
    (. .)))


root(ROOT-0, stir-1)
dobj(stir-1, fry-2)
prep(stir-1, till-3)
pcomp(till-3, even-4)
cc(stir-1, and-5)
advmod(serve-7, then-6)
conj(stir-1, serve-7)


(ROOT
  (S (-LRB- -LRB-)
    (VP (VB Note))
    (: :)))




(ROOT
  (S
    (NP (JJ Sweet) (JJ black) (NN sauce))
    (VP (VBZ turns)
      (ADJP (JJ bitter))
      (SBAR (IN if)
        (S
          (S
            (VP (VBN subjected)
              (PP (TO to)
                (NP
                  (NP (RB too) (JJ much) (NN heat) (-RRB- -RRB-))
                  (SBAR
                    (S
                      (NP (NNP Conclusion) (NNP Hope) (PRP you))
                      (RB all)
                      (VP
                        (VP (VB enjoy)
                          (NP (DT the) (NN recipe)))
                        (CC and)
                        (VP (VB do)))))))))
          (VP (VBD let)
            (SBAR
              (S
                (NP (PRP us))
                (VP (VBP know)
                  (SBAR
                    (WHADVP (WRB how))
                    (S
                      (NP (PRP$ your) (NN carrot) (NN cake))
                      (VP (VBD went)))))))))))
    (. !)))


amod(sauce-3, Sweet-1)
amod(sauce-3, black-2)
nsubj(turns-4, sauce-3)
root(ROOT-0, turns-4)
acomp(turns-4, bitter-5)
mark(let-22, if-6)
csubj(let-22, subjected-7)
prep(subjected-7, to-8)
advmod(heat-11, too-9)
amod(heat-11, much-10)
pobj(to-8, heat-11)
nn(Hope-14, Conclusion-13)
nsubj(enjoy-17, Hope-14)
dep(Hope-14, you-15)
advmod(enjoy-17, all-16)
rcmod(heat-11, enjoy-17)
det(recipe-19, the-18)
dobj(enjoy-17, recipe-19)
cc(enjoy-17, and-20)
conj(enjoy-17, do-21)
advcl(turns-4, let-22)
nsubj(know-24, us-23)
ccomp(let-22, know-24)
advmod(went-29, how-25)
poss(cake-28, your-26)
nn(cake-28, carrot-27)
nsubj(went-29, cake-28)
ccomp(know-24, went-29)


(ROOT
  (NP
    (NP (JJ Acknowledgements) (JJ Many) (NNS thanks))
    (PP (TO to)
      (NP
        (NP (NNP Chef) (NNP William) (NNP Soh))
        (PP (IN for)
          (S
            (VP (VBG sharing)
              (NP (PRP$ his) (NN family) (NN recipe)))))))
    (. !)))


amod(thanks-3, Acknowledgements-1)
amod(thanks-3, Many-2)
root(ROOT-0, thanks-3)
prep(thanks-3, to-4)
nn(Soh-7, Chef-5)
nn(Soh-7, William-6)
pobj(to-4, Soh-7)
prep(Soh-7, for-8)
pcomp(for-8, sharing-9)
poss(recipe-12, his-10)
nn(recipe-12, family-11)
dobj(sharing-9, recipe-12)


(ROOT
  (S
    (NP (NNP Chef) (NNP William))
    (VP (VBD grew)
      (PRT (RP up))
      (S
        (VP (VBG helping)
          (NP (PRP$ his) (NN father))
          (PP (IN at)
            (NP (PRP$ their) (NN carrot) (NN cake) (NN stall))))))
    (. .)))


nn(William-2, Chef-1)
nsubj(grew-3, William-2)
root(ROOT-0, grew-3)
prt(grew-3, up-4)
xcomp(grew-3, helping-5)
poss(father-7, his-6)
dobj(helping-5, father-7)
prep(helping-5, at-8)
poss(stall-12, their-9)
nn(stall-12, carrot-10)
nn(stall-12, cake-11)
pobj(at-8, stall-12)


(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ recalls)
      (S
        (VP (VBG spending)
          (NP (PRP$ his) (NN time))
          (PP (IN as)
            (NP (DT a) (NN kid))))))
    (, ,)))


nsubj(recalls-2, He-1)
root(ROOT-0, recalls-2)
xcomp(recalls-2, spending-3)
poss(time-5, his-4)
dobj(spending-3, time-5)
prep(spending-3, as-6)
det(kid-8, a-7)
pobj(as-6, kid-8)


(ROOT
  (S
    (VP (VBG fanning)
      (NP
        (NP (DT the) (NNS flames))
        (PP (IN of)
          (NP (DT the) (NN wood) (NN fire)))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ is)
              (VP (VBN used)
                (S
                  (VP (TO to)
                    (VP (VB steam)
                      (NP (PRP$ their) (NN carrot) (NN cake)))))))))))
    (. !)))


root(ROOT-0, fanning-1)
det(flames-3, the-2)
dobj(fanning-1, flames-3)
prep(flames-3, of-4)
det(fire-7, the-5)
nn(fire-7, wood-6)
pobj(of-4, fire-7)
nsubjpass(used-10, which-8)
auxpass(used-10, is-9)
rcmod(flames-3, used-10)
aux(steam-12, to-11)
xcomp(used-10, steam-12)
poss(cake-15, their-13)
nn(cake-15, carrot-14)
dobj(steam-12, cake-15)


