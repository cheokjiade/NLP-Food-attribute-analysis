(ROOT
  (S
    (NP (RBR Earlier) (DT this) (NN year))
    (NP (PRP I))
    (VP (VBD started)
      (S
        (VP (TO to)
          (VP (VB make)
            (NP (PRP$ my) (JJ own) (JJ Italian) (NN style) (NN pizza))))))
    (. .)))


advmod(year-3, Earlier-1)
det(year-3, this-2)
tmod(started-5, year-3)
nsubj(started-5, I-4)
root(ROOT-0, started-5)
aux(make-7, to-6)
xcomp(started-5, make-7)
poss(pizza-12, my-8)
amod(pizza-12, own-9)
amod(pizza-12, Italian-10)
nn(pizza-12, style-11)
dobj(make-7, pizza-12)


(ROOT
  (S
    (NP (PRP I))
    (VP (VBD thought)
      (SBAR
        (S
          (NP (PRP it))
          (VP (MD would)
            (VP (VB be)
              (ADJP (JJ interesting)
                (S
                  (VP (TO to)
                    (VP (VB have)
                      (NP
                        (NP (DT a) (NN pizza) (NN party))
                        (SBAR
                          (WHADVP (WRB where))
                          (S
                            (NP (PRP I))
                            (VP (VBD provided)
                              (SBAR
                                (S
                                  (NP
                                    (NP (DT the) (NN base))
                                    (CC and)
                                    (NP (NN everyone) (RB else)))
                                  (VP (MD could)
                                    (VP
                                      (VP (VB bring)
                                        (NP (PRP$ their) (JJ own) (NNS toppings)))
                                      (CC and)
                                      (VP (VB design)
                                        (NP (PRP$ their) (JJ own) (NN pizza))))))))))))))))))))
    (. .)))


nsubj(thought-2, I-1)
root(ROOT-0, thought-2)
nsubj(interesting-6, it-3)
aux(interesting-6, would-4)
cop(interesting-6, be-5)
ccomp(thought-2, interesting-6)
aux(have-8, to-7)
xcomp(interesting-6, have-8)
det(party-11, a-9)
nn(party-11, pizza-10)
dobj(have-8, party-11)
advmod(provided-14, where-12)
nsubj(provided-14, I-13)
rcmod(party-11, provided-14)
det(base-16, the-15)
nsubj(bring-21, base-16)
cc(base-16, and-17)
conj(base-16, everyone-18)
advmod(everyone-18, else-19)
aux(bring-21, could-20)
ccomp(provided-14, bring-21)
poss(toppings-24, their-22)
amod(toppings-24, own-23)
dobj(bring-21, toppings-24)
cc(bring-21, and-25)
conj(bring-21, design-26)
poss(pizza-29, their-27)
amod(pizza-29, own-28)
dobj(design-26, pizza-29)


(ROOT
  (S
    (NP (DT This))
    (VP (MD would)
      (VP (VB be)
        (NP
          (NP (NN something))
          (ADJP
            (NP (DT a) (RB little))
            (JJ different)))
        (PP (IN from)
          (NP
            (NP (DT the) (JJ usual) (NN pot-luck))
            (CC and)
            (NP (NNP BBQs))))))
    (. .)))


nsubj(something-4, This-1)
aux(something-4, would-2)
cop(something-4, be-3)
root(ROOT-0, something-4)
det(little-6, a-5)
npadvmod(different-7, little-6)
amod(something-4, different-7)
prep(something-4, from-8)
det(pot-luck-11, the-9)
amod(pot-luck-11, usual-10)
pobj(from-8, pot-luck-11)
cc(pot-luck-11, and-12)
conj(pot-luck-11, BBQs-13)


(ROOT
  (S
    (NP (DT A) (NN pizza))
    (VP (VBZ is)
      (ADVP (RB basically))
      (NP
        (NP (DT a) (JJ flat) (NN yeast) (NN bread))
        (PP (IN with)
          (NP (DT a) (NN tomato) (NN sauce)
            (CC and)
            (NN cheese)))))
    (. .)))


det(pizza-2, A-1)
nsubj(bread-8, pizza-2)
cop(bread-8, is-3)
advmod(bread-8, basically-4)
det(bread-8, a-5)
amod(bread-8, flat-6)
nn(bread-8, yeast-7)
root(ROOT-0, bread-8)
prep(bread-8, with-9)
det(sauce-12, a-10)
nn(sauce-12, tomato-11)
pobj(with-9, sauce-12)
cc(sauce-12, and-13)
conj(sauce-12, cheese-14)


(ROOT
  (SBAR (IN Once)
    (S
      (NP (PRP you))
      (VP (VBP have)
        (NP (DT this) (NN base)))
      (, ,))))


mark(have-3, Once-1)
nsubj(have-3, you-2)
root(ROOT-0, have-3)
det(base-5, this-4)
dobj(have-3, base-5)


(ROOT
  (S
    (NP (PRP you))
    (VP (MD can)
      (VP (VB have)
        (NP
          (NP (DT a) (NN whale))
          (PP (IN of)
            (NP
              (NP (DT a) (NN time))
              (VP (VBG thinking)
                (PRT (RP up))
                (NP
                  (NP (JJ different) (NNS types))
                  (PP (IN of)
                    (NP
                      (NP (NNS toppings))
                      (PP (IN for)
                        (NP (PRP$ your) (NN pizza))))))))))))
    (. .)))


nsubj(have-3, you-1)
aux(have-3, can-2)
root(ROOT-0, have-3)
det(whale-5, a-4)
dobj(have-3, whale-5)
prep(whale-5, of-6)
det(time-8, a-7)
pobj(of-6, time-8)
partmod(time-8, thinking-9)
prt(thinking-9, up-10)
amod(types-12, different-11)
dobj(thinking-9, types-12)
prep(types-12, of-13)
pobj(of-13, toppings-14)
prep(toppings-14, for-15)
poss(pizza-17, your-16)
pobj(for-15, pizza-17)


(ROOT
  (S
    (NP (PRP You))
    (VP (MD can)
      (PP (IN of)
        (NP (NN course)))
      (VP (VB buy)
        (ADJP (JJ ready)
          (SBAR
            (S
              (VP (VBD made)
                (NP (NNS bases))
                (PP (IN at)
                  (NP (DT the) (NN supermarket)))))))))
    (, ,)))


nsubj(buy-5, You-1)
aux(buy-5, can-2)
prep(buy-5, of-3)
pobj(of-3, course-4)
root(ROOT-0, buy-5)
acomp(buy-5, ready-6)
ccomp(ready-6, made-7)
dobj(made-7, bases-8)
prep(made-7, at-9)
det(supermarket-11, the-10)
pobj(at-9, supermarket-11)


(ROOT
  (S (CC but)
    (S
      (VP (VBG making)
        (NP (PRP$ your) (JJ own) (NN base))))
    (VP (VBZ is)
      (ADJP (RBR more) (JJ satisfying)))
    (. .)))


cc(satisfying-8, but-1)
csubj(satisfying-8, making-2)
poss(base-5, your-3)
amod(base-5, own-4)
dobj(making-2, base-5)
cop(satisfying-8, is-6)
advmod(satisfying-8, more-7)
root(ROOT-0, satisfying-8)


(ROOT
  (S
    (NP (RB Not) (JJ only))
    (VP (VBZ is)
      (ADJP
        (NP (PRP it))
        (JJR cheaper)))
    (, ,)))


neg(only-2, Not-1)
nsubj(cheaper-5, only-2)
cop(cheaper-5, is-3)
npadvmod(cheaper-5, it-4)
root(ROOT-0, cheaper-5)


(ROOT
  (S (CC but)
    (NP (DT the) (NN taste))
    (VP (VBZ is)
      (NP (CD 200) (NN %)))))


cc(%-6, but-1)
det(taste-3, the-2)
nsubj(%-6, taste-3)
cop(%-6, is-4)
num(%-6, 200-5)
root(ROOT-0, %-6)


(ROOT
  (FRAG
    (ADJP (JJR better))
    (. .)))


root(ROOT-0, better-1)


(ROOT
  (S
    (S
      (VP (VBG Making)
        (NP (DT the) (NN pizza) (NN dough))))
    (VP (VBZ is)
      (ADJP (JJR easier))
      (SBAR (IN than)
        (S
          (NP (PRP you))
          (VP (VBP think)))))
    (. .)))


csubj(easier-6, Making-1)
det(dough-4, the-2)
nn(dough-4, pizza-3)
dobj(Making-1, dough-4)
cop(easier-6, is-5)
root(ROOT-0, easier-6)
mark(think-9, than-7)
nsubj(think-9, you-8)
advcl(easier-6, think-9)


(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (RB essentially) (JJ flour)))
    (, ,)))


nsubj(flour-4, It-1)
cop(flour-4, is-2)
advmod(flour-4, essentially-3)
root(ROOT-0, flour-4)


(ROOT
  (FRAG
    (PP (IN water))
    (, ,)))


root(ROOT-0, water-1)


(ROOT
  (FRAG
    (PP (IN yeast))
    (, ,)))


root(ROOT-0, yeast-1)


(ROOT
  (S
    (NP
      (NP (NN salt))
      (CC and)
      (NP (JJ olive) (NN oil)))
    (VP
      (VP (VBN mixed)
        (ADVP (RB together)))
      (CC and)
      (VP (VBN left)
        (S
          (VP (TO to)
            (VP (VB rise))))))
    (. .)))


nsubj(mixed-5, salt-1)
cc(salt-1, and-2)
amod(oil-4, olive-3)
conj(salt-1, oil-4)
root(ROOT-0, mixed-5)
advmod(mixed-5, together-6)
cc(mixed-5, and-7)
conj(mixed-5, left-8)
aux(rise-10, to-9)
xcomp(left-8, rise-10)


(ROOT
  (S
    (ADVP (RB Now))
    (NP
      (NP (DT the) (NN key))
      (PP (TO to)
        (NP (DT a) (JJ great) (NN base))))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB be)
            (ADJP (JJ able)
              (S
                (VP (TO to)
                  (VP (VB get)
                    (S
                      (NP (DT a) (JJ nice) (NN crumb) (NN ie))
                      (NP
                        (NP (DT the) (NNS holes))
                        (PP (IN inside)
                          (NP (DT the) (JJ crispy) (NN crust)))))))))))))
    (. .)))


advmod(is-8, Now-1)
det(key-3, the-2)
nsubj(is-8, key-3)
prep(key-3, to-4)
det(base-7, a-5)
amod(base-7, great-6)
pobj(to-4, base-7)
root(ROOT-0, is-8)
aux(able-11, to-9)
cop(able-11, be-10)
xcomp(is-8, able-11)
aux(get-13, to-12)
xcomp(able-11, get-13)
det(ie-17, a-14)
amod(ie-17, nice-15)
nn(ie-17, crumb-16)
nsubj(holes-19, ie-17)
det(holes-19, the-18)
xcomp(get-13, holes-19)
prep(holes-19, inside-20)
det(crust-23, the-21)
amod(crust-23, crispy-22)
pobj(inside-20, crust-23)


(ROOT
  (S
    (NP (PRP I))
    (VP (VBD found)
      (SBAR (IN that)
        (S
          (NP
            (NP (DT the) (NN secret))
            (PP (TO to)
              (NP (DT this))))
          (VP (VBZ is)
            (NP (DT a) (JJ wet) (NN dough))))))
    (. .)))


nsubj(found-2, I-1)
root(ROOT-0, found-2)
mark(dough-11, that-3)
det(secret-5, the-4)
nsubj(dough-11, secret-5)
prep(secret-5, to-6)
pobj(to-6, this-7)
cop(dough-11, is-8)
det(dough-11, a-9)
amod(dough-11, wet-10)
ccomp(found-2, dough-11)


(ROOT
  (S
    (NP
      (NP (DT The) (NN problem))
      (PP (IN with)
        (NP (DT the) (JJ wet) (NN dough))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (ADJP (RB very) (JJ difficult))
            (S
              (VP (TO to)
                (VP (VB knead)
                  (NP (PRP it))
                  (PP (IN by)
                    (NP (NN hand))))))
            (SBAR (IN because)
              (S
                (NP (PRP it))
                (VP (VBZ is)
                  (ADJP (RB so) (JJ sticky))
                  (SBAR (IN that)
                    (S
                      (NP (PRP you))
                      (VP (VBP need)
                        (S
                          (VP (TO to)
                            (VP (VB keep)
                              (S
                                (VP (VBG scraping)
                                  (NP (DT the) (NN dough))
                                  (PP (IN off)
                                    (NP (PRP$ your) (NN hand))))))))))))))))))
    (. .)))


det(problem-2, The-1)
nsubj(is-7, problem-2)
prep(problem-2, with-3)
det(dough-6, the-4)
amod(dough-6, wet-5)
pobj(with-3, dough-6)
root(ROOT-0, is-7)
mark(difficult-12, that-8)
nsubj(difficult-12, it-9)
cop(difficult-12, is-10)
advmod(difficult-12, very-11)
ccomp(is-7, difficult-12)
aux(knead-14, to-13)
xcomp(difficult-12, knead-14)
dobj(knead-14, it-15)
prep(knead-14, by-16)
pobj(by-16, hand-17)
mark(sticky-22, because-18)
nsubj(sticky-22, it-19)
cop(sticky-22, is-20)
advmod(sticky-22, so-21)
advcl(difficult-12, sticky-22)
mark(need-25, that-23)
nsubj(need-25, you-24)
ccomp(sticky-22, need-25)
aux(keep-27, to-26)
xcomp(need-25, keep-27)
xcomp(keep-27, scraping-28)
det(dough-30, the-29)
dobj(scraping-28, dough-30)
prep(scraping-28, off-31)
poss(hand-33, your-32)
pobj(off-31, hand-33)


(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (ADVP (RB then))
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (VBD found)
            (PRT (RP out))
            (SBAR (IN that)
              (S
                (NP (PRP you))
                (VP (MD can)
                  (ADVP (RB actually))
                  (VP (VB knead)
                    (NP
                      (NP (NN bread) (NN dough))
                      (VP (VBG using)
                        (NP
                          (NP (DT a) (NN food) (NN processor))
                          (CC and)
                          (NP
                            (NP (JJS best))
                            (PP (IN of)
                              (NP (DT all)))))))))))))))
    (, ,)))


nsubj(was-2, It-1)
root(ROOT-0, was-2)
advmod(was-2, then-3)
mark(found-6, that-4)
nsubj(found-6, I-5)
ccomp(was-2, found-6)
prt(found-6, out-7)
mark(knead-12, that-8)
nsubj(knead-12, you-9)
aux(knead-12, can-10)
advmod(knead-12, actually-11)
ccomp(found-6, knead-12)
nn(dough-14, bread-13)
dobj(knead-12, dough-14)
partmod(dough-14, using-15)
det(processor-18, a-16)
nn(processor-18, food-17)
dobj(using-15, processor-18)
cc(processor-18, and-19)
conj(processor-18, best-20)
prep(best-20, of-21)
pobj(of-21, all-22)


(ROOT
  (S
    (NP
      (NP (CD 10) (NNS minutes))
      (PP (IN of)
        (NP (NN hand) (NNS kneading))))
    (VP (MD can)
      (VP (VB be)
        (VP (VBN reduced)
          (PP (TO to)
            (NP
              (NP (DT a) (JJ mere) (CD 1) (NN min))
              (PP (IN of)
                (NP (NN processing)))))
          (PP (IN in)
            (NP (DT a) (NN food) (NN processor))))))
    (. .)))


num(minutes-2, 10-1)
nsubjpass(reduced-8, minutes-2)
prep(minutes-2, of-3)
nn(kneading-5, hand-4)
pobj(of-3, kneading-5)
aux(reduced-8, can-6)
auxpass(reduced-8, be-7)
root(ROOT-0, reduced-8)
prep(reduced-8, to-9)
det(min-13, a-10)
amod(min-13, mere-11)
num(min-13, 1-12)
pobj(to-9, min-13)
prep(min-13, of-14)
pobj(of-14, processing-15)
prep(reduced-8, in-16)
det(processor-19, a-17)
nn(processor-19, food-18)
pobj(in-16, processor-19)


(ROOT
  (S (IN So)
    (NP (PRP I))
    (VP (VBD went)
      (PRT (RP off))
      (S
        (VP (TO to)
          (VP (VB buy)
            (NP
              (NP (CD one))
              (PP (IN of)
                (NP (DT those) (NN food) (NNS processors))))
            (SBAR (IN that)
              (S
                (NP (PRP you))
                (VP (VBP find)
                  (PP (IN at)
                    (NP (NNP Best) (NNP Denki))))))))))
    (. .)))


dep(went-3, So-1)
nsubj(went-3, I-2)
root(ROOT-0, went-3)
prt(went-3, off-4)
aux(buy-6, to-5)
xcomp(went-3, buy-6)
dobj(buy-6, one-7)
prep(one-7, of-8)
det(processors-11, those-9)
nn(processors-11, food-10)
pobj(of-8, processors-11)
mark(find-14, that-12)
nsubj(find-14, you-13)
ccomp(buy-6, find-14)
prep(find-14, at-15)
nn(Denki-17, Best-16)
pobj(at-15, Denki-17)


(ROOT
  (S
    (NP (PRP I))
    (VP (VBD bought)
      (NP
        (NP (CD one))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBD cost)
              (PP (IN around)
                (NP (NNP $))))))))))


nsubj(bought-2, I-1)
root(ROOT-0, bought-2)
dobj(bought-2, one-3)
nsubj(cost-5, which-4)
rcmod(one-3, cost-5)
prep(cost-5, around-6)
pobj(around-6, $-7)


(ROOT
  (S
    (NP
      (NP (CD 170))
      (SBAR
        (WHNP (WDT which))
        (S
          (NP (PRP I))
          (VP (VBD thought)))))
    (VP (VBD was)
      (NP
        (NP (DT a)
          (ADJP (RB pretty) (JJ good))
          (NN machine))
        (SBAR (IN since)
          (S
            (NP (PRP it))
            (VP (VBD had)
              (NP (DT a) (JJ German) (NN name)))))))
    (. .)))


nsubj(machine-9, 170-1)
dobj(thought-4, which-2)
nsubj(thought-4, I-3)
rcmod(170-1, thought-4)
cop(machine-9, was-5)
det(machine-9, a-6)
advmod(good-8, pretty-7)
amod(machine-9, good-8)
root(ROOT-0, machine-9)
mark(had-12, since-10)
nsubj(had-12, it-11)
dep(machine-9, had-12)
det(name-15, a-13)
amod(name-15, German-14)
dobj(had-12, name-15)


(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP (DT a)
          (ADJP (JJ fantastic))
          (NN machine))
        (SBAR
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP it))
              (VP (VBD came)
                (PP (TO to)
                  (S
                    (VP (VBG chopping)
                      (PRT (RP up))
                      (NP (NN stuff))))))))
          (CC but)
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP I))
              (VP (VBD tried)
                (S
                  (VP (TO to)
                    (VP (VB make)
                      (NP (NN bread) (NN dough)))))))))))
    (, ,)))


nsubj(machine-5, It-1)
cop(machine-5, was-2)
det(machine-5, a-3)
amod(machine-5, fantastic-4)
root(ROOT-0, machine-5)
advmod(came-8, when-6)
nsubj(came-8, it-7)
dep(machine-5, came-8)
prep(came-8, to-9)
pcomp(to-9, chopping-10)
prt(chopping-10, up-11)
dobj(chopping-10, stuff-12)
cc(came-8, but-13)
advmod(tried-16, when-14)
nsubj(tried-16, I-15)
conj(came-8, tried-16)
aux(make-18, to-17)
xcomp(tried-16, make-18)
nn(dough-20, bread-19)
dobj(make-18, dough-20)


(ROOT
  (S
    (NP (DT the) (JJ whole) (NN thing))
    (VP (VBD started)
      (S
        (VP (TO to)
          (VP (VB shake)))))
    (, ,)))


det(thing-3, the-1)
amod(thing-3, whole-2)
nsubj(started-4, thing-3)
root(ROOT-0, started-4)
aux(shake-6, to-5)
xcomp(started-4, shake-6)


(ROOT
  (S
    (VP (VB rattle)
      (CC and)
      (VB roll))
    (. .)))


root(ROOT-0, rattle-1)
cc(rattle-1, and-2)
conj(rattle-1, roll-3)


(ROOT
  (S (IN So)
    (NP (PRP I))
    (VP (VBD had)
      (S
        (VP (TO to)
          (VP (VB hold)
            (NP (PRP it))
            (PRT (RP down))
            (PP (IN with)
              (NP (PRP$ my) (NNS hands))))))
      (S
        (VP (TO to)
          (VP (VB make)
            (ADJP (JJ sure)
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (VBZ does) (RB n't)
                    (VP (VB leap)
                      (PRT (RP off))
                      (NP (DT the) (NN table)))))))))))
    (. .)))


dep(had-3, So-1)
nsubj(had-3, I-2)
root(ROOT-0, had-3)
aux(hold-5, to-4)
xcomp(had-3, hold-5)
dobj(hold-5, it-6)
prt(hold-5, down-7)
prep(hold-5, with-8)
poss(hands-10, my-9)
pobj(with-8, hands-10)
aux(make-12, to-11)
xcomp(had-3, make-12)
acomp(make-12, sure-13)
nsubj(leap-17, it-14)
aux(leap-17, does-15)
neg(leap-17, n't-16)
ccomp(sure-13, leap-17)
prt(leap-17, off-18)
det(table-20, the-19)
dobj(leap-17, table-20)


(ROOT
  (FRAG
    (PP (IN Then))
    (, ,)))


root(ROOT-0, Then-1)


(ROOT
  (S
    (NP (RB as) (DT the) (NN dough))
    (VP (VBD got)
      (ADJP (RBR more) (JJ elastic)))
    (, ,)))


advmod(dough-3, as-1)
det(dough-3, the-2)
nsubj(elastic-6, dough-3)
dep(elastic-6, got-4)
advmod(elastic-6, more-5)
root(ROOT-0, elastic-6)


(ROOT
  (S
    (S
      (NP (DT the) (NNS blades))
      (VP (VBD started)
        (S
          (VP (TO to)
            (VP (VB slow)
              (PRT (RP down)))))))
    (CC and)
    (S
      (NP (DT the) (NN motor))
      (VP (VBZ overheated)))
    (. .)))


det(blades-2, the-1)
nsubj(started-3, blades-2)
root(ROOT-0, started-3)
aux(slow-5, to-4)
xcomp(started-3, slow-5)
prt(slow-5, down-6)
cc(started-3, and-7)
det(motor-9, the-8)
nsubj(overheated-10, motor-9)
conj(started-3, overheated-10)


(ROOT
  (S (IN So)
    (NP (PRP I))
    (VP (VBD ended)
      (PRT (RP up))
      (S
        (VP (VBG pulsing)
          (NP (PRP it))
          (PP (IN for)
            (NP
              (NP (CD 20) (NNS seconds))
              (PP (IN at)
                (NP (DT a) (NN time))))))))
    (. .)))


dep(ended-3, So-1)
nsubj(ended-3, I-2)
root(ROOT-0, ended-3)
prt(ended-3, up-4)
xcomp(ended-3, pulsing-5)
dobj(pulsing-5, it-6)
prep(pulsing-5, for-7)
num(seconds-9, 20-8)
pobj(for-7, seconds-9)
prep(seconds-9, at-10)
det(time-12, a-11)
pobj(at-10, time-12)


(ROOT
  (FRAG (CC But)
    (PP (VBN sure)
      (NP
        (NP (RB enough))
        (, ,)))))


root(ROOT-0, But-1)
prep(But-1, sure-2)
dep(sure-2, enough-3)


(ROOT
  (PP (IN after)
    (NP
      (NP (DT a) (JJ few) (NNS rounds))
      (PP (IN of)
        (S
          (VP (VBG wrestling)
            (PP (IN with)
              (NP (DT the) (NN food) (NN processor))))))
      (, ,))))


root(ROOT-0, after-1)
det(rounds-4, a-2)
amod(rounds-4, few-3)
pobj(after-1, rounds-4)
prep(rounds-4, of-5)
pcomp(of-5, wrestling-6)
prep(wrestling-6, with-7)
det(processor-10, the-8)
nn(processor-10, food-9)
pobj(with-7, processor-10)


(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB still))
    (VP (VBD managed)
      (S
        (VP (TO to)
          (VP (VB make)
            (NP (PRP$ my) (NN pizza) (NN dough))
            (PP (IN in)
              (NP (DT a)
                (ADJP (RB much) (JJR shorter))
                (NN time)))
            (SBAR (IN than) (IN if)
              (S
                (NP (PRP I))
                (VP (VBD had)
                  (VP (VBN tried)
                    (S
                      (VP (TO to)
                        (VP (VB knead)
                          (NP (PRP it))
                          (PP (IN by)
                            (NP (NN hand))))))))))))))
    (. .)))


nsubj(managed-3, I-1)
advmod(managed-3, still-2)
root(ROOT-0, managed-3)
aux(make-5, to-4)
xcomp(managed-3, make-5)
poss(dough-8, my-6)
nn(dough-8, pizza-7)
dobj(make-5, dough-8)
prep(make-5, in-9)
det(time-13, a-10)
advmod(shorter-12, much-11)
amod(time-13, shorter-12)
pobj(in-9, time-13)
mark(tried-18, than-14)
mark(tried-18, if-15)
nsubj(tried-18, I-16)
aux(tried-18, had-17)
advcl(make-5, tried-18)
aux(knead-20, to-19)
xcomp(tried-18, knead-20)
dobj(knead-20, it-21)
prep(knead-20, by-22)
pobj(by-22, hand-23)


(ROOT
  (FRAG
    (PP (IN After)
      (NP
        (NP (DT a) (JJ few) (JJ successful) (NN pizza) (NNS parties))
        (PP (IN with)
          (NP (PRP$ my) (NNS kakis)))))
    (, ,)))


root(ROOT-0, After-1)
det(parties-6, a-2)
amod(parties-6, few-3)
amod(parties-6, successful-4)
nn(parties-6, pizza-5)
pobj(After-1, parties-6)
prep(parties-6, with-7)
poss(kakis-9, my-8)
pobj(with-7, kakis-9)


(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB soon))
    (VP (VBD grew)
      (VP (VBN fed)
        (PRT (RP up))
        (PP (IN with)
          (NP (PRP$ my) (JJ plastic) (NN food) (NN processor)))))
    (. .)))


nsubj(grew-3, I-1)
advmod(grew-3, soon-2)
root(ROOT-0, grew-3)
dep(grew-3, fed-4)
prt(fed-4, up-5)
prep(fed-4, with-6)
poss(processor-10, my-7)
amod(processor-10, plastic-8)
nn(processor-10, food-9)
pobj(with-6, processor-10)


(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (ADVP (RB then))
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (VBD caught)
            (NP
              (NP (NN sight))
              (PP (IN of)
                (NP (DT the) (NNP CuisinArt) (NNP Food) (NNP Processor))))))))
    (. .)))


nsubj(was-2, It-1)
root(ROOT-0, was-2)
advmod(was-2, then-3)
mark(caught-6, that-4)
nsubj(caught-6, I-5)
ccomp(was-2, caught-6)
dobj(caught-6, sight-7)
prep(sight-7, of-8)
det(Processor-12, the-9)
nn(Processor-12, CuisinArt-10)
nn(Processor-12, Food-11)
pobj(of-8, Processor-12)


(ROOT
  (SBAR (IN If)
    (S
      (NP (PRP you))
      (VP (VBP are)
        (NP
          (NP (DT a) (NN guy))
          (PP (IN like)
            (NP (PRP me)))))
      (, ,))))


mark(guy-5, If-1)
nsubj(guy-5, you-2)
cop(guy-5, are-3)
det(guy-5, a-4)
root(ROOT-0, guy-5)
prep(guy-5, like-6)
pobj(like-6, me-7)


(ROOT
  (S
    (NP (DT the) (NN brushed))
    (VP (VBD cast)
      (NP (NN metal)))
    (, ,)))


det(brushed-2, the-1)
nsubj(cast-3, brushed-2)
root(ROOT-0, cast-3)
dobj(cast-3, metal-4)


(ROOT
  (NP
    (NP (NNP Battlestar))
    (NP (NNP Galactica) (NNP Cylon) (, ,))))


root(ROOT-0, Battlestar-1)
nn(Cylon-3, Galactica-2)
dep(Battlestar-1, Cylon-3)


(ROOT
  (S
    (NP (JJ like) (NN look))
    (VP (MD will)
      (VP (VB get)
        (NP
          (NP (PRP$ your) (NN testosterone))
          (VP (VBG going)))))
    (. !)))


amod(look-2, like-1)
nsubj(get-4, look-2)
aux(get-4, will-3)
root(ROOT-0, get-4)
poss(testosterone-6, your-5)
dobj(get-4, testosterone-6)
partmod(testosterone-6, going-7)


(ROOT
  (S
    (NP (PRP$ My) (JJ old) (NN food) (NN processor))
    (VP (VBD looked)
      (PP (IN like)
        (NP (DT a) (NNP Kia)))
      (ADVP (JJ next)
        (PP (TO to)
          (NP (DT this) (NNP Porsche)))))
    (. .)))


poss(processor-4, My-1)
amod(processor-4, old-2)
nn(processor-4, food-3)
nsubj(looked-5, processor-4)
root(ROOT-0, looked-5)
prep(looked-5, like-6)
det(Kia-8, a-7)
pobj(like-6, Kia-8)
advmod(looked-5, next-9)
prep(next-9, to-10)
det(Porsche-12, this-11)
pobj(to-10, Porsche-12)


(ROOT
  (SBAR
    (WHADVP (WRB When))
    (S
      (NP (PRP I))
      (ADVP (RB finally))
      (VP (VBD managed)
        (S
          (VP (TO to)
            (VP (VB get)
              (NP (PRP$ my) (NNS hands))
              (PP (IN on)
                (NP (DT this) (NN machine)))))
          (, ,))))))


advmod(managed-4, When-1)
nsubj(managed-4, I-2)
advmod(managed-4, finally-3)
root(ROOT-0, managed-4)
aux(get-6, to-5)
xcomp(managed-4, get-6)
poss(hands-8, my-7)
dobj(get-6, hands-8)
prep(get-6, on-9)
det(machine-11, this-10)
pobj(on-9, machine-11)


(ROOT
  (S
    (NP (PRP it))
    (VP (VBD was)
      (NP (JJ pure) (NN joy)))
    (. .)))


nsubj(joy-4, it-1)
cop(joy-4, was-2)
amod(joy-4, pure-3)
root(ROOT-0, joy-4)


(ROOT
  (S
    (NP (JJ Firstly) (DT the) (NN thing))
    (VP (VBZ is)
      (ADJP (JJ heavy)))
    (, ,)))


amod(thing-3, Firstly-1)
det(thing-3, the-2)
nsubj(heavy-5, thing-3)
cop(heavy-5, is-4)
root(ROOT-0, heavy-5)


(ROOT
  (S (IN so)
    (NP (PRP I))
    (VP (VBD did) (RB not)
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB keep)
              (S
                (VP (VBG holding)
                  (NP (PRP it))
                  (PRT (RP down)))))))))
    (. .)))


dep(have-5, so-1)
nsubj(have-5, I-2)
aux(have-5, did-3)
neg(have-5, not-4)
root(ROOT-0, have-5)
aux(keep-7, to-6)
xcomp(have-5, keep-7)
xcomp(keep-7, holding-8)
dobj(holding-8, it-9)
prt(holding-8, down-10)


(ROOT
  (INTJ (UH -LRB-)))




(ROOT
  (S
    (NP (PRP You))
    (VP (VBP do)
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB hold)
              (NP (PRP it))
              (PP (IN for)
                (NP (DT a) (NN while) (NNP initially) (-RRB- -RRB-) (NNP Secondly))))))))
    (, ,)))


nsubj(have-3, You-1)
aux(have-3, do-2)
root(ROOT-0, have-3)
aux(hold-5, to-4)
xcomp(have-3, hold-5)
dobj(hold-5, it-6)
prep(hold-5, for-7)
det(Secondly-12, a-8)
nn(Secondly-12, while-9)
nn(Secondly-12, initially-10)
pobj(for-7, Secondly-12)


(ROOT
  (S
    (NP (DT the) (NN motor))
    (VP (VBD was)
      (ADJP (JJ powerful) (RB enough))
      (PP (JJ such))
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (ADVP (RB just))
          (VP (VBN powered)
            (PP (IN through)
              (NP (DT the) (NN dough)))))))
    (. .)))


det(motor-2, the-1)
nsubj(powerful-4, motor-2)
cop(powerful-4, was-3)
root(ROOT-0, powerful-4)
advmod(powerful-4, enough-5)
prep(powerful-4, such-6)
mark(powered-10, that-7)
nsubj(powered-10, it-8)
advmod(powered-10, just-9)
ccomp(powerful-4, powered-10)
prep(powered-10, through-11)
det(dough-13, the-12)
pobj(through-11, dough-13)


(ROOT
  (S
    (NP
      (NP (DT Every) (NN part))
      (PP (IN of)
        (NP (DT the) (NN machine))))
    (VP (VBD was)
      (ADJP (RB magnificently) (JJ crafted)
        (CC and)
        (JJ solid)))
    (. .)))


det(part-2, Every-1)
nsubj(crafted-8, part-2)
prep(part-2, of-3)
det(machine-5, the-4)
pobj(of-3, machine-5)
cop(crafted-8, was-6)
advmod(crafted-8, magnificently-7)
root(ROOT-0, crafted-8)
cc(crafted-8, and-9)
conj(crafted-8, solid-10)


(ROOT
  (S
    (NP (PRP I))
    (VP (VBP guess)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ is) (RB not)
            (ADJP (RB really) (JJ fair)
              (S
                (VP (TO to)
                  (VP (VB compare)
                    (NP
                      (NP (DT this) (NN machine))
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (VP (VBZ costs)
                            (ADJP (JJ $))))))))))))))))


nsubj(guess-2, I-1)
root(ROOT-0, guess-2)
nsubj(fair-7, it-3)
cop(fair-7, is-4)
neg(fair-7, not-5)
advmod(fair-7, really-6)
ccomp(guess-2, fair-7)
aux(compare-9, to-8)
xcomp(fair-7, compare-9)
det(machine-11, this-10)
dobj(compare-9, machine-11)
nsubj(costs-13, which-12)
rcmod(machine-11, costs-13)
acomp(costs-13, $-14)


(ROOT
  (FRAG
    (NP
      (NP (CD 698))
      (PP (IN against)
        (NP (CD one))))
    (SBAR (IN that)
      (S
        (NP (NNS costs))
        (VP (VBZ $))))))


root(ROOT-0, 698-1)
prep(698-1, against-2)
pobj(against-2, one-3)
mark($-6, that-4)
nsubj($-6, costs-5)
dep(698-1, $-6)


(ROOT
  (S
    (ADVP (RB 169)
      (CC but))
    (NP (PRP you))
    (VP (VBP do)
      (VP (VB get)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP you))
            (VP (VBP pay)
              (PP (IN for)))))))
    (. .)))


advmod(get-5, 169-1)
cc(169-1, but-2)
nsubj(get-5, you-3)
aux(get-5, do-4)
root(ROOT-0, get-5)
pobj(for-9, what-6)
nsubj(pay-8, you-7)
ccomp(get-5, pay-8)
prep(pay-8, for-9)


(ROOT
  (FRAG
    (PP (IN Anyway))
    (, ,)))


root(ROOT-0, Anyway-1)


(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADVP (RB now))
      (VP
        (ADVP (RB happily))
        (VBG spinning)
        (NP (PRP$ my) (CD one) (NN minute) (NN pizza) (NN dough))
        (PP (IN with)
          (NP (DT the) (NNP CuisinArt)))))
    (. .)))


nsubj(spinning-5, I-1)
aux(spinning-5, am-2)
advmod(spinning-5, now-3)
advmod(spinning-5, happily-4)
root(ROOT-0, spinning-5)
poss(dough-10, my-6)
num(dough-10, one-7)
nn(dough-10, minute-8)
nn(dough-10, pizza-9)
dobj(spinning-5, dough-10)
prep(spinning-5, with-11)
det(CuisinArt-13, the-12)
pobj(with-11, CuisinArt-13)


(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (VP
        (VP (VBN tried)
          (NP (JJ many) (NNS recipes)))
        (CC but)
        (VP
          (ADVP (RB finally))
          (VBN settled)
          (PP (IN with)
            (NP
              (NP (DT this) (NN one))
              (PP (IN from)
                (NP
                  (NP (NNP Jeffrey) (NNP Steingarten) (POS 's))
                  (JJ excellent) (NN article))))))))
    (, ,)))


nsubj(tried-3, I-1)
aux(tried-3, have-2)
root(ROOT-0, tried-3)
amod(recipes-5, many-4)
dobj(tried-3, recipes-5)
cc(tried-3, but-6)
advmod(settled-8, finally-7)
conj(tried-3, settled-8)
prep(settled-8, with-9)
det(one-11, this-10)
pobj(with-9, one-11)
prep(one-11, from-12)
nn(Steingarten-14, Jeffrey-13)
poss(article-17, Steingarten-14)
possessive(Steingarten-14, 's-15)
amod(article-17, excellent-16)
pobj(from-12, article-17)


(ROOT
  (NP (NNP Perfection) (NNP Pizza) (. .)))


nn(Pizza-2, Perfection-1)
root(ROOT-0, Pizza-2)


(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ works)
      (ADVP (RB very) (RB well)))
    (, ,)))


nsubj(works-2, It-1)
root(ROOT-0, works-2)
advmod(well-4, very-3)
advmod(works-2, well-4)


(ROOT
  (S (CC but)
    (ADVP (RB just))
    (VP (VBP be)
      (ADJP (JJ aware)
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (VBP are)
              (VP (VBG dealing)
                (PP (IN with)
                  (NP
                    (NP (DT a) (NN dough))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBZ is)
                          (ADJP (RB very) (JJ wet)))))))))))))
    (, ,)))


cc(aware-4, but-1)
advmod(aware-4, just-2)
cop(aware-4, be-3)
root(ROOT-0, aware-4)
mark(dealing-8, that-5)
nsubj(dealing-8, you-6)
aux(dealing-8, are-7)
ccomp(aware-4, dealing-8)
prep(dealing-8, with-9)
det(dough-11, a-10)
pobj(with-9, dough-11)
nsubj(wet-15, that-12)
cop(wet-15, is-13)
advmod(wet-15, very-14)
rcmod(dough-11, wet-15)


(ROOT
  (S (IN so)
    (NP (PRP it))
    (VP (VBZ does) (RB not)
      (VP (VB look)
        (PP (IN like)
          (NP (DT the) (NN dough)))
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (VBP see)
              (PP (IN at)
                (NP (NN pizza) (NNS restaurants))))))))
    (. .)))


dep(look-5, so-1)
nsubj(look-5, it-2)
aux(look-5, does-3)
neg(look-5, not-4)
root(ROOT-0, look-5)
prep(look-5, like-6)
det(dough-8, the-7)
pobj(like-6, dough-8)
mark(see-11, that-9)
nsubj(see-11, you-10)
ccomp(look-5, see-11)
prep(see-11, at-12)
nn(restaurants-14, pizza-13)
pobj(at-12, restaurants-14)


(ROOT
  (FRAG
    (ADVP (RB However))
    (ADVP (RB ,))))


root(ROOT-0, However-1)


(ROOT
  (S
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (ADJP (RB very) (JJ good))))
    (CC and)
    (S
      (NP (DT the) (JJ wet) (NN dough))
      (VP (VBZ is)
        (ADJP (RB much) (JJR easier))
        (S
          (VP (TO to)
            (VP (VB stretch)
              (CC and)
              (VB form))))))
    (. .)))


nsubj(good-4, it-1)
cop(good-4, is-2)
advmod(good-4, very-3)
root(ROOT-0, good-4)
cc(good-4, and-5)
det(dough-8, the-6)
amod(dough-8, wet-7)
nsubj(easier-11, dough-8)
cop(easier-11, is-9)
advmod(easier-11, much-10)
conj(good-4, easier-11)
aux(stretch-13, to-12)
xcomp(easier-11, stretch-13)
cc(stretch-13, and-14)
conj(stretch-13, form-15)


(ROOT
  (S (IN So)
    (ADVP (RB far)
      (NP (DT the) (NN kakis)))
    (NP (DT all))
    (VP (VBP seem)
      (S
        (VP (TO to)
          (VP (VB enjoy)
            (NP (PRP$ my) (JJ homemade) (NN pizza))))))
    (. .)))


dep(seem-6, So-1)
advmod(seem-6, far-2)
det(kakis-4, the-3)
pobj(far-2, kakis-4)
nsubj(seem-6, all-5)
root(ROOT-0, seem-6)
aux(enjoy-8, to-7)
xcomp(seem-6, enjoy-8)
poss(pizza-11, my-9)
amod(pizza-11, homemade-10)
dobj(enjoy-8, pizza-11)


(ROOT
  (S
    (NP
      (QP (CD 1) (CD 1\/2))
      (NN cup))
    (VP (VBD Bread)
      (NP
        (NP
          (NP (NNP Flour))
          (NP
            (QP (CD 1) (CD 1\/2))
            (NN cup)))
        (X
          (NP
            (NP (DT All) (NN purpose) (NN Flour) (CD 1) (NN teaspoon) (NN yeast))
            (NP
              (NP (CD 3\/4) (NN tablespoon) (NN salt))
              (NP
                (QP (CD 1) (CD 1\/4))
                (NNS cups))))
          (NP (JJ cold) (NN water))
          (NP
            (NP (CD 3) (NNS tablespoons))
            (NP (JJ olive) (NN oil) (NN Half) (NN cup) (NN semolina) (NN flour)))))
      (ADVP (RB Basically)))
    (, ,)))


number(1\/2-2, 1-1)
num(cup-3, 1\/2-2)
nsubj(Bread-4, cup-3)
root(ROOT-0, Bread-4)
dobj(Bread-4, Flour-5)
number(1\/2-7, 1-6)
num(cup-8, 1\/2-7)
dep(Flour-5, cup-8)
det(yeast-14, All-9)
nn(yeast-14, purpose-10)
nn(yeast-14, Flour-11)
num(yeast-14, 1-12)
nn(yeast-14, teaspoon-13)
dep(tablespoons-24, yeast-14)
num(salt-17, 3\/4-15)
nn(salt-17, tablespoon-16)
dep(yeast-14, salt-17)
number(1\/4-19, 1-18)
num(cups-20, 1\/4-19)
dep(salt-17, cups-20)
amod(water-22, cold-21)
dep(tablespoons-24, water-22)
num(tablespoons-24, 3-23)
dep(Flour-5, tablespoons-24)
amod(flour-30, olive-25)
nn(flour-30, oil-26)
nn(flour-30, Half-27)
nn(flour-30, cup-28)
nn(flour-30, semolina-29)
dep(tablespoons-24, flour-30)
advmod(Bread-4, Basically-31)


(ROOT
  (S
    (NP (PRP you))
    (VP (VBP add)
      (NP (PDT all) (DT the) (JJ dry) (NNS ingredients))
      (PP (IN into)
        (NP (DT the) (NN food) (NN processor))))
    (, ,)))


nsubj(add-2, you-1)
root(ROOT-0, add-2)
predet(ingredients-6, all-3)
det(ingredients-6, the-4)
amod(ingredients-6, dry-5)
dobj(add-2, ingredients-6)
prep(add-2, into-7)
det(processor-10, the-8)
nn(processor-10, food-9)
pobj(into-7, processor-10)


(ROOT
  (S
    (NP (RB then))
    (VP (VBP start)
      (PP (IN by)
        (S
          (VP (VBG pulsing)
            (NP (DT the) (JJ dry) (NNS ingredients))
            (ADVP (RB first))))))
    (, ,)))


nsubj(start-2, then-1)
root(ROOT-0, start-2)
prep(start-2, by-3)
pcomp(by-3, pulsing-4)
det(ingredients-7, the-5)
amod(ingredients-7, dry-6)
dobj(pulsing-4, ingredients-7)
advmod(pulsing-4, first-8)


(ROOT
  (S (RB then)
    (VP (VB add)
      (NP (DT the) (NN water)
        (CC and)
        (NN olive) (NN oil)))
    (. .)))


advmod(add-2, then-1)
root(ROOT-0, add-2)
det(oil-7, the-3)
nn(oil-7, water-4)
cc(water-4, and-5)
conj(water-4, olive-6)
dobj(add-2, oil-7)


(ROOT
  (PRN
    (S
      (ADVP (RB Once))
      (NP
        (NP (PDT all) (DT the) (NN flour))
        (CC and)
        (NP (DT the) (NN water)))
      (VP (VBZ is)
        (ADVP (RB just))
        (VP (VBN combined))))
    (, ,)))


advmod(combined-10, Once-1)
predet(flour-4, all-2)
det(flour-4, the-3)
nsubjpass(combined-10, flour-4)
cc(flour-4, and-5)
det(water-7, the-6)
conj(flour-4, water-7)
auxpass(combined-10, is-8)
advmod(combined-10, just-9)
root(ROOT-0, combined-10)


(ROOT
  (S
    (VP
      (VP (VB stop)
        (NP (DT the) (NN machine)))
      (CC and)
      (VP (VB let)
        (S
          (NP (PRP it))
          (VP (VB rest)
            (PP (IN for)
              (NP (CD 20) (NNS mins)))))))
    (. .)))


root(ROOT-0, stop-1)
det(machine-3, the-2)
dobj(stop-1, machine-3)
cc(stop-1, and-4)
conj(stop-1, let-5)
nsubj(rest-7, it-6)
ccomp(let-5, rest-7)
prep(rest-7, for-8)
num(mins-10, 20-9)
pobj(for-8, mins-10)


(ROOT
  (S
    (NP (DT This) (JJ resting) (NN period))
    (VP (VBZ is)
      (ADJP (JJ important)))
    (. .)))


det(period-3, This-1)
amod(period-3, resting-2)
nsubj(important-5, period-3)
cop(important-5, is-4)
root(ROOT-0, important-5)


(ROOT
  (S
    (S
      (NP (DT This))
      (VP (VBZ is)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (NNS autolysis))
            (VP (VBZ occurs))))))
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ makes)
        (S
          (NP (PRP it))
          (ADJP (RB much) (JJR easier))
          (S
            (VP (TO to)
              (VP (VB get)
                (NP (DT that) (JJ nice)
                  (ADJP (JJ smooth)
                    (CC and)
                    (JJ stretchable))
                  (NN dough))))))))
    (. .)))


nsubj(is-2, This-1)
root(ROOT-0, is-2)
advmod(occurs-5, when-3)
nsubj(occurs-5, autolysis-4)
advcl(is-2, occurs-5)
cc(is-2, and-6)
nsubj(makes-8, it-7)
conj(is-2, makes-8)
nsubj(get-13, it-9)
advmod(easier-11, much-10)
dep(get-13, easier-11)
aux(get-13, to-12)
xcomp(makes-8, get-13)
det(dough-19, that-14)
amod(dough-19, nice-15)
amod(dough-19, smooth-16)
cc(smooth-16, and-17)
conj(smooth-16, stretchable-18)
dobj(get-13, dough-19)


(ROOT
  (FRAG
    (PP (IN After)
      (NP (DT the) (CD 20) (NNS mins)))
    (, ,)))


root(ROOT-0, After-1)
det(mins-4, the-2)
num(mins-4, 20-3)
pobj(After-1, mins-4)


(ROOT
  (NP
    (S
      (S
        (VP (VB turn)
          (NP (DT the) (NN food) (NN processor))
          (PP (IN on)
            (PP (IN for)
              (NP
                (QP (RB around) (CD one) (TO to) (CD two))
                (NNS minutes))))))
      (CC and)
      (S
        (NP (PRP you))
        (VP (MD will)
          (VP (VB end)
            (PRT (RP up))
            (PP (IN with)
              (NP (DT a) (JJ smooth) (NN gooey)))))
        (, ,)))))


root(ROOT-0, turn-1)
det(processor-4, the-2)
nn(processor-4, food-3)
dobj(turn-1, processor-4)
prep(turn-1, on-5)
pcomp(on-5, for-6)
quantmod(two-10, around-7)
number(two-10, one-8)
dep(two-10, to-9)
num(minutes-11, two-10)
pobj(for-6, minutes-11)
cc(turn-1, and-12)
nsubj(end-15, you-13)
aux(end-15, will-14)
conj(turn-1, end-15)
prt(end-15, up-16)
prep(end-15, with-17)
det(gooey-20, a-18)
amod(gooey-20, smooth-19)
pobj(with-17, gooey-20)


(ROOT
  (NP (JJ slime-like) (NN mess) (. .)))


amod(mess-2, slime-like-1)
root(ROOT-0, mess-2)


(ROOT
  (S
    (S
      (NP
        (NP (DT All))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP have)
              (S
                (VP (TO to)
                  (VP (VB do)
                    (ADVP (JJ next)))))))))
      (VP
        (VP (VBZ is)
          (S
            (VP (TO to)
              (VP (VB dust)
                (NP (PRP it))
                (PP (IN with)
                  (NP (NN flour)))))))
        (CC and)
        (VP (VBD knead)
          (NP
            (NP (DT a) (NN couple))
            (PP (IN of)
              (NP (NNS times))))
          (PP (IN by)
            (NP (NN hand))))))
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD will)
        (VP (VB get)
          (NP (DT a) (JJ dough) (NN ball))
          (SBAR (IN as)
            (S
              (VP (VBN seen)
                (PP (IN above))))))))
    (. .)))


nsubj(is-7, All-1)
nsubj(have-3, you-2)
rcmod(All-1, have-3)
aux(do-5, to-4)
xcomp(have-3, do-5)
advmod(do-5, next-6)
root(ROOT-0, is-7)
aux(dust-9, to-8)
xcomp(is-7, dust-9)
dobj(dust-9, it-10)
prep(dust-9, with-11)
pobj(with-11, flour-12)
cc(is-7, and-13)
conj(is-7, knead-14)
det(couple-16, a-15)
dobj(knead-14, couple-16)
prep(couple-16, of-17)
pobj(of-17, times-18)
prep(knead-14, by-19)
pobj(by-19, hand-20)
cc(is-7, and-21)
nsubj(get-24, you-22)
aux(get-24, will-23)
conj(is-7, get-24)
det(ball-27, a-25)
amod(ball-27, dough-26)
dobj(get-24, ball-27)
mark(seen-29, as-28)
advcl(get-24, seen-29)
prep(seen-29, above-30)


(ROOT
  (S
    (ADVP (RB Just))
    (VP
      (VP (VB leave)
        (NP (DT this) (NN dough))
        (SBAR
          (SBAR
            (S
              (VP (TO to)
                (VP (VB rise)
                  (PP (IN in)
                    (NP
                      (NP (DT a) (JJ warm) (JJ humid) (NN area))
                      (PP (IN for)
                        (NP (DT an) (NN hour)))))))))
          (CC or)
          (SBAR (IN so)
            (S
              (ADVP (RB then))
              (VP
                (VP (VBP punch)
                  (NP (PRP it))
                  (PRT (RP down)))
                (CC and)
                (VP (VBP divide)
                  (PP (IN into)
                    (NP (CD four) (JJ dough) (NNS balls)))))))))
      (CC and)
      (VP (VB leave)
        (S
          (NP (PRP it))
          (VP (TO to)
            (VP (VB rise)
              (PP (IN in)
                (NP
                  (NP (DT a) (NN container))
                  (VP (VBN brushed)
                    (PP (IN with)
                      (NP
                        (NP (DT a) (JJ thin) (NN layer))
                        (PP (IN of)
                          (NP (JJ olive) (NN oil)))))))))))))
    (. .)))


advmod(leave-2, Just-1)
root(ROOT-0, leave-2)
det(dough-4, this-3)
dobj(leave-2, dough-4)
aux(rise-6, to-5)
dep(leave-2, rise-6)
prep(rise-6, in-7)
det(area-11, a-8)
amod(area-11, warm-9)
amod(area-11, humid-10)
pobj(in-7, area-11)
prep(area-11, for-12)
det(hour-14, an-13)
pobj(for-12, hour-14)
cc(rise-6, or-15)
mark(punch-18, so-16)
advmod(punch-18, then-17)
conj(rise-6, punch-18)
dobj(punch-18, it-19)
prt(punch-18, down-20)
cc(punch-18, and-21)
conj(punch-18, divide-22)
prep(divide-22, into-23)
num(balls-26, four-24)
amod(balls-26, dough-25)
pobj(into-23, balls-26)
cc(leave-2, and-27)
conj(leave-2, leave-28)
nsubj(rise-31, it-29)
aux(rise-31, to-30)
xcomp(leave-28, rise-31)
prep(rise-31, in-32)
det(container-34, a-33)
pobj(in-32, container-34)
partmod(container-34, brushed-35)
prep(brushed-35, with-36)
det(layer-39, a-37)
amod(layer-39, thin-38)
pobj(with-36, layer-39)
prep(layer-39, of-40)
amod(oil-42, olive-41)
pobj(of-40, oil-42)


(ROOT
  (S
    (NP (PRP You))
    (VP (MD can)
      (VP (VB rise)
        (NP (PRP it))
        (ADVP (RB overnight))
        (PP
          (PP (IN in)
            (NP (DT the) (NN fridge)))
          (CC or)
          (PP (IN for)
            (NP
              (NP
                (QP (RB about) (CD 1.5))
                (NNS hours))
              (PP (IN in)
                (NP
                  (NP (DT an) (NN oven))
                  (PP (IN with)
                    (NP
                      (NP (DT a) (NN bowl))
                      (PP (IN of)
                        (NP (JJ hot) (NN water))))))))))))
    (. .)))


nsubj(rise-3, You-1)
aux(rise-3, can-2)
root(ROOT-0, rise-3)
dobj(rise-3, it-4)
advmod(rise-3, overnight-5)
prep(rise-3, in-6)
det(fridge-8, the-7)
pobj(in-6, fridge-8)
cc(in-6, or-9)
conj(in-6, for-10)
quantmod(1.5-12, about-11)
num(hours-13, 1.5-12)
pobj(for-10, hours-13)
prep(hours-13, in-14)
det(oven-16, an-15)
pobj(in-14, oven-16)
prep(oven-16, with-17)
det(bowl-19, a-18)
pobj(with-17, bowl-19)
prep(bowl-19, of-20)
amod(water-22, hot-21)
pobj(of-20, water-22)


(ROOT
  (FRAG
    (PP (IN In)
      (NP (DT the) (NN meantime)))
    (, ,)))


root(ROOT-0, In-1)
det(meantime-3, the-2)
pobj(In-1, meantime-3)


(ROOT
  (S
    (NP (PRP you))
    (VP (MD can)
      (VP (VB start)
        (S
          (VP (VBG making)
            (NP (DT the) (NN tomato) (NN sauce))))))
    (. .)))


nsubj(start-3, you-1)
aux(start-3, can-2)
root(ROOT-0, start-3)
xcomp(start-3, making-4)
det(sauce-7, the-5)
nn(sauce-7, tomato-6)
dobj(making-4, sauce-7)


(ROOT
  (SBAR
    (WHNP (WP What))
    (S
      (NP (PRP you))
      (VP (VBP need)
        (SBAR
          (S
            (VP (VBZ is)
              (NP
                (NP (CD 2) (NNS cans))
                (PP (IN of)
                  (NP (JJ whole) (NNS tomatoes))))))))
      (, ,))))


dobj(need-3, What-1)
nsubj(need-3, you-2)
root(ROOT-0, need-3)
cop(cans-6, is-4)
num(cans-6, 2-5)
ccomp(need-3, cans-6)
prep(cans-6, of-7)
amod(tomatoes-9, whole-8)
pobj(of-7, tomatoes-9)


(ROOT
  (NP (JJ garlic) (NNS ,)))


amod(,-2, garlic-1)


(ROOT
  (FRAG
    (NP (NNS onions)
      (CC and)
      (NN olive))
    (NP (NN oil))
    (. .)))


root(ROOT-0, onions-1)
cc(onions-1, and-2)
conj(onions-1, olive-3)
dep(onions-1, oil-4)


(ROOT
  (FRAG
    (ADVP (RB Now))
    (ADVP (RB ,))))


root(ROOT-0, Now-1)


(ROOT
  (S
    (NP (DT the) (NNPS Italians))
    (VP (VBP do) (RB n't)
      (ADVP (RB even))
      (VP (VB bother)
        (S
          (VP (TO to)
            (VP (VB cook)
              (NP (PRP$ their) (NN sauce))
              (ADVP (RB beforehand)))))))
    (. .)))


det(Italians-2, the-1)
nsubj(bother-6, Italians-2)
aux(bother-6, do-3)
neg(bother-6, n't-4)
advmod(bother-6, even-5)
root(ROOT-0, bother-6)
aux(cook-8, to-7)
xcomp(bother-6, cook-8)
poss(sauce-10, their-9)
dobj(cook-8, sauce-10)
advmod(cook-8, beforehand-11)


(ROOT
  (FRAG
    (ADVP (RB However))
    (ADVP (RB ,))))


root(ROOT-0, However-1)


(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB personally))
    (VP (VBP prefer)
      (S
        (VP (VBG sauteeing)
          (NP (DT the) (NN garlic)))))
    (, ,)))


nsubj(prefer-3, I-1)
advmod(prefer-3, personally-2)
root(ROOT-0, prefer-3)
xcomp(prefer-3, sauteeing-4)
det(garlic-6, the-5)
dobj(sauteeing-4, garlic-6)


(ROOT
  (UCP
    (ADJP (JJ onions))
    (CC and)
    (VP (VBG adding)
      (NP
        (NP
          (NP (DT the) (NN chopped))
          (NP (NNS tomatoes)))
        (, ,)))))


root(ROOT-0, onions-1)
cc(onions-1, and-2)
conj(onions-1, adding-3)
det(chopped-5, the-4)
dobj(adding-3, chopped-5)
dep(chopped-5, tomatoes-6)


(ROOT
  (INTJ (UH oregano) (UH ,)))


root(ROOT-0, oregano-1)


(ROOT
  (NP
    (NP (NN salt)
      (CC and)
      (NN pepper)
      (CC and)
      (NN simmer))
    (PP (IN for)
      (NP
        (QP (CD 10) (TO to) (CD 15))
        (NNS minutes)))
    (. .)))


root(ROOT-0, salt-1)
cc(salt-1, and-2)
conj(salt-1, pepper-3)
cc(salt-1, and-4)
conj(salt-1, simmer-5)
prep(salt-1, for-6)
number(15-9, 10-7)
dep(15-9, to-8)
num(minutes-10, 15-9)
pobj(for-6, minutes-10)


(ROOT
  (S
    (NP (PRP You))
    (ADVP (RB now))
    (VP (VBP have)
      (NP
        (NP (DT a) (NN pizza) (NN dough))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (UCP
                (ADJP (RB easily) (VBN stretched)
                  (PP (TO to)
                    (ADJP (JJ shaped))))
                (CC and)
                (NP
                  (NP (DT a) (NN tomato) (NN sauce))
                  (SBAR
                    (S
                      (VP (TO to)
                        (VP (VB go)
                          (PP (IN on)
                            (NP (NN top)))))))
                  (PP (IN of)
                    (NP
                      (NP (PRP it))
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (VP (VBZ is)
                            (ADVP (RB now))
                            (ADJP (JJ ready)
                              (PP (IN for)
                                (NP (PRP$ your) (JJ out-of-this-world) (NNS toppings))))))))))))))))
    (. .)))


nsubj(have-3, You-1)
advmod(have-3, now-2)
root(ROOT-0, have-3)
det(dough-6, a-4)
nn(dough-6, pizza-5)
dobj(have-3, dough-6)
nsubjpass(stretched-10, that-7)
auxpass(stretched-10, is-8)
advmod(stretched-10, easily-9)
rcmod(dough-6, stretched-10)
prep(stretched-10, to-11)
pobj(to-11, shaped-12)
cc(stretched-10, and-13)
det(sauce-16, a-14)
nn(sauce-16, tomato-15)
conj(stretched-10, sauce-16)
aux(go-18, to-17)
infmod(sauce-16, go-18)
prep(go-18, on-19)
pobj(on-19, top-20)
prep(sauce-16, of-21)
pobj(of-21, it-22)
nsubj(ready-26, which-23)
cop(ready-26, is-24)
advmod(ready-26, now-25)
rcmod(it-22, ready-26)
prep(ready-26, for-27)
poss(toppings-30, your-28)
amod(toppings-30, out-of-this-world-29)
pobj(for-27, toppings-30)


(ROOT
  (S
    (NP (DT This) (JJ wet) (NN dough))
    (VP (MD will) (RB not)
      (VP (VB behave)
        (S
          (S
            (PP (IN like)
              (NP (DT the) (NNS ones)))
            (NP (PRP you))
            (VP (VBP see)
              (PP (IN in)
                (NP (DT the) (NN pizza) (NN parlor)))))
          (CC and)
          (S
            (NP (PRP you))
            (VP (MD wo) (RB n't)
              (VP (VB be)
                (ADJP (JJ able)
                  (S
                    (VP (TO to)
                      (VP (VB throw)
                        (NP (PRP it))
                        (PP (IN in)
                          (NP (DT the) (NN air)))))))))))))
    (. .)))


det(dough-3, This-1)
amod(dough-3, wet-2)
nsubj(behave-6, dough-3)
aux(behave-6, will-4)
neg(behave-6, not-5)
root(ROOT-0, behave-6)
prep(see-11, like-7)
det(ones-9, the-8)
pobj(like-7, ones-9)
nsubj(see-11, you-10)
dep(behave-6, see-11)
prep(see-11, in-12)
det(parlor-15, the-13)
nn(parlor-15, pizza-14)
pobj(in-12, parlor-15)
cc(see-11, and-16)
nsubj(able-21, you-17)
aux(able-21, wo-18)
neg(able-21, n't-19)
cop(able-21, be-20)
conj(see-11, able-21)
aux(throw-23, to-22)
xcomp(able-21, throw-23)
dobj(throw-23, it-24)
prep(throw-23, in-25)
det(air-27, the-26)
pobj(in-25, air-27)


(ROOT
  (FRAG (CC But)
    (NP (NNP ,))))


cc(,-2, But-1)


(ROOT
  (S
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (ADJP (RB very) (JJ easy))
        (S
          (VP (TO to)
            (VP (VB stretch)
              (S
                (VP (TO to)
                  (VP (VB shape)))))))))
    (CC and)
    (S
      (NP (DT the) (NN texture))
      (VP (VBZ is)
        (ADJP (JJ excellent))))
    (. .)))


nsubj(easy-4, it-1)
cop(easy-4, is-2)
advmod(easy-4, very-3)
root(ROOT-0, easy-4)
aux(stretch-6, to-5)
xcomp(easy-4, stretch-6)
aux(shape-8, to-7)
xcomp(stretch-6, shape-8)
cc(easy-4, and-9)
det(texture-11, the-10)
nsubj(excellent-13, texture-11)
cop(excellent-13, is-12)
conj(easy-4, excellent-13)


(ROOT
  (S
    (NP (PRP You))
    (VP (MD can)
      (PP (IN of)
        (NP (NN course) (RB just)))
      (VP
        (VP (VB put)
          (NP (PRP$ your) (NN pizza))
          (PP (IN on)
            (NP
              (NP (DT a) (VBG baking) (NN tray))
              (VP (VBN lined)
                (PP (IN with)
                  (NP (NN greaseproof) (NN paper)))))))
        (CC and)
        (VP (VB bake)
          (NP (PRP it)))))
    (, ,)))


nsubj(put-6, You-1)
aux(put-6, can-2)
prep(put-6, of-3)
pobj(of-3, course-4)
advmod(course-4, just-5)
root(ROOT-0, put-6)
poss(pizza-8, your-7)
dobj(put-6, pizza-8)
prep(put-6, on-9)
det(tray-12, a-10)
amod(tray-12, baking-11)
pobj(on-9, tray-12)
partmod(tray-12, lined-13)
prep(lined-13, with-14)
nn(paper-16, greaseproof-15)
pobj(with-14, paper-16)
cc(put-6, and-17)
conj(put-6, bake-18)
dobj(bake-18, it-19)


(ROOT
  (S (CC but)
    (NP (PRP I))
    (VP (VBD wanted)
      (S
        (VP (TO to)
          (VP (VB do)
            (S
              (NP (PRP it))
              (ADJP (RB right)))))
        (, ,)))))


cc(wanted-3, but-1)
nsubj(wanted-3, I-2)
root(ROOT-0, wanted-3)
aux(do-5, to-4)
xcomp(wanted-3, do-5)
nsubj(right-7, it-6)
xcomp(do-5, right-7)


(ROOT
  (S (IN so)
    (NP (PRP I))
    (VP (VBD got)
      (S
        (NP (PRP myself))
        (NP
          (NP (DT a) (NN pizza) (NN stone))
          (CC and)
          (NP
            (NP (DT a) (NN pizza) (NN peel))
            (PRN (-LRB- -LRB-)
              (NP
                (NP (DT a) (JJ flat) (NN shovel))
                (PP (IN with)
                  (NP (DT a) (JJ long) (NN handle))))
              (-RRB- -RRB-)))))
      (PP (IN from)
        (NP (NNP Sia) (NNP Huat))))
    (. .)))


dep(got-3, so-1)
nsubj(got-3, I-2)
root(ROOT-0, got-3)
nsubj(stone-7, myself-4)
det(stone-7, a-5)
nn(stone-7, pizza-6)
xcomp(got-3, stone-7)
cc(stone-7, and-8)
det(peel-11, a-9)
nn(peel-11, pizza-10)
conj(stone-7, peel-11)
det(shovel-15, a-13)
amod(shovel-15, flat-14)
dep(peel-11, shovel-15)
prep(shovel-15, with-16)
det(handle-19, a-17)
amod(handle-19, long-18)
pobj(with-16, handle-19)
prep(got-3, from-21)
nn(Huat-23, Sia-22)
pobj(from-21, Huat-23)


(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ makes)
      (S
        (NP (DT the) (NN pizza) (NN party))
        (ADJP
          (ADVP (DT all) (DT the))
          (RBR more) (JJ authentic))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP you))
            (VP (VBD shovel)
              (NP (DT the) (NN pizza))
              (PRT (RP in)
                (CC and)
                (RP out))
              (PP (IN of)
                (NP (DT the) (NN oven))))))))
    (. !)))


nsubj(makes-2, It-1)
root(ROOT-0, makes-2)
det(party-5, the-3)
nn(party-5, pizza-4)
nsubj(shovel-12, party-5)
dep(the-7, all-6)
advmod(authentic-9, the-7)
advmod(authentic-9, more-8)
dep(shovel-12, authentic-9)
advmod(shovel-12, when-10)
nsubj(shovel-12, you-11)
xcomp(makes-2, shovel-12)
det(pizza-14, the-13)
dobj(shovel-12, pizza-14)
prt(shovel-12, in-15)
cc(in-15, and-16)
dep(in-15, out-17)
prep(shovel-12, of-18)
det(oven-20, the-19)
pobj(of-18, oven-20)


(ROOT
  (S
    (NP (DT The) (NN pizza) (NN stone))
    (VP (VBZ is)
      (ADJP (JJ important))
      (SBAR (IN because)
        (S
          (NP (PRP it))
          (VP (VBZ provides)
            (NP (JJ instant) (NN heat))
            (PP (IN from)
              (PP (IN underneath)
                (NP (DT the) (NN pizza))))))))
    (. .)))


det(stone-3, The-1)
nn(stone-3, pizza-2)
nsubj(important-5, stone-3)
cop(important-5, is-4)
root(ROOT-0, important-5)
mark(provides-8, because-6)
nsubj(provides-8, it-7)
advcl(important-5, provides-8)
amod(heat-10, instant-9)
dobj(provides-8, heat-10)
prep(provides-8, from-11)
pcomp(from-11, underneath-12)
det(pizza-14, the-13)
pobj(underneath-12, pizza-14)


(ROOT
  (S
    (NP (DT The) (NN stone))
    (VP (VBZ needs)
      (S
        (VP (TO to)
          (VP (VB be)
            (VP (VBN heated)
              (PP (IN for)
                (NP (DT an) (NN hour)))
              (ADVP
                (ADVP (RB so) (RB that))
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (DT the) (NN pizza))
                    (VP (VBZ hits)
                      (NP (DT the) (NN stone)))))))))))
    (, ,)))


det(stone-2, The-1)
nsubj(needs-3, stone-2)
root(ROOT-0, needs-3)
aux(heated-6, to-4)
auxpass(heated-6, be-5)
xcomp(needs-3, heated-6)
prep(heated-6, for-7)
det(hour-9, an-8)
pobj(for-7, hour-9)
advmod(that-11, so-10)
advmod(heated-6, that-11)
advmod(hits-15, when-12)
det(pizza-14, the-13)
nsubj(hits-15, pizza-14)
dep(that-11, hits-15)
det(stone-17, the-16)
dobj(hits-15, stone-17)


(ROOT
  (S
    (NP (PRP it))
    (VP (VBZ starts)
      (S
        (VP (VBG cooking)
          (ADVP (RB immediately)))))
    (. .)))


nsubj(starts-2, it-1)
root(ROOT-0, starts-2)
xcomp(starts-2, cooking-3)
advmod(cooking-3, immediately-4)


(ROOT
  (FRAG
    (PP (IN In)
      (NP (NN pizza) (NNS parlors)))
    (, ,)))


root(ROOT-0, In-1)
nn(parlors-3, pizza-2)
pobj(In-1, parlors-3)


(ROOT
  (S
    (NP (NNS pizzas))
    (VP (VBP are)
      (VP (VBN supposed)
        (S
          (VP (TO to)
            (VP (VB cook)
              (PP (IN in)
                (NP
                  (QP (JJR less) (IN than) (CD 2))
                  (NNS minutes))))))))
    (. .)))


nsubjpass(supposed-3, pizzas-1)
auxpass(supposed-3, are-2)
root(ROOT-0, supposed-3)
aux(cook-5, to-4)
xcomp(supposed-3, cook-5)
prep(cook-5, in-6)
mwe(than-8, less-7)
quantmod(2-9, than-8)
num(minutes-10, 2-9)
pobj(in-6, minutes-10)


(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (SBAR (IN because)
        (S
          (NP (NN wood))
          (VP (VBD fired)
            (SBAR
              (S
                (NP (NNS ovens)
                  (CC and)
                  (NN pizza) (NNS ovens))
                (VP (VBP have)
                  (NP
                    (NP (NNS temperatures))
                    (PP (IN of)
                      (NP
                        (QP (RB about) (CD 400))
                        (NNS degrees) (NNS celcius)))))))))))
    (. .)))


nsubj(is-2, That-1)
root(ROOT-0, is-2)
mark(fired-5, because-3)
nsubj(fired-5, wood-4)
advcl(is-2, fired-5)
nsubj(have-10, ovens-6)
cc(ovens-6, and-7)
nn(ovens-9, pizza-8)
conj(ovens-6, ovens-9)
ccomp(fired-5, have-10)
dobj(have-10, temperatures-11)
prep(temperatures-11, of-12)
quantmod(400-14, about-13)
num(celcius-16, 400-14)
nn(celcius-16, degrees-15)
pobj(of-12, celcius-16)


(ROOT
  (S (CC But)
    (NP (PRP$ our) (NN home) (NNS ovens))
    (ADVP (RB only))
    (VP (VBP go)
      (PRT (RP up))
      (PP (TO to)
        (NP
          (QP (RB around) (CD 220))
          (NNS degrees) (NNS celcius))))
    (, ,)))


cc(go-6, But-1)
poss(ovens-4, our-2)
nn(ovens-4, home-3)
nsubj(go-6, ovens-4)
advmod(go-6, only-5)
root(ROOT-0, go-6)
prt(go-6, up-7)
prep(go-6, to-8)
quantmod(220-10, around-9)
num(celcius-12, 220-10)
nn(celcius-12, degrees-11)
pobj(to-8, celcius-12)


(ROOT
  (S (IN so)
    (NP (PRP it))
    (VP (VBZ takes)
      (PP (IN about)
        (NP (CD 6-8) (NNS minutes)))
      (S
        (VP (TO to)
          (VP (VB cook)))))
    (. .)))


dep(takes-3, so-1)
nsubj(takes-3, it-2)
root(ROOT-0, takes-3)
prep(takes-3, about-4)
num(minutes-6, 6-8-5)
pobj(about-4, minutes-6)
aux(cook-8, to-7)
xcomp(takes-3, cook-8)


(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's) (RB not)
        (ADJP (RB as) (JJ charred))
        (SBAR (IN as)
          (S
            (NP (DT the) (NN wood))
            (VP (VBD fired)
              (NP (NNS ovens)))))))
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (ADVP (RB still))
        (ADJP (RB quite) (JJ good))))
    (. .)))


nsubj(charred-5, It-1)
cop(charred-5, 's-2)
neg(charred-5, not-3)
advmod(charred-5, as-4)
root(ROOT-0, charred-5)
mark(fired-9, as-6)
det(wood-8, the-7)
nsubj(fired-9, wood-8)
advcl(charred-5, fired-9)
dobj(fired-9, ovens-10)
cc(charred-5, but-11)
nsubj(good-16, it-12)
cop(good-16, is-13)
advmod(good-16, still-14)
advmod(good-16, quite-15)
conj(charred-5, good-16)


(ROOT
  (INTJ (UH -LRB-)))




(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB actually))
    (VP (VBD bought)
      (NP (PRP myself))
      (SBAR
        (S
          (NP
            (NP (CD one))
            (PP (IN of)
              (NP (DT those) (NN gas))))
          (VP (VBZ burners)
            (S
              (VP (TO to)
                (ADVP (RB artificially))
                (VP (VB char)
                  (NP (DT the) (NN pizza))
                  (ADVP (RB just))
                  (PP (IN for)
                    (NP (NNP kicks))))))))))
    (. !)))


nsubj(bought-3, I-1)
advmod(bought-3, actually-2)
root(ROOT-0, bought-3)
dobj(bought-3, myself-4)
nsubj(burners-9, one-5)
prep(one-5, of-6)
det(gas-8, those-7)
pobj(of-6, gas-8)
dep(bought-3, burners-9)
aux(char-12, to-10)
advmod(char-12, artificially-11)
xcomp(burners-9, char-12)
det(pizza-14, the-13)
dobj(char-12, pizza-14)
advmod(char-12, just-15)
prep(char-12, for-16)
pobj(for-16, kicks-17)


(ROOT
  (FRAG
    (PP
      (ADVP (RB -RRB-))
      (IN In)
      (NP
        (NP (NNS terms))
        (PP (IN of)
          (NP (NNS toppings)))))
    (, ,)))


root(ROOT-0, In-2)
pobj(In-2, terms-3)
prep(terms-3, of-4)
pobj(of-4, toppings-5)


(ROOT
  (S
    (NP (DT the) (NN sky))
    (VP (VBZ is)
      (NP (DT the) (NN limit)))
    (. .)))


det(sky-2, the-1)
nsubj(limit-5, sky-2)
cop(limit-5, is-3)
det(limit-5, the-4)
root(ROOT-0, limit-5)


(ROOT
  (S
    (NP (PRP$ Our) (NNS kakis))
    (VP (VBP have)
      (VP (VBN brought)
        (NP
          (NP (NNS ingredients))
          (PP (IN from)
            (NP (JJ basic) (NN stuff))))
        (PP (IN like)
          (NP (NN ham)))
        (PP (TO to)
          (NP
            (NP
              (ADJP (RBR more) (JJ adventurous))
              (NN stuff))
            (PP (IN like)
              (NP (NN roast) (NN duck)))))))
    (. .)))


poss(kakis-2, Our-1)
nsubj(brought-4, kakis-2)
aux(brought-4, have-3)
root(ROOT-0, brought-4)
dobj(brought-4, ingredients-5)
prep(ingredients-5, from-6)
amod(stuff-8, basic-7)
pobj(from-6, stuff-8)
prep(brought-4, like-9)
pobj(like-9, ham-10)
prep(brought-4, to-11)
advmod(adventurous-13, more-12)
amod(stuff-14, adventurous-13)
pobj(to-11, stuff-14)
prep(stuff-14, like-15)
nn(duck-17, roast-16)
pobj(like-15, duck-17)


(ROOT
  (S
    (NP (PRP$ My) (JJ personal) (NN favorite))
    (VP (VBZ is)
      (VP (VBN sauteed)
        (NP (NN portabello) (NNS mushrooms))
        (PP (IN with)
          (NP (JJ truffle) (NN oil)))))
    (. .)))


poss(favorite-3, My-1)
amod(favorite-3, personal-2)
nsubjpass(sauteed-5, favorite-3)
auxpass(sauteed-5, is-4)
root(ROOT-0, sauteed-5)
nn(mushrooms-7, portabello-6)
dobj(sauteed-5, mushrooms-7)
prep(sauteed-5, with-8)
amod(oil-10, truffle-9)
pobj(with-8, oil-10)


(ROOT
  (S
    (NP (PRP$ My) (JJ next) (NN pizza) (NN creation))
    (VP (MD will)
      (VP
        (VP (VB be)
          (NP (DT a) (NN bacon)
            (CC and)
            (NNS eggs) (NN pizza))
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (PRP I))
              (VP (VBP make)
                (SBAR
                  (S
                    (NP (DT a) (NN pizza))
                    (VP (VBD topped)
                      (PP (IN with)
                        (NP (NN bacon))))))))))
        (CC and)
        (VP
          (ADVP (RB then))
          (VB add)
          (NP
            (NP (JJ nice) (JJ creamy) (JJ scrambled) (NNS eggs))
            (PP (IN on)
              (NP (NN top)))))))
    (. .)))


poss(creation-4, My-1)
amod(creation-4, next-2)
nn(creation-4, pizza-3)
nsubj(pizza-11, creation-4)
aux(pizza-11, will-5)
cop(pizza-11, be-6)
det(pizza-11, a-7)
nn(pizza-11, bacon-8)
cc(bacon-8, and-9)
conj(bacon-8, eggs-10)
root(ROOT-0, pizza-11)
advmod(make-14, where-12)
nsubj(make-14, I-13)
advcl(pizza-11, make-14)
det(pizza-16, a-15)
nsubj(topped-17, pizza-16)
ccomp(make-14, topped-17)
prep(topped-17, with-18)
pobj(with-18, bacon-19)
cc(pizza-11, and-20)
advmod(add-22, then-21)
conj(pizza-11, add-22)
amod(eggs-26, nice-23)
amod(eggs-26, creamy-24)
amod(eggs-26, scrambled-25)
dobj(add-22, eggs-26)
prep(eggs-26, on-27)
pobj(on-27, top-28)


(ROOT
  (S
    (PP (IN In)
      (NP (NN case)))
    (NP (PRP you))
    (VP (VBP are)
      (VP (VBG thinking)
        (PP (IN of)
          (S
            (VP (VBG getting)
              (NP (DT a) (NNP CuisinArt) (NN food) (NN processor)))
            (, ,)))))))


prep(thinking-5, In-1)
pobj(In-1, case-2)
nsubj(thinking-5, you-3)
aux(thinking-5, are-4)
root(ROOT-0, thinking-5)
prep(thinking-5, of-6)
pcomp(of-6, getting-7)
det(processor-11, a-8)
nn(processor-11, CuisinArt-9)
nn(processor-11, food-10)
dobj(getting-7, processor-11)


(ROOT
  (S
    (NP (DT the) (JJ good) (NN news))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (S
            (NP (PRP they))
            (VP (VBP are)
              (VP (VBG having)
                (NP
                  (NP (DT a) (NN year) (NN end) (NN promotion))
                  (ADVP (RB now))))))
          (CC and)
          (S
            (NP (PRP you))
            (VP (MD can)
              (VP (VB get)
                (NP (CD one))
                (PP (IN for)
                  (NP (NNP $)))))))))))


det(news-3, the-1)
amod(news-3, good-2)
nsubj(is-4, news-3)
root(ROOT-0, is-4)
mark(having-8, that-5)
nsubj(having-8, they-6)
aux(having-8, are-7)
ccomp(is-4, having-8)
det(promotion-12, a-9)
nn(promotion-12, year-10)
nn(promotion-12, end-11)
dobj(having-8, promotion-12)
advmod(promotion-12, now-13)
cc(having-8, and-14)
nsubj(get-17, you-15)
aux(get-17, can-16)
conj(having-8, get-17)
dobj(get-17, one-18)
prep(get-17, for-19)
pobj(for-19, $-20)


(ROOT
  (NP
    (NP (CD 499))
    (PP (RB instead) (IN of)
      (NP (DT the) (JJ usual) (NN $)))))


root(ROOT-0, 499-1)
advmod(of-3, instead-2)
prep(499-1, of-3)
det($-6, the-4)
amod($-6, usual-5)
pobj(of-3, $-6)


(ROOT
  (FRAG
    (NP (CD 698))
    (. .)))


root(ROOT-0, 698-1)


(ROOT
  (S
    (NP (PRP You))
    (VP (MD can)
      (VP (VB check)
        (PRT (RP out))
        (NP (DT the) (NNS details))
        (PP (IN at)
          (NP (DT the) (NNP Mayer) (NN site)))))
    (, ,)))


nsubj(check-3, You-1)
aux(check-3, can-2)
root(ROOT-0, check-3)
prt(check-3, out-4)
det(details-6, the-5)
dobj(check-3, details-6)
prep(check-3, at-7)
det(site-10, the-8)
nn(site-10, Mayer-9)
pobj(at-7, site-10)


(ROOT
  (S
    (VP (VB www.mayer.com.sg))
    (. .)))


root(ROOT-0, www.mayer.com.sg-1)


(ROOT
  (S
    (VP (VB Have)
      (NP (NN fun)))
    (. !)))


root(ROOT-0, Have-1)
dobj(Have-1, fun-2)


