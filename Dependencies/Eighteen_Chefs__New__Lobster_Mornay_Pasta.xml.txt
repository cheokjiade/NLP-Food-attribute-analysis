(ROOT
  (PP (IN For)
    (NP
      (NP (DT those))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBP prefer)
            (NP
              (NP (DT the) (NNP Ang) (NNP Mo) (NN version))
              (PP (IN of)
                (NP (NNP Lobster) (NNPS Noodles))))))
        (, ,)))))


root(ROOT-0, For-1)
pobj(For-1, those-2)
nsubj(prefer-4, who-3)
rcmod(those-2, prefer-4)
det(version-8, the-5)
nn(version-8, Ang-6)
nn(version-8, Mo-7)
dobj(prefer-4, version-8)
prep(version-8, of-9)
nn(Noodles-11, Lobster-10)
pobj(of-9, Noodles-11)


(ROOT
  (S
    (NP (RB here))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN cafe))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP you))
            (VP (MD can)
              (VP (VB find)
                (NP (PRP it))))))))
    (. !)))


nsubj(cafe-4, here-1)
cop(cafe-4, is-2)
det(cafe-4, a-3)
root(ROOT-0, cafe-4)
advmod(find-8, where-5)
nsubj(find-8, you-6)
aux(find-8, can-7)
rcmod(cafe-4, find-8)
dobj(find-8, it-9)


(ROOT
  (S
    (NP (PRP I))
    (VP (VBD dropped)
      (PP (IN into)
        (NP
          (NP (CD 18) (NNS Chefs))
          (NP (CD one) (NN day))
          (PP (IN for)
            (NP (DT the) (JJ baked) (NN rice)))))
      (ADVP (RB only))
      (S
        (VP (TO to)
          (VP (VB be)
            (ADJP (RB pleasantly) (JJ surprised))
            (SBAR (IN that)
              (S
                (NP (NNP Benny))
                (VP (VBZ has)
                  (VP (VBN started)
                    (S
                      (VP (VBG serving)
                        (NP (NNP Lobster) (NN pasta))
                        (ADVP (RB as) (RB well))))))))))))
    (. !)))


nsubj(dropped-2, I-1)
root(ROOT-0, dropped-2)
prep(dropped-2, into-3)
num(Chefs-5, 18-4)
pobj(into-3, Chefs-5)
num(day-7, one-6)
dep(Chefs-5, day-7)
prep(Chefs-5, for-8)
det(rice-11, the-9)
amod(rice-11, baked-10)
pobj(for-8, rice-11)
advmod(dropped-2, only-12)
aux(surprised-16, to-13)
cop(surprised-16, be-14)
advmod(surprised-16, pleasantly-15)
xcomp(dropped-2, surprised-16)
mark(started-20, that-17)
nsubj(started-20, Benny-18)
aux(started-20, has-19)
ccomp(surprised-16, started-20)
xcomp(started-20, serving-21)
nn(pasta-23, Lobster-22)
dobj(serving-21, pasta-23)
advmod(well-25, as-24)
advmod(serving-21, well-25)


(ROOT
  (S
    (NP (JJ Good) (NN thing))
    (NP (PRP I))
    (VP (VBD brought)
      (PRT (RP along))
      (NP (PRP$ my) (NN camera))
      (NP (DT that) (NN day)))
    (. .)))


amod(thing-2, Good-1)
nsubj(brought-4, thing-2)
nsubj(brought-4, I-3)
root(ROOT-0, brought-4)
prt(brought-4, along-5)
poss(camera-7, my-6)
dobj(brought-4, camera-7)
det(day-9, that-8)
tmod(brought-4, day-9)


(ROOT
  (S
    (NP (PRP I))
    (VP (MD ca) (RB n't)
      (VP (VB resist)
        (S
          (VP (VBG taking)
            (NP (DT some) (NNP Lobster) (NNS shots))))))
    (. .)))


nsubj(resist-4, I-1)
aux(resist-4, ca-2)
neg(resist-4, n't-3)
root(ROOT-0, resist-4)
xcomp(resist-4, taking-5)
det(shots-8, some-6)
nn(shots-8, Lobster-7)
dobj(taking-5, shots-8)


(ROOT
  (SQ (MD Do) (RB n't)
    (NP (PRP you))
    (VP (VB agree)
      (S
        (NP (PRP they))
        (VP (VB make)
          (NP (DT the) (JJ nicest) (NNS pictures)))))
    (. ?)))


aux(agree-4, Do-1)
neg(agree-4, n't-2)
nsubj(agree-4, you-3)
root(ROOT-0, agree-4)
nsubj(make-6, they-5)
ccomp(agree-4, make-6)
det(pictures-9, the-7)
amod(pictures-9, nicest-8)
dobj(make-6, pictures-9)


(ROOT
  (FRAG
    (ADVP (RB Now))
    (ADVP (RB ,))))


root(ROOT-0, Now-1)


(ROOT
  (S
    (NP (PRP you))
    (ADVP (RB already))
    (VP (VBP know)
      (SBAR
        (SBAR (IN that)
          (S
            (NP (NNP Lobster) (NNP Thermidor))
            (VP (VBZ holds)
              (NP
                (NP (DT that) (JJ special) (NN place))
                (PP (IN in)
                  (NP (PRP$ my) (NN heart)))))))
        (CC so)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP I))
            (VP (VBD found)
              (PRT (RP out))
              (SBAR (IN that)
                (S
                  (NP (NNP Benny))
                  (VP (VBD had)
                    (NP
                      (NP (DT some) (NNPS Lobsters))
                      (PP (IN in)
                        (NP (DT the) (NNS premises))))))))))))
    (, ,)))


nsubj(know-3, you-1)
advmod(know-3, already-2)
root(ROOT-0, know-3)
mark(holds-7, that-4)
nn(Thermidor-6, Lobster-5)
nsubj(holds-7, Thermidor-6)
ccomp(know-3, holds-7)
det(place-10, that-8)
amod(place-10, special-9)
dobj(holds-7, place-10)
prep(place-10, in-11)
poss(heart-13, my-12)
pobj(in-11, heart-13)
cc(holds-7, so-14)
advmod(found-17, when-15)
nsubj(found-17, I-16)
conj(holds-7, found-17)
prt(found-17, out-18)
mark(had-21, that-19)
nsubj(had-21, Benny-20)
ccomp(found-17, had-21)
det(Lobsters-23, some-22)
dobj(had-21, Lobsters-23)
prep(Lobsters-23, in-24)
det(premises-26, the-25)
pobj(in-24, premises-26)


(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD could) (RB not)
        (VP (VB resist))))
    (CC but)
    (S
      (VP (TO to)
        (VP (VB ask)
          (NP (NNP Benny))
          (SBAR (IN if)
            (S
              (NP (PRP he))
              (VP (MD could)
                (VP (VB make)
                  (NP
                    (NP (DT a) (NNP Lobster) (NNP Thermidor))
                    (PP (IN for)
                      (NP (PRP me)))))))))))
    (. .)))


nsubj(resist-4, I-1)
aux(resist-4, could-2)
neg(resist-4, not-3)
root(ROOT-0, resist-4)
cc(resist-4, but-5)
aux(ask-7, to-6)
conj(resist-4, ask-7)
dobj(ask-7, Benny-8)
mark(make-12, if-9)
nsubj(make-12, he-10)
aux(make-12, could-11)
advcl(ask-7, make-12)
det(Thermidor-15, a-13)
nn(Thermidor-15, Lobster-14)
dobj(make-12, Thermidor-15)
prep(Thermidor-15, for-16)
pobj(for-16, me-17)


(ROOT
  (S
    (NP (PRP I))
    (VP (VBD told)
      (SBAR
        (S
          (NP
            (NP (NNP Benny))
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP I))
                (VP (MD would)
                  (ADVP (RB really))
                  (VP (VB like))))))
          (VP (VBZ is)
            (NP
              (NP (DT a) (NN pasta))
              (PP (IN with)
                (NP
                  (NP (DT a) (NN seafood) (NN cream) (NN sauce))
                  (VP (VBN made)
                    (PP (IN by)
                      (S
                        (VP (VBG simmering)
                          (NP (DT the) (NNP Lobster) (NN shell))
                          (PP (IN with)
                            (NP
                              (NP (NNS scallops)
                                (CC and)
                                (NNS prawns))
                              (VP (VBN served)
                                (PP (IN with)
                                  (NP (DT the) (NNP Lobster) (NNP Thermidor)))
                                (PP (IN on)
                                  (NP (NN top)))))))))))))))))
    (. .)))


nsubj(told-2, I-1)
root(ROOT-0, told-2)
nsubj(pasta-11, Benny-3)
dobj(like-8, what-4)
nsubj(like-8, I-5)
aux(like-8, would-6)
advmod(like-8, really-7)
rcmod(Benny-3, like-8)
cop(pasta-11, is-9)
det(pasta-11, a-10)
ccomp(told-2, pasta-11)
prep(pasta-11, with-12)
det(sauce-16, a-13)
nn(sauce-16, seafood-14)
nn(sauce-16, cream-15)
pobj(with-12, sauce-16)
partmod(sauce-16, made-17)
prep(made-17, by-18)
pcomp(by-18, simmering-19)
det(shell-22, the-20)
nn(shell-22, Lobster-21)
dobj(simmering-19, shell-22)
prep(simmering-19, with-23)
pobj(with-23, scallops-24)
cc(scallops-24, and-25)
conj(scallops-24, prawns-26)
partmod(scallops-24, served-27)
prep(served-27, with-28)
det(Thermidor-31, the-29)
nn(Thermidor-31, Lobster-30)
pobj(with-28, Thermidor-31)
prep(served-27, on-32)
pobj(on-32, top-33)


(ROOT
  (S (`` ``)
    (VP (MD Can)
      (VP (VB do)
        (NP
          (QP (CC or)
            (RB not)))))
    (. ?)))


aux(do-3, Can-2)
root(ROOT-0, do-3)
cc(not-5, or-4)
dobj(do-3, not-5)


(ROOT
  (S ('' '')
    (NP (PRP I))
    (VP (VBD asked)
      (NP (NNP Benny)))
    (. .)))


nsubj(asked-3, I-2)
root(ROOT-0, asked-3)
dobj(asked-3, Benny-4)


(ROOT
  (S
    (NP (NNP Benny))
    (VP
      (VP (VBD gave)
        (NP (PRP me))
        (NP (PRP$ his) (JJ usual) (`` ``) (NN Severe) ('' '') (NN look)))
      (CC and)
      (VP (VBD said)
        (PP (IN with)
          (NP
            (NP (DT a) (NN note))
            (PP (IN of)
              (NP (NN confidence)))))))
    (, ,)))


nsubj(gave-2, Benny-1)
root(ROOT-0, gave-2)
iobj(gave-2, me-3)
poss(look-9, his-4)
amod(look-9, usual-5)
nn(look-9, Severe-7)
dobj(gave-2, look-9)
cc(gave-2, and-10)
conj(gave-2, said-11)
prep(said-11, with-12)
det(note-14, a-13)
pobj(with-12, note-14)
prep(note-14, of-15)
pobj(of-15, confidence-16)


(ROOT
  (FRAG
    (PP (IN ``)
      (NP (NNP Sure)))
    (, ,)))


pobj(``-1, Sure-2)


(ROOT
  (S
    (NP (PRP I))
    (VP (MD can)
      (VP (VB give)
        (NP (PRP it))
        (NP (DT a) (NN try) ('' ''))))
    (. .)))


nsubj(give-3, I-1)
aux(give-3, can-2)
root(ROOT-0, give-3)
iobj(give-3, it-4)
det(try-6, a-5)
dobj(give-3, try-6)


(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (NNP Grilled) (NNP Cheese)
            (CC and)
            (NNP Lobster))
          (VP (VBZ is)
            (NP
              (NP (RB just) (CD one))
              (PP (IN of)
                (NP (DT those)
                  (ADJP (`` ``) (JJ sure) (NN win) ('' ''))
                  (NNS combinations))))))))
    (. .)))


nsubj(think-2, I-1)
root(ROOT-0, think-2)
nn(Cheese-4, Grilled-3)
nsubj(one-9, Cheese-4)
cc(Cheese-4, and-5)
conj(Cheese-4, Lobster-6)
cop(one-9, is-7)
advmod(one-9, just-8)
ccomp(think-2, one-9)
prep(one-9, of-10)
det(combinations-16, those-11)
dep(win-14, sure-13)
amod(combinations-16, win-14)
pobj(of-10, combinations-16)


(ROOT
  (S
    (NP
      (NP (DT The) (NN seafood))
      (VP (VBN infused)
        (SBAR
          (S
            (NP (JJ bechemel) (NN sauce))
            (VP (VBD was)
              (VP (VBN scooped)
                (PP (IN into)
                  (NP (DT the) (NNP Lobster) (NN shell)))))))))
    (VP (VBD topped)
      (PP (IN with)
        (NP (NN cheese)
          (CC and)
          (NN grilled)))
      (PP (IN till)
        (NP (JJ nice)
          (CC and)
          (JJ golden) (NNS brown))))
    (. .)))


det(seafood-2, The-1)
nsubj(topped-12, seafood-2)
partmod(seafood-2, infused-3)
amod(sauce-5, bechemel-4)
nsubjpass(scooped-7, sauce-5)
auxpass(scooped-7, was-6)
ccomp(infused-3, scooped-7)
prep(scooped-7, into-8)
det(shell-11, the-9)
nn(shell-11, Lobster-10)
pobj(into-8, shell-11)
root(ROOT-0, topped-12)
prep(topped-12, with-13)
pobj(with-13, cheese-14)
cc(cheese-14, and-15)
conj(cheese-14, grilled-16)
prep(topped-12, till-17)
amod(brown-21, nice-18)
cc(nice-18, and-19)
conj(nice-18, golden-20)
pobj(till-17, brown-21)


(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB just))
    (VP (VBP love)
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (DT the) (NNP Cheese))
          (VP (VBZ manages)
            (S
              (VP (TO to)
                (VP (VB absorb)
                  (NP (DT the) (NNP Lobster) (NN taste))
                  (PP (IN from)
                    (NP (DT the) (NN shell))))))))))
    (. .)))


nsubj(love-3, I-1)
advmod(love-3, just-2)
root(ROOT-0, love-3)
advmod(manages-7, how-4)
det(Cheese-6, the-5)
nsubj(manages-7, Cheese-6)
ccomp(love-3, manages-7)
aux(absorb-9, to-8)
xcomp(manages-7, absorb-9)
det(taste-12, the-10)
nn(taste-12, Lobster-11)
dobj(absorb-9, taste-12)
prep(absorb-9, from-13)
det(shell-15, the-14)
pobj(from-13, shell-15)


(ROOT
  (S
    (NP
      (ADJP (RB Too) (JJ bad))
      (NNP Benny))
    (VP (VBD did) (RB n't)
      (VP (VB have)
        (NP
          (NP (DT a) (NN bit))
          (PP (IN of)
            (NP (NNP Brandy)
              (CC and)
              (NNP Gruyere) (NNP Cheese))))
        (SBAR (IN as)
          (S
            (NP (PRP it))
            (VP (MD would)
              (VP (VB have)
                (VP (VBN given)
                  (NP (PRP it))
                  (NP (DT that) (JJ extra) (NN kick)))))))))
    (. .)))


advmod(bad-2, Too-1)
amod(Benny-3, bad-2)
nsubj(have-6, Benny-3)
aux(have-6, did-4)
neg(have-6, n't-5)
root(ROOT-0, have-6)
det(bit-8, a-7)
dobj(have-6, bit-8)
prep(bit-8, of-9)
nn(Cheese-13, Brandy-10)
cc(Brandy-10, and-11)
conj(Brandy-10, Gruyere-12)
pobj(of-9, Cheese-13)
mark(given-18, as-14)
nsubj(given-18, it-15)
aux(given-18, would-16)
aux(given-18, have-17)
advcl(have-6, given-18)
iobj(given-18, it-19)
det(kick-22, that-20)
amod(kick-22, extra-21)
dobj(given-18, kick-22)


(ROOT
  (S
    (S
      (ADVP (RB Actually))
      (NP (DT this) (NN dish))
      (VP (MD should)
        (ADVP (RBR more))
        (ADVP (RB correctly))
        (VP (VB be)
          (VP (VBN called)
            (NP (DT a) (NNP Lobster) (NNP Mornay))
            (PP (IN than)
              (NP (DT a) (NNP Lobster) (NNP Thermidor)))))))
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP am) (RB not)
        (VP (VBG complaining))))
    (. .)))


advmod(called-8, Actually-1)
det(dish-3, this-2)
nsubjpass(called-8, dish-3)
aux(called-8, should-4)
advmod(called-8, more-5)
advmod(called-8, correctly-6)
auxpass(called-8, be-7)
root(ROOT-0, called-8)
det(Mornay-11, a-9)
nn(Mornay-11, Lobster-10)
dobj(called-8, Mornay-11)
prep(called-8, than-12)
det(Thermidor-15, a-13)
nn(Thermidor-15, Lobster-14)
pobj(than-12, Thermidor-15)
cc(called-8, but-16)
nsubj(complaining-20, I-17)
aux(complaining-20, am-18)
neg(complaining-20, not-19)
conj(called-8, complaining-20)


(ROOT
  (PP (IN At)
    (NP (NNP $))))


root(ROOT-0, At-1)
pobj(At-1, $-2)


(ROOT
  (NP (CD 18.90) (NN ,)))


num(,-2, 18.90-1)


(ROOT
  (S
    (NP (PRP I))
    (VP (MD would)
      (ADVP (RB certainly))
      (VP (VB be)
        (VP (VBG coming)
          (PRT (RP back))
          (PP (IN for)
            (NP (PRP it)))
          (ADVP (RB quite) (RB regularly)))))
    (. !)))


nsubj(coming-5, I-1)
aux(coming-5, would-2)
advmod(coming-5, certainly-3)
aux(coming-5, be-4)
root(ROOT-0, coming-5)
prt(coming-5, back-6)
prep(coming-5, for-7)
pobj(for-7, it-8)
advmod(regularly-10, quite-9)
advmod(coming-5, regularly-10)


(ROOT
  (PP (IN For)
    (NP
      (NP (DT those))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBP have)
            (VP (VBN been)
              (VP (VBG waiting)
                (PP (IN for)
                  (NP (DT the) (NNP Baked) (NNP Chilli) (NNP Crab)
                    (CC and)
                    (NNP Pepper) (NNP Crabs)))))))
        (, ,)))))


root(ROOT-0, For-1)
pobj(For-1, those-2)
nsubj(waiting-6, who-3)
aux(waiting-6, have-4)
aux(waiting-6, been-5)
rcmod(those-2, waiting-6)
prep(waiting-6, for-7)
det(Crab-11, the-8)
nn(Crab-11, Baked-9)
nn(Crab-11, Chilli-10)
pobj(for-7, Crab-11)
cc(Crab-11, and-12)
nn(Crabs-14, Pepper-13)
conj(Crab-11, Crabs-14)


(ROOT
  (S
    (NP (NNP Benny))
    (VP (VBZ has)
      (VP (VBN confirmed)
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (MD will)
              (VP (VB be)
                (PP (IN on)
                  (NP
                    (NP (DT the) (NN menu))
                    (PP (IN on)
                      (NP (NNP Wednesday) (NNS nights)))))
                (PP (VBG starting)
                  (PP (IN from)
                    (NP (DT this) (NN month))))))))))
    (. .)))


nsubj(confirmed-3, Benny-1)
aux(confirmed-3, has-2)
root(ROOT-0, confirmed-3)
mark(be-7, that-4)
nsubj(be-7, it-5)
aux(be-7, will-6)
ccomp(confirmed-3, be-7)
prep(be-7, on-8)
det(menu-10, the-9)
pobj(on-8, menu-10)
prep(menu-10, on-11)
nn(nights-13, Wednesday-12)
pobj(on-11, nights-13)
prep(be-7, starting-14)
pcomp(starting-14, from-15)
det(month-17, this-16)
pobj(from-15, month-17)


(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD will)
        (VP (VB have)
          (S
            (VP (TO to)
              (VP (VB call)
                (PP (IN in)
                  (NP (NN advance)))
                (PP (TO to)
                  (NP (NN book)))))))))
    (NP (PRP it))
    (VP (VBP yah))
    (. ?)))


nsubj(have-3, You-1)
aux(have-3, will-2)
dep(yah-11, have-3)
aux(call-5, to-4)
xcomp(have-3, call-5)
prep(call-5, in-6)
pobj(in-6, advance-7)
prep(call-5, to-8)
pobj(to-8, book-9)
nsubj(yah-11, it-10)
root(ROOT-0, yah-11)


(ROOT
  (S
    (VP (VB Found)
      (NP (DT a) (NN place)
        (S
          (VP (TO to)
            (VP (VB get)
              (NP (DT an) (JJ affordable) (NNP Lobster) (NNP Mornay) (NNP Pasta)))))))
    (. !)))


root(ROOT-0, Found-1)
det(place-3, a-2)
dobj(Found-1, place-3)
aux(get-5, to-4)
infmod(place-3, get-5)
det(Pasta-10, an-6)
amod(Pasta-10, affordable-7)
nn(Pasta-10, Lobster-8)
nn(Pasta-10, Mornay-9)
dobj(get-5, Pasta-10)


(ROOT
  (FRAG (RB Not)
    (PP (RB quite) (IN as)
      (NP
        (NP (`` ``) (NNP Cheok) ('' ''))
        (SBAR (IN as)
          (S
            (NP (DT a) (NNP Lobster) (NNP Thermidor))
            (VP (MD can)
              (VP (VB be)))
            (, ,)))))))


root(ROOT-0, Not-1)
advmod(as-3, quite-2)
prep(Not-1, as-3)
pobj(as-3, Cheok-5)
mark(be-12, as-7)
det(Thermidor-10, a-8)
nn(Thermidor-10, Lobster-9)
nsubj(be-12, Thermidor-10)
aux(be-12, can-11)
dep(Cheok-5, be-12)


(ROOT
  (S (CC but)
    (NP (`` ``) (NN Cheok) ('' ''))
    (VP
      (ADVP (RB enough)
        (PP (IN for)
          (NP (PRP me))))
      (S
        (VP (TO to)
          (VP (VB think)
            (PP (IN about)
              (S
                (VP (VBG going)
                  (PRT (RP back))
                  (PP (IN for)
                    (NP (DT another) (NN meal))))))))))
    (. .)))


cc(enough-5, but-1)
nsubj(enough-5, Cheok-3)
root(ROOT-0, enough-5)
prep(enough-5, for-6)
pobj(for-6, me-7)
aux(think-9, to-8)
xcomp(enough-5, think-9)
prep(think-9, about-10)
pcomp(about-10, going-11)
prt(going-11, back-12)
prep(going-11, for-13)
det(meal-15, another-14)
pobj(for-13, meal-15)


