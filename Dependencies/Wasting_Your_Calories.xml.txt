(ROOT
  (S
    (NP (DT The) (NNS studies))
    (VP (VBP have)
      (VP (VBN shown)
        (NP (PRP us))
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (MD can)
              (VP (VB live)
                (ADVP
                  (ADVP (RBR longer))
                  (SBAR (IN if)
                    (S
                      (NP (PRP you))
                      (VP (VB reduce)
                        (NP (PRP$ your) (JJ calorie) (NN intake))))))))))))
    (. .)))


det(studies-2, The-1)
nsubj(shown-4, studies-2)
aux(shown-4, have-3)
root(ROOT-0, shown-4)
dobj(shown-4, us-5)
mark(live-9, that-6)
nsubj(live-9, you-7)
aux(live-9, can-8)
ccomp(shown-4, live-9)
advmod(live-9, longer-10)
mark(reduce-13, if-11)
nsubj(reduce-13, you-12)
dep(longer-10, reduce-13)
poss(intake-16, your-14)
amod(intake-16, calorie-15)
dobj(reduce-13, intake-16)


(ROOT
  (S
    (PP (IN In)
      (NP (NN fact)))
    (NP (DT this))
    (VP (VBZ is)
      (SBAR
        (WHADJP (RB just) (WP what))
        (S
          (NP (PRP$ our) (NN MM))
          (VP (VBZ is)
            (VP (VBG doing)
              (ADVP (RB currently)))))))
    (. .)))


prep(is-4, In-1)
pobj(In-1, fact-2)
nsubj(is-4, this-3)
root(ROOT-0, is-4)
advmod(what-6, just-5)
dep(doing-10, what-6)
poss(MM-8, our-7)
nsubj(doing-10, MM-8)
aux(doing-10, is-9)
ccomp(is-4, doing-10)
advmod(doing-10, currently-11)


(ROOT
  (S
    (S
      (NP (DT The) (NNS reasons))
      (VP (VBP are)
        (ADJP (JJ obvious))))
    (CC or)
    (RB so)
    (S
      (NP (PRP it))
      (VP (VBZ seems)))
    (. .)))


det(reasons-2, The-1)
nsubj(obvious-4, reasons-2)
cop(obvious-4, are-3)
root(ROOT-0, obvious-4)
cc(obvious-4, or-5)
advmod(obvious-4, so-6)
nsubj(seems-8, it-7)
ccomp(obvious-4, seems-8)


(ROOT
  (FRAG
    (PP (IN By)
      (NP
        (NP (NN eating))
        (NP (JJR less))))
    (, ,)))


root(ROOT-0, By-1)
pobj(By-1, eating-2)
dep(eating-2, less-3)


(ROOT
  (S
    (S
      (NP (PRP you))
      (VP (VBP prevent)
        (NP
          (NP (NN obesity))
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBZ leads)
                (PP (TO to)
                  (NP (JJ chronic) (NNS diseases)))))))))
    (CC and)
    (ADVP (RB therefore))
    (S
      (NP
        (NP (PRP$ your) (NNS chances))
        (PP (IN of)
          (S
            (VP (VBG living)
              (ADVP (RBR longer))))))
      (VP (VBZ improves)))
    (. .)))


nsubj(prevent-2, you-1)
root(ROOT-0, prevent-2)
dobj(prevent-2, obesity-3)
nsubj(leads-5, which-4)
rcmod(obesity-3, leads-5)
prep(leads-5, to-6)
amod(diseases-8, chronic-7)
pobj(to-6, diseases-8)
cc(prevent-2, and-9)
advmod(prevent-2, therefore-10)
poss(chances-12, your-11)
nsubj(improves-16, chances-12)
prep(chances-12, of-13)
pcomp(of-13, living-14)
advmod(living-14, longer-15)
ccomp(prevent-2, improves-16)


(ROOT
  (SBAR (IN If)
    (S
      (NP (PRP you))
      (VP (VBP look)
        (PP (IN at)
          (NP (DT the) (NNS obituaries))))
      (, ,))))


mark(look-3, If-1)
nsubj(look-3, you-2)
root(ROOT-0, look-3)
prep(look-3, at-4)
det(obituaries-6, the-5)
pobj(at-4, obituaries-6)


(ROOT
  (S
    (NP (PRP you))
    (VP (MD will)
      (VP (VB notice)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT the) (NNS ones))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBP live)
                    (VP (VB pass)
                      (NP (CD 80)))))))
            (VP (VBP are)
              (ADVP (RB mainly))
              (NP (JJ thin) (NNS people)))))))
    (. .)))


nsubj(notice-3, you-1)
aux(notice-3, will-2)
root(ROOT-0, notice-3)
mark(people-14, that-4)
det(ones-6, the-5)
nsubj(people-14, ones-6)
nsubj(live-8, that-7)
rcmod(ones-6, live-8)
xcomp(live-8, pass-9)
dobj(pass-9, 80-10)
cop(people-14, are-11)
advmod(people-14, mainly-12)
amod(people-14, thin-13)
ccomp(notice-3, people-14)


(ROOT
  (S
    (NP (JJ Many) (NNS theories))
    (VP (VBP abound)
      (S
        (VP (TO to)
          (VP (VB try)
            (S
              (VP (TO to)
                (VP (VB explain)
                  (NP (DT this) (NNS phenomena)))))))))
    (. .)))


amod(theories-2, Many-1)
nsubj(abound-3, theories-2)
root(ROOT-0, abound-3)
aux(try-5, to-4)
xcomp(abound-3, try-5)
aux(explain-7, to-6)
xcomp(try-5, explain-7)
det(phenomena-9, this-8)
dobj(explain-7, phenomena-9)


(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (NP
        (NP (DT a) (JJ simple) (NN theory))
        (PP (IN of)
          (NP (PRP$ my) (JJ own)))))
    (. .)))


nsubj(have-2, I-1)
root(ROOT-0, have-2)
det(theory-5, a-3)
amod(theory-5, simple-4)
dobj(have-2, theory-5)
prep(theory-5, of-6)
poss(own-8, my-7)
pobj(of-6, own-8)


(ROOT
  (S
    (SBAR (RB Just)
      (S
        (VP (VBP imagine)
          (SBAR (IN that)
            (S
              (NP (NNP God))
              (VP (VBD had)
                (VP (VBN created)
                  (NP (PRP us))
                  (PP (IN with)
                    (NP
                      (NP (DT a) (JJ limited) (NN number))
                      (PP (IN of)
                        (NP (NNS calories))))))))))))
    (NP (PRP we))
    (VP (MD can)
      (VP (VB consume)
        (PP (IN in)
          (NP (PRP$ our) (NN lifetime)))))
    (. .)))


advmod(imagine-2, Just-1)
advcl(consume-16, imagine-2)
mark(created-6, that-3)
nsubj(created-6, God-4)
aux(created-6, had-5)
ccomp(imagine-2, created-6)
dobj(created-6, us-7)
prep(created-6, with-8)
det(number-11, a-9)
amod(number-11, limited-10)
pobj(with-8, number-11)
prep(number-11, of-12)
pobj(of-12, calories-13)
nsubj(consume-16, we-14)
aux(consume-16, can-15)
root(ROOT-0, consume-16)
prep(consume-16, in-17)
poss(lifetime-19, our-18)
pobj(in-17, lifetime-19)


(ROOT
  (S
    (NP
      (NP (DT The) (JJ average) (NN number))
      (PP (IN of)
        (NP
          (NP (NNS calories))
          (PP (IN for)
            (NP
              (NP (DT a) (NN child))
              (PP (IN of)
                (NP (CD 6))))))))
    (VP (VBZ is)
      (ADJP (JJ 1800\/day)))
    (, ,)))


det(number-3, The-1)
amod(number-3, average-2)
nsubj(1800\/day-12, number-3)
prep(number-3, of-4)
pobj(of-4, calories-5)
prep(calories-5, for-6)
det(child-8, a-7)
pobj(for-6, child-8)
prep(child-8, of-9)
pobj(of-9, 6-10)
cop(1800\/day-12, is-11)
root(ROOT-0, 1800\/day-12)


(ROOT
  (S
    (SBAR (IN for)
      (S
        (NP (DT an) (NN adult))
        (VP (VBZ is)
          (UCP
            (ADJP (JJ 2500\/day))
            (CC and)
            (PP (IN for)
              (NP (DT the) (JJ elderly)))))))
    (VP (VBZ is)
      (ADJP (JJ 1800\/day)))
    (. .)))


mark(2500\/day-5, for-1)
det(adult-3, an-2)
nsubj(2500\/day-5, adult-3)
cop(2500\/day-5, is-4)
csubj(1800\/day-11, 2500\/day-5)
cc(2500\/day-5, and-6)
conj(2500\/day-5, for-7)
det(elderly-9, the-8)
pobj(for-7, elderly-9)
cop(1800\/day-11, is-10)
root(ROOT-0, 1800\/day-11)


(ROOT
  (S
    (NP (RB So) (DT a) (JJ rough) (NN calculation))
    (VP (VBZ tells)
      (NP (PRP us))
      (NP
        (NP (DT that))
        (PP (IN in)
          (NP (DT an) (JJ average) (NN lifetime)))))
    (, ,)))


advmod(calculation-4, So-1)
det(calculation-4, a-2)
amod(calculation-4, rough-3)
nsubj(tells-5, calculation-4)
root(ROOT-0, tells-5)
iobj(tells-5, us-6)
dobj(tells-5, that-7)
prep(that-7, in-8)
det(lifetime-11, an-9)
amod(lifetime-11, average-10)
pobj(in-8, lifetime-11)


(ROOT
  (S
    (NP (DT a) (JJ human) (NN being))
    (VP (MD would)
      (VP (VB consume)
        (NP
          (QP (CD 63.5) (CD million))
          (NNS calories))))
    (. .)))


det(being-3, a-1)
amod(being-3, human-2)
nsubj(consume-5, being-3)
aux(consume-5, would-4)
root(ROOT-0, consume-5)
number(million-7, 63.5-6)
num(calories-8, million-7)
dobj(consume-5, calories-8)


(ROOT
  (FRAG
    (ADVP (RB Now))
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP want)
          (S
            (VP (TO to)
              (VP (VB spend)
                (NP (PDT all) (PRP$ your) (NNS calories))
                (PP
                  (ADVP (RB early))
                  (IN in)
                  (NP (NN life))
                  (, ,))))))))))


root(ROOT-0, Now-1)
mark(want-4, if-2)
nsubj(want-4, you-3)
dep(Now-1, want-4)
aux(spend-6, to-5)
xcomp(want-4, spend-6)
predet(calories-9, all-7)
poss(calories-9, your-8)
dobj(spend-6, calories-9)
advmod(in-11, early-10)
prep(spend-6, in-11)
pobj(in-11, life-12)


(ROOT
  (S
    (NP (PRP you))
    (VP (MD might)
      (ADVP (RB just))
      (VP
        (VP (VB run)
          (PRT (RP out))
          (PP (IN of)
            (NP (NNS calories))))
        (CC and)
        (VP (VB die)
          (ADJP (JJ young)))))
    (. .)))


nsubj(run-4, you-1)
aux(run-4, might-2)
advmod(run-4, just-3)
root(ROOT-0, run-4)
prt(run-4, out-5)
prep(run-4, of-6)
pobj(of-6, calories-7)
cc(run-4, and-8)
conj(run-4, die-9)
acomp(die-9, young-10)


(ROOT
  (S
    (PP (IN On)
      (NP (DT the) (JJ other) (NN hand)))
    (NP (PRP you))
    (VP (MD can)
      (VP
        (VP (VB conserve)
          (NP (PRP$ your) (NNS calories)))
        (CC and)
        (VP (VB live)
          (ADVP (RBR longer)))))
    (. .)))


prep(conserve-7, On-1)
det(hand-4, the-2)
amod(hand-4, other-3)
pobj(On-1, hand-4)
nsubj(conserve-7, you-5)
aux(conserve-7, can-6)
root(ROOT-0, conserve-7)
poss(calories-9, your-8)
dobj(conserve-7, calories-9)
cc(conserve-7, and-10)
conj(conserve-7, live-11)
advmod(live-11, longer-12)


(ROOT
  (FRAG
    (PP (IN For)
      (NP (PRP me)))
    (, ,)))


root(ROOT-0, For-1)
pobj(For-1, me-2)


(ROOT
  (S
    (NP (DT an) (JJ average) (NN lifespan))
    (VP (VBZ is)
      (ADJP (JJ good) (RB enough)))
    (. .)))


det(lifespan-3, an-1)
amod(lifespan-3, average-2)
nsubj(good-5, lifespan-3)
cop(good-5, is-4)
root(ROOT-0, good-5)
advmod(good-5, enough-6)


(ROOT
  (FRAG
    (ADVP (RB So))
    (SBAR
      (WHNP (WP what))
      (S
        (NP (PRP I))
        (VP (VBP do)
          (SBAR
            (S
              (VP (VBZ is)))))
        (, ,)))))


root(ROOT-0, So-1)
dobj(do-4, what-2)
nsubj(do-4, I-3)
dep(So-1, do-4)
ccomp(do-4, is-5)


(ROOT
  (S
    (NP (PRP I))
    (VP (VBP try)
      (S (RB not)
        (VP (TO to)
          (VP (VB eat)
            (NP (JJ unneccessary) (NNS calories))))))
    (. .)))


nsubj(try-2, I-1)
root(ROOT-0, try-2)
neg(eat-5, not-3)
aux(eat-5, to-4)
xcomp(try-2, eat-5)
amod(calories-7, unneccessary-6)
dobj(eat-5, calories-7)


(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (NP (PRP I))
        (VP (VBP mean)
          (PP (IN by)
            (NP (JJ unncessary) (NNS calories))))))
    (VP (VBZ is)
      (NP
        (NP (NN food))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP
              (VP
                (ADVP (RB just))
                (VBZ fills)
                (NP (PRP you))
                (PRT (RP up)))
              (CC but)
              (VP (VBZ tastes)
                (ADVP (RB yuckky))))))))
    (. .)))


dobj(mean-3, What-1)
nsubj(mean-3, I-2)
csubj(food-8, mean-3)
prep(mean-3, by-4)
amod(calories-6, unncessary-5)
pobj(by-4, calories-6)
cop(food-8, is-7)
root(ROOT-0, food-8)
nsubj(fills-11, that-9)
advmod(fills-11, just-10)
rcmod(food-8, fills-11)
dobj(fills-11, you-12)
prt(fills-11, up-13)
cc(fills-11, but-14)
conj(fills-11, tastes-15)
advmod(tastes-15, yuckky-16)


(ROOT
  (S
    (VP (VB Remember)
      (SBAR (IN that) (IN since)
        (S
          (NP (PRP you))
          (VP (VBP have)
            (VP (VBN limited)
              (NP (NNS calories))
              (S
                (VP (TO to)
                  (VP (VB spend)))
                (, ,)))))))))


root(ROOT-0, Remember-1)
mark(limited-6, that-2)
mark(limited-6, since-3)
nsubj(limited-6, you-4)
aux(limited-6, have-5)
advcl(Remember-1, limited-6)
dobj(limited-6, calories-7)
aux(spend-9, to-8)
xcomp(limited-6, spend-9)


(ROOT
  (S
    (NP (PRP you))
    (VP (MD might)
      (ADVP (RB as) (RB well))
      (VP (VB spend)
        (NP (PRP it))
        (PP (IN on)
          (NP
            (NP (NN food))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ tastes)
                  (ADJP (JJ good)))))))))
    (. .)))


nsubj(spend-5, you-1)
aux(spend-5, might-2)
advmod(well-4, as-3)
advmod(spend-5, well-4)
root(ROOT-0, spend-5)
dobj(spend-5, it-6)
prep(spend-5, on-7)
pobj(on-7, food-8)
nsubj(tastes-10, that-9)
rcmod(food-8, tastes-10)
acomp(tastes-10, good-11)


(ROOT
  (S
    (NP (NNP DO) (NNP N'T))
    (VP (VBP WASTE)
      (NP (JJ YOUR) (NNS CALORIES))
      (PP (IN on)
        (NP
          (NP (DT a) (NN plate))
          (PP (IN of)
            (NP (NNP unremarkable) (NNP Char) (NNP Kway) (NNP Teow))))))
    (. .)))


nn(N'T-2, DO-1)
nsubj(WASTE-3, N'T-2)
root(ROOT-0, WASTE-3)
amod(CALORIES-5, YOUR-4)
dobj(WASTE-3, CALORIES-5)
prep(WASTE-3, on-6)
det(plate-8, a-7)
pobj(on-6, plate-8)
prep(plate-8, of-9)
nn(Teow-13, unremarkable-10)
nn(Teow-13, Char-11)
nn(Teow-13, Kway-12)
pobj(of-9, Teow-13)


(ROOT
  (FRAG
    (PP (IN No))
    (, ,)))


root(ROOT-0, No-1)


(ROOT
  (S
    (NP (PRP you))
    (VP (MD should)
      (VP (VB save)
        (PRT (RP up))
        (NP (PRP$ your) (NNS calories))
        (PP (IN for)
          (NP
            (NP (DT that) (JJ juicy) (NNP US) (NNP Prime) (NNP Rib) (NN steak))
            (PP (IN at)
              (NP
                (NP (DT the) (NN end))
                (PP (IN of)
                  (NP (DT the) (NN week)))))))))
    (. .)))


nsubj(save-3, you-1)
aux(save-3, should-2)
root(ROOT-0, save-3)
prt(save-3, up-4)
poss(calories-6, your-5)
dobj(save-3, calories-6)
prep(save-3, for-7)
det(steak-13, that-8)
amod(steak-13, juicy-9)
nn(steak-13, US-10)
nn(steak-13, Prime-11)
nn(steak-13, Rib-12)
pobj(for-7, steak-13)
prep(steak-13, at-14)
det(end-16, the-15)
pobj(at-14, end-16)
prep(end-16, of-17)
det(week-19, the-18)
pobj(of-17, week-19)


(ROOT
  (SBAR (IN If)
    (S
      (NP (PRP you))
      (VP (MD can)
        (VP (VB think)
          (PP (IN about)
            (NP (PRP$ your) (NNS calories)))
          (PP (IN like)
            (SBAR
              (WHADVP (WRB how))
              (S
                (NP (PRP you))
                (VP (VBP plan)
                  (NP (PRP$ your) (NNS finances))))))
          (, ,))))))


mark(think-4, If-1)
nsubj(think-4, you-2)
aux(think-4, can-3)
root(ROOT-0, think-4)
prep(think-4, about-5)
poss(calories-7, your-6)
pobj(about-5, calories-7)
prep(think-4, like-8)
advmod(plan-11, how-9)
nsubj(plan-11, you-10)
pcomp(like-8, plan-11)
poss(finances-13, your-12)
dobj(plan-11, finances-13)


(ROOT
  (S
    (ADVP (RB then))
    (NP (PRP you))
    (VP (MD would)
      (VP (VB be)
        (PP (IN in)
          (NP
            (NP (DT a) (JJR better) (NN state))
            (PP (IN of)
              (NP (NN health)))))))
    (. .)))


advmod(be-4, then-1)
nsubj(be-4, you-2)
aux(be-4, would-3)
root(ROOT-0, be-4)
prep(be-4, in-5)
det(state-8, a-6)
amod(state-8, better-7)
pobj(in-5, state-8)
prep(state-8, of-9)
pobj(of-9, health-10)


(ROOT
  (FRAG
    (PP (RB Just) (RB as) (IN in)
      (ADVP (RB finances)))
    (, ,)))


advmod(in-3, Just-1)
advmod(in-3, as-2)
root(ROOT-0, in-3)
pcomp(in-3, finances-4)


(ROOT
  (S
    (NP (DT the) (NN advise))
    (VP (VBZ is) (RB not)
      (S
        (VP (TO to)
          (VP (VB spend)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP you))
                (VP (VBP do) (RB not)
                  (VP (VB have)))))))))
    (, ,)))


det(advise-2, the-1)
nsubj(is-3, advise-2)
root(ROOT-0, is-3)
neg(is-3, not-4)
aux(spend-6, to-5)
xcomp(is-3, spend-6)
dobj(have-11, what-7)
nsubj(have-11, you-8)
aux(have-11, do-9)
neg(have-11, not-10)
ccomp(spend-6, have-11)


(ROOT
  (S
    (VP
      (VP (VB save)
        (NP
          (NP (DT all))
          (SBAR
            (S
              (NP (PRP you))
              (VP (MD can))))))
      (CC and)
      (VP (VB invest)
        (PP (IN for)
          (NP (DT the) (NN future)))))
    (. .)))


root(ROOT-0, save-1)
dobj(save-1, all-2)
nsubj(can-4, you-3)
rcmod(all-2, can-4)
cc(save-1, and-5)
conj(save-1, invest-6)
prep(invest-6, for-7)
det(future-9, the-8)
pobj(for-7, future-9)


(ROOT
  (S
    (VP (VB Do)
      (ADVP (RB likewise))
      (PP (IN for)
        (NP (PRP$ your) (NN health))))
    (. .)))


root(ROOT-0, Do-1)
advmod(Do-1, likewise-2)
prep(Do-1, for-3)
poss(health-5, your-4)
pobj(for-3, health-5)


(ROOT
  (FRAG
    (PP (IN If)
      (PP (IN during)
        (NP (DT the) (NN week))))
    (, ,)))


root(ROOT-0, If-1)
pcomp(If-1, during-2)
det(week-4, the-3)
pobj(during-2, week-4)


(ROOT
  (S
    (NP (PRP you))
    (VP (VBP have)
      (VP (VBN replaced)
        (NP
          (NP (CD 3) (JJ lousy) (NNS meals))
          (PP (IN for)
            (NP (JJ healthy) (NNS salads)
              (CC and)
              (NNS fruits))))))
    (, ,)))


nsubj(replaced-3, you-1)
aux(replaced-3, have-2)
root(ROOT-0, replaced-3)
num(meals-6, 3-4)
amod(meals-6, lousy-5)
dobj(replaced-3, meals-6)
prep(meals-6, for-7)
amod(salads-9, healthy-8)
pobj(for-7, salads-9)
cc(salads-9, and-10)
conj(salads-9, fruits-11)


(ROOT
  (S
    (ADVP (RB then))
    (NP (PRP you))
    (VP (VBP have)
      (ADVP (RB actually))
      (VP (VBN saved)
        (NP (DT some) (NNS calories))
        (S
          (VP (TO to)
            (VP (VB spend)
              (PP (IN on)
                (NP (PRP$ your) (NN steak))))))))
    (. .)))


advmod(saved-5, then-1)
nsubj(saved-5, you-2)
aux(saved-5, have-3)
advmod(saved-5, actually-4)
root(ROOT-0, saved-5)
det(calories-7, some-6)
dobj(saved-5, calories-7)
aux(spend-9, to-8)
xcomp(saved-5, spend-9)
prep(spend-9, on-10)
poss(steak-12, your-11)
pobj(on-10, steak-12)


(ROOT
  (FRAG
    (PP (IN By)
      (NP
        (NP (NN saving) (NNS calories))
        (NP (DT this) (NN way))))
    (, ,)))


root(ROOT-0, By-1)
nn(calories-3, saving-2)
pobj(By-1, calories-3)
det(way-5, this-4)
dep(calories-3, way-5)


(ROOT
  (S
    (NP (PRP you))
    (VP (MD will)
      (VP (VB be)
        (VP (VBG investing)
          (PP (IN in)
            (NP (DT a)
              (ADJP (JJR better)
                (CC and)
                (JJR longer))
              (NN future))))))
    (. .)))


nsubj(investing-4, you-1)
aux(investing-4, will-2)
aux(investing-4, be-3)
root(ROOT-0, investing-4)
prep(investing-4, in-5)
det(future-10, a-6)
amod(future-10, better-7)
cc(better-7, and-8)
conj(better-7, longer-9)
pobj(in-5, future-10)


(ROOT
  (S
    (NP (JJ Makes) (NN sense))
    (VP (VBZ does) (RB n't)
      (NP (PRP it)))
    (. ?)))


amod(sense-2, Makes-1)
nsubj(does-3, sense-2)
root(ROOT-0, does-3)
neg(does-3, n't-4)
dobj(does-3, it-5)


