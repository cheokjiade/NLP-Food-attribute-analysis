(ROOT
  (S
    (NP (DT This) (NNP Recipe))
    (VP (VBD was)
      (VP (VBN brought)
        (PP (TO to)
          (NP (PRP you)))
        (PP (IN by)
          (NP (NNP Mayer)))))
    (, ,)))


det(Recipe-2, This-1)
nsubjpass(brought-4, Recipe-2)
auxpass(brought-4, was-3)
root(ROOT-0, brought-4)
prep(brought-4, to-5)
pobj(to-5, you-6)
prep(brought-4, by-7)
pobj(by-7, Mayer-8)


(ROOT
  (S
    (NP
      (NP (DT the) (NNP Kitchen) (NNP Speclialist) (NNP Exclusive) (NN offer))
      (PP (IN for)
        (NP
          (NP (JJ ieatishootipost) (NNS readers))
          (PP (IN at)
            (NP
              (NP (DT the) (NN end))
              (PP (IN of)
                (NP (DT the) (NN post))))))))
    (ADVP (RB There))
    (VP (VBP are)
      (NP
        (NP (JJ many) (NNS recipes))
        (PP (IN for)
          (NP
            (NP (NNP Roast) (NNP Chicken))
            (PP (IN on)
              (NP (DT the) (NN internet)))))))
    (, ,)))


det(offer-5, the-1)
nn(offer-5, Kitchen-2)
nn(offer-5, Speclialist-3)
nn(offer-5, Exclusive-4)
nsubj(recipes-18, offer-5)
prep(offer-5, for-6)
amod(readers-8, ieatishootipost-7)
pobj(for-6, readers-8)
prep(readers-8, at-9)
det(end-11, the-10)
pobj(at-9, end-11)
prep(end-11, of-12)
det(post-14, the-13)
pobj(of-12, post-14)
advmod(recipes-18, There-15)
cop(recipes-18, are-16)
amod(recipes-18, many-17)
root(ROOT-0, recipes-18)
prep(recipes-18, for-19)
nn(Chicken-21, Roast-20)
pobj(for-19, Chicken-21)
prep(Chicken-21, on-22)
det(internet-24, the-23)
pobj(on-22, internet-24)


(ROOT
  (S (CC but)
    (NP (PRP I))
    (VP (VBP have) (RB n't)
      (VP (VBN come)
        (PP (IN across)
          (NP
            (NP (CD one))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBZ deals)
                  (PP (IN with)
                    (NP
                      (NP (DT the) (JJ Chinese) (NNP Style) (NNP Crispy) (NNP Roast) (NNP Chicken))
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (NP (PRP I))
                          (VP (VBP love)
                            (S
                              (VP (TO to)
                                (VP (VB eat)
                                  (PP (IN at)
                                    (NP (NNP Cantonese) (NNS restaurants))))))))))))))))))
    (. .)))


cc(come-5, but-1)
nsubj(come-5, I-2)
aux(come-5, have-3)
neg(come-5, n't-4)
root(ROOT-0, come-5)
prep(come-5, across-6)
pobj(across-6, one-7)
nsubj(deals-9, which-8)
rcmod(one-7, deals-9)
prep(deals-9, with-10)
det(Chicken-16, the-11)
amod(Chicken-16, Chinese-12)
nn(Chicken-16, Style-13)
nn(Chicken-16, Crispy-14)
nn(Chicken-16, Roast-15)
pobj(with-10, Chicken-16)
dobj(love-19, which-17)
nsubj(love-19, I-18)
rcmod(Chicken-16, love-19)
aux(eat-21, to-20)
xcomp(love-19, eat-21)
prep(eat-21, at-22)
nn(restaurants-24, Cantonese-23)
pobj(at-22, restaurants-24)


(ROOT
  (S (IN So)
    (NP (PRP I))
    (VP (VBP hope)
      (SBAR
        (S
          (NP (DT this) (NN recipe))
          (VP (MD will)
            (VP (VB be)
              (ADJP (JJ useful)
                (PP (IN for)
                  (NP
                    (NP (NN anyone))
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (VBZ wants)
                          (S
                            (VP (TO to)
                              (VP (VB make)
                                (NP (DT this) (JJ yummy) (NN dish))
                                (PP (IN at)
                                  (NP (NN home)))))))))))))))))
    (. .)))


dep(hope-3, So-1)
nsubj(hope-3, I-2)
root(ROOT-0, hope-3)
det(recipe-5, this-4)
nsubj(useful-8, recipe-5)
aux(useful-8, will-6)
cop(useful-8, be-7)
ccomp(hope-3, useful-8)
prep(useful-8, for-9)
pobj(for-9, anyone-10)
nsubj(wants-12, who-11)
rcmod(anyone-10, wants-12)
aux(make-14, to-13)
xcomp(wants-12, make-14)
det(dish-17, this-15)
amod(dish-17, yummy-16)
dobj(make-14, dish-17)
prep(make-14, at-18)
pobj(at-18, home-19)


(ROOT
  (FRAG
    (PP (IN Typically))
    (, ,)))


root(ROOT-0, Typically-1)


(ROOT
  (S
    (NP
      (NP (DT the) (NN roast) (NN chicken))
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBP buy)
            (ADVP (RB outside))))))
    (VP (VBZ is) (RB not)
      (ADJP (RB really) (JJ roasted)))
    (. .)))


det(chicken-3, the-1)
nn(chicken-3, roast-2)
nsubj(roasted-11, chicken-3)
mark(buy-6, that-4)
nsubj(buy-6, you-5)
dep(chicken-3, buy-6)
advmod(buy-6, outside-7)
cop(roasted-11, is-8)
neg(roasted-11, not-9)
advmod(roasted-11, really-10)
root(ROOT-0, roasted-11)


(ROOT
  (S
    (NP (DT The) (JJ whole) (NN chicken))
    (VP (VBZ is)
      (ADVP (RB actually))
      (ADJP (RB deep) (JJ fried)
        (PP (IN in)
          (NP (NN oil)))))
    (. .)))


det(chicken-3, The-1)
amod(chicken-3, whole-2)
nsubj(fried-7, chicken-3)
cop(fried-7, is-4)
advmod(fried-7, actually-5)
advmod(fried-7, deep-6)
root(ROOT-0, fried-7)
prep(fried-7, in-8)
pobj(in-8, oil-9)


(ROOT
  (S
    (S
      (VP (VBG Doing)
        (NP (DT this))
        (PP (IN at)
          (NP (NN home)))))
    (VP (VBZ is) (RB not)
      (ADJP (JJ practical))
      (SBAR (IN as)
        (S
          (NP (EX there))
          (VP (VBZ is)
            (NP
              (NP (DT a) (NN lot))
              (PP (IN of)
                (NP (NN wastage))))))))
    (. .)))


csubj(practical-7, Doing-1)
dobj(Doing-1, this-2)
prep(Doing-1, at-3)
pobj(at-3, home-4)
cop(practical-7, is-5)
neg(practical-7, not-6)
root(ROOT-0, practical-7)
mark(is-10, as-8)
expl(is-10, there-9)
advcl(practical-7, is-10)
det(lot-12, a-11)
nsubj(is-10, lot-12)
prep(lot-12, of-13)
pobj(of-13, wastage-14)


(ROOT
  (FRAG
    (PP (IN With)
      (NP (DT this) (NN recipe)))
    (, ,)))


root(ROOT-0, With-1)
det(recipe-3, this-2)
pobj(With-1, recipe-3)


(ROOT
  (S
    (S
      (NP (DT the) (NN chicken))
      (VP (VBZ is)
        (ADVP (RB first))
        (ADJP (JJ roasted)
          (PP (IN at)
            (NP (DT a) (JJ low) (NN temperature))))
        (S
          (VP (TO to)
            (VP (VB ensure)
              (SBAR (IN that)
                (S
                  (NP (DT the) (NN meat))
                  (VP (VBZ does) (RB not)
                    (VP (VB lose)
                      (NP (PRP$ its) (NNS juices)))))))))))
    (CC and)
    (RB then)
    (S
      (NP (DT the) (NN skin))
      (VP (VBZ is)
        (VP (VBN browned)
          (S
            (VP (TO to)
              (VP (VB give)
                (NP (PRP it))
                (NP (DT that)
                  (ADJP (RB crispy) (JJ bronzed))
                  (NN skin))))))))
    (. .)))


det(chicken-2, the-1)
nsubj(roasted-5, chicken-2)
cop(roasted-5, is-3)
advmod(roasted-5, first-4)
root(ROOT-0, roasted-5)
prep(roasted-5, at-6)
det(temperature-9, a-7)
amod(temperature-9, low-8)
pobj(at-6, temperature-9)
aux(ensure-11, to-10)
xcomp(roasted-5, ensure-11)
mark(lose-17, that-12)
det(meat-14, the-13)
nsubj(lose-17, meat-14)
aux(lose-17, does-15)
neg(lose-17, not-16)
ccomp(ensure-11, lose-17)
poss(juices-19, its-18)
dobj(lose-17, juices-19)
cc(roasted-5, and-20)
advmod(roasted-5, then-21)
det(skin-23, the-22)
nsubjpass(browned-25, skin-23)
auxpass(browned-25, is-24)
ccomp(roasted-5, browned-25)
aux(give-27, to-26)
xcomp(browned-25, give-27)
iobj(give-27, it-28)
det(skin-32, that-29)
advmod(bronzed-31, crispy-30)
amod(skin-32, bronzed-31)
dobj(give-27, skin-32)


(ROOT
  (NP
    (NP (PRP$ My) (JJ new) (NN Ariston))
    (NP (NNP OpenSpace) (NNP Oven))))


poss(Ariston-3, My-1)
amod(Ariston-3, new-2)
root(ROOT-0, Ariston-3)
nn(Oven-5, OpenSpace-4)
dep(Ariston-3, Oven-5)


(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP have)
        (ADVP (RB just))
        (VP (VBN swapped)
          (NP (PRP$ my) (JJ old) (NN oven))
          (PP (IN for)
            (NP (DT a) (NN brand) (JJ new) (NNP Ariston) (NNP Openspace) (NNP oven))))))
    (CC and)
    (RB so)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN been)
          (VP (VBG doing)
            (NP (DT a) (JJ few) (NN kitchen) (NNS experiments))
            (PP (IN with)
              (NP (PRP$ my) (JJ new) (NN gadget)))))))
    (. .)))


nsubj(swapped-4, I-1)
aux(swapped-4, have-2)
advmod(swapped-4, just-3)
root(ROOT-0, swapped-4)
poss(oven-7, my-5)
amod(oven-7, old-6)
dobj(swapped-4, oven-7)
prep(swapped-4, for-8)
det(oven-14, a-9)
nn(oven-14, brand-10)
amod(oven-14, new-11)
nn(oven-14, Ariston-12)
nn(oven-14, Openspace-13)
pobj(for-8, oven-14)
cc(swapped-4, and-15)
advmod(swapped-4, so-16)
nsubj(doing-20, I-17)
aux(doing-20, have-18)
aux(doing-20, been-19)
ccomp(swapped-4, doing-20)
det(experiments-24, a-21)
amod(experiments-24, few-22)
nn(experiments-24, kitchen-23)
dobj(doing-20, experiments-24)
prep(doing-20, with-25)
poss(gadget-28, my-26)
amod(gadget-28, new-27)
pobj(with-25, gadget-28)


(ROOT
  (FRAG
    (ADVP (RB Essentially))
    (NP (DT the) (NN oven)
      (SBAR
        (S
          (VP (VBZ gives)
            (NP (PRP me))
            (NP (DT a)
              (ADJP (CD 20) (NN %)))))))))


dep(oven-3, Essentially-1)
det(oven-3, the-2)
root(ROOT-0, oven-3)
ccomp(oven-3, gives-4)
iobj(gives-4, me-5)
det(%-8, a-6)
number(%-8, 20-7)
dobj(gives-4, %-8)


(ROOT
  (S
    (VP (VB increase)
      (PP (IN in)
        (NP (DT the) (JJ internal) (NN space)))
      (SBAR (IN while)
        (S
          (NP (DT the) (JJ external) (NN dimension))
          (VP (VBZ is)
            (ADVP (RB still))
            (NP (DT the) (JJ same))))))
    (. .)))


root(ROOT-0, increase-1)
prep(increase-1, in-2)
det(space-5, the-3)
amod(space-5, internal-4)
pobj(in-2, space-5)
mark(same-13, while-6)
det(dimension-9, the-7)
amod(dimension-9, external-8)
nsubj(same-13, dimension-9)
cop(same-13, is-10)
advmod(same-13, still-11)
det(same-13, the-12)
advcl(increase-1, same-13)


(ROOT
  (S
    (NP (DT That))
    (VP (VBZ means)
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (ADVP (RB simply))
          (VP (VBD swapped)
            (NP
              (NP (PRP$ my) (JJ standard) (CD 58) (NN litre) (NN oven))
              (PP (IN for)
                (NP (DT a) (CD 70) (NN litre) (CD one))))
            (PP (IN without)
              (S
                (VP (VBG having)
                  (S
                    (VP (TO to)
                      (VP (VB do)
                        (NP (DT any) (NN alteration))
                        (PP (TO to)
                          (NP (PRP$ my) (NN Kitchen) (NN furniture)))))))))))))
    (. .)))


nsubj(means-2, That-1)
root(ROOT-0, means-2)
mark(swapped-6, that-3)
nsubj(swapped-6, I-4)
advmod(swapped-6, simply-5)
ccomp(means-2, swapped-6)
poss(oven-11, my-7)
amod(oven-11, standard-8)
num(oven-11, 58-9)
nn(oven-11, litre-10)
dobj(swapped-6, oven-11)
prep(oven-11, for-12)
det(litre-15, a-13)
num(litre-15, 70-14)
pobj(for-12, litre-15)
num(litre-15, one-16)
prep(swapped-6, without-17)
pcomp(without-17, having-18)
aux(do-20, to-19)
xcomp(having-18, do-20)
det(alteration-22, any-21)
dobj(do-20, alteration-22)
prep(do-20, to-23)
poss(furniture-26, my-24)
nn(furniture-26, Kitchen-25)
pobj(to-23, furniture-26)


(ROOT
  (S
    (NP (DT The) (NN oven))
    (VP (MD can)
      (VP (VB be)
        (VP (VBN divided)
          (PP (IN into)
            (NP (CD two) (JJ separate) (NNS compartments))))))
    (, ,)))


det(oven-2, The-1)
nsubjpass(divided-5, oven-2)
aux(divided-5, can-3)
auxpass(divided-5, be-4)
root(ROOT-0, divided-5)
prep(divided-5, into-6)
num(compartments-9, two-7)
amod(compartments-9, separate-8)
pobj(into-6, compartments-9)


(ROOT
  (S
    (S
      (NP (DT a) (JJR smaller) (CD 20))
      (VP (VBP litre)
        (PP (IN on)
          (NP (NN top)))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP you))
            (VP (MD can)
              (VP (VB bake)
                (CC and)
                (VB grill)))))))
    (CC and)
    (S
      (NP (DT a) (JJR larger) (CD 48))
      (VP (VBP litre)
        (NP (NN compartment))
        (PP (IN on)
          (NP
            (NP (DT the) (NN bottom))
            (PP (IN for)
              (NP (VBG baking)))))))
    (. .)))


det(smaller-2, a-1)
nsubj(litre-4, smaller-2)
num(smaller-2, 20-3)
root(ROOT-0, litre-4)
prep(litre-4, on-5)
pobj(on-5, top-6)
advmod(bake-10, where-7)
nsubj(bake-10, you-8)
aux(bake-10, can-9)
advcl(litre-4, bake-10)
cc(bake-10, and-11)
conj(bake-10, grill-12)
cc(litre-4, and-13)
det(larger-15, a-14)
nsubj(litre-17, larger-15)
num(larger-15, 48-16)
conj(litre-4, litre-17)
dobj(litre-17, compartment-18)
prep(litre-17, on-19)
det(bottom-21, the-20)
pobj(on-19, bottom-21)
prep(bottom-21, for-22)
pobj(for-22, baking-23)


(ROOT
  (S
    (NP (DT Both) (NNS compartments))
    (VP (VBP have)
      (NP (PRP$ their) (JJ own) (NNS controls))
      (SBAR (IN so)
        (S
          (NP (PRP you))
          (VP (MD can)
            (ADVP (RB actually))
            (VP (VB grill)
              (NP
                (NP (NN something))
                (PP (IN in)
                  (NP (DT the) (JJ top) (NN compartment))))
              (PP (IN while)
                (S
                  (VP (VBG baking)
                    (NP (DT another) (NN item))
                    (PP (IN in)
                      (NP (DT the) (NN bottom)))))))))))
    (. .)))


det(compartments-2, Both-1)
nsubj(have-3, compartments-2)
root(ROOT-0, have-3)
poss(controls-6, their-4)
amod(controls-6, own-5)
dobj(have-3, controls-6)
mark(grill-11, so-7)
nsubj(grill-11, you-8)
aux(grill-11, can-9)
advmod(grill-11, actually-10)
advcl(have-3, grill-11)
dobj(grill-11, something-12)
prep(something-12, in-13)
det(compartment-16, the-14)
amod(compartment-16, top-15)
pobj(in-13, compartment-16)
prep(grill-11, while-17)
pcomp(while-17, baking-18)
det(item-20, another-19)
dobj(baking-18, item-20)
prep(baking-18, in-21)
det(bottom-23, the-22)
pobj(in-21, bottom-23)


(ROOT
  (FRAG
    (PP (IN With)
      (NP (DT this) (NN flexibility)))
    (, ,)))


root(ROOT-0, With-1)
det(flexibility-3, this-2)
pobj(With-1, flexibility-3)


(ROOT
  (S
    (NP (PRP I))
    (VP (VBD was)
      (ADJP (JJ able)
        (S
          (VP (TO to)
            (VP
              (VP (VB roast)
                (NP
                  (NP (DT a) (NN chicken))
                  (PP (IN in)
                    (NP (DT the) (JJ bottom) (NN compartment)))))
              (CC and)
              (VP (VB bake)
                (NP (DT some) (NN cornbread))
                (PP (IN at)
                  (NP (DT the) (NN top)))))))))
    (. .)))


nsubj(able-3, I-1)
cop(able-3, was-2)
root(ROOT-0, able-3)
aux(roast-5, to-4)
xcomp(able-3, roast-5)
det(chicken-7, a-6)
dobj(roast-5, chicken-7)
prep(chicken-7, in-8)
det(compartment-11, the-9)
amod(compartment-11, bottom-10)
pobj(in-8, compartment-11)
cc(roast-5, and-12)
conj(roast-5, bake-13)
det(cornbread-15, some-14)
dobj(bake-13, cornbread-15)
prep(bake-13, at-16)
det(top-18, the-17)
pobj(at-16, top-18)


(ROOT
  (S
    (NP (DT The) (JJ individual) (NNS controls))
    (VP (VBD meant)
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (MD can)
            (VP (VB vary)
              (NP (DT the) (NN temperature))
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP I))
                  (VP (VBP am)
                    (VP (VBG roasting)
                      (NP (DT the) (NN chicken))
                      (PP (IN while)
                        (S
                          (VP (VBG keeping)
                            (NP (DT a) (JJ constant) (NN temperature))
                            (PP (IN for)
                              (NP (DT the) (NN cornbread)))))))))))))))
    (. !)))


det(controls-3, The-1)
amod(controls-3, individual-2)
nsubj(meant-4, controls-3)
root(ROOT-0, meant-4)
mark(vary-8, that-5)
nsubj(vary-8, I-6)
aux(vary-8, can-7)
ccomp(meant-4, vary-8)
det(temperature-10, the-9)
dobj(vary-8, temperature-10)
advmod(roasting-14, when-11)
nsubj(roasting-14, I-12)
aux(roasting-14, am-13)
advcl(vary-8, roasting-14)
det(chicken-16, the-15)
dobj(roasting-14, chicken-16)
prep(roasting-14, while-17)
pcomp(while-17, keeping-18)
det(temperature-21, a-19)
amod(temperature-21, constant-20)
dobj(keeping-18, temperature-21)
prep(keeping-18, for-22)
det(cornbread-24, the-23)
pobj(for-22, cornbread-24)


(ROOT
  (S
    (NP (DT The) (NN oven))
    (VP (MD can)
      (VP (VB be)
        (VP (VBN converted)
          (PP (TO to)
            (NP (DT a) (JJ single) (CD 70) (NN litre) (NN oven)))
          (PP (IN by)
            (S
              (ADVP (RB simply))
              (VP (VBG removing)
                (NP (DT the) (NN divider))))))))
    (, ,)))


det(oven-2, The-1)
nsubjpass(converted-5, oven-2)
aux(converted-5, can-3)
auxpass(converted-5, be-4)
root(ROOT-0, converted-5)
prep(converted-5, to-6)
det(oven-11, a-7)
amod(oven-11, single-8)
num(oven-11, 70-9)
nn(oven-11, litre-10)
pobj(to-6, oven-11)
prep(converted-5, by-12)
advmod(removing-14, simply-13)
pcomp(by-12, removing-14)
det(divider-16, the-15)
dobj(removing-14, divider-16)


(ROOT
  (S
    (S
      (VP (VBG giving)
        (NP (CD one))
        (NP
          (NP (JJ big) (NN space))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (MD can)
                (VP (VB be)
                  (VP (VBN used)
                    (S
                      (VP (TO to)
                        (VP (VB roast)
                          (NP
                            (NP (DT a) (NNP Turkey))
                            (CC or)
                            (NP (DT a) (NN Duck)))
                          (SBAR
                            (ADVP (RB vertically))
                            (IN if)
                            (S
                              (NP (PRP you))
                              (VP (VBP wish)))))))))))))))
    (CC or)
    (S
      (ADVP (RB simply))
      (VP (TO to)
        (VP (VB bake)
          (NP (JJ enough) (NNS muffins))
          (S
            (VP (TO to)
              (VP (VB feed)
                (NP
                  (NP (DT a) (JJ small) (NN school))
                  (PP (IN of)
                    (NP (JJ hungry) (NNS kids))))))))))
    (. !)))


root(ROOT-0, giving-1)
iobj(giving-1, one-2)
amod(space-4, big-3)
dobj(giving-1, space-4)
nsubjpass(used-8, that-5)
aux(used-8, can-6)
auxpass(used-8, be-7)
rcmod(space-4, used-8)
aux(roast-10, to-9)
xcomp(used-8, roast-10)
det(Turkey-12, a-11)
dobj(roast-10, Turkey-12)
cc(Turkey-12, or-13)
det(Duck-15, a-14)
conj(Turkey-12, Duck-15)
advmod(wish-19, vertically-16)
mark(wish-19, if-17)
nsubj(wish-19, you-18)
advcl(roast-10, wish-19)
cc(giving-1, or-20)
advmod(bake-23, simply-21)
aux(bake-23, to-22)
conj(giving-1, bake-23)
amod(muffins-25, enough-24)
dobj(bake-23, muffins-25)
aux(feed-27, to-26)
xcomp(bake-23, feed-27)
det(school-30, a-28)
amod(school-30, small-29)
dobj(feed-27, school-30)
prep(school-30, of-31)
amod(kids-33, hungry-32)
pobj(of-31, kids-33)


(ROOT
  (S
    (NP
      (NP (NNP Cooking) (NNP Temperature))
      (PP (IN for)
        (NP
          (NP (NNP Chicken))
          (VP
            (ADVP
              (NP
                (NP (DT The) (NN recommendation))
                (PP (IN for)
                  (NP (JJ cooking) (JJ whole) (NN chicken))))
              (IN as))
            (VBN stated)
            (PP (IN by)
              (NP (DT the) (NNP USDA)))))))
    (VP (VBZ is)
      (ADJP
        (NP (CD 85) (NNS degrees))
        (JJ Celsius)))
    (. .)))


nn(Temperature-2, Cooking-1)
nsubj(Celsius-19, Temperature-2)
prep(Temperature-2, for-3)
pobj(for-3, Chicken-4)
det(recommendation-6, The-5)
npadvmod(as-11, recommendation-6)
prep(recommendation-6, for-7)
amod(chicken-10, cooking-8)
amod(chicken-10, whole-9)
pobj(for-7, chicken-10)
advmod(stated-12, as-11)
partmod(Chicken-4, stated-12)
prep(stated-12, by-13)
det(USDA-15, the-14)
pobj(by-13, USDA-15)
cop(Celsius-19, is-16)
num(degrees-18, 85-17)
npadvmod(Celsius-19, degrees-18)
root(ROOT-0, Celsius-19)


(ROOT
  (FRAG
    (PP (IN As)
      (PP (IN with)
        (NP (DT all) (NN government) (NNS recommendations))))
    (, ,)))


root(ROOT-0, As-1)
pcomp(As-1, with-2)
det(recommendations-5, all-3)
nn(recommendations-5, government-4)
pobj(with-2, recommendations-5)


(ROOT
  (S
    (NP (PRP it))
    (VP (VBZ is)
      (VP (VBN done)
        (S
          (VP (TO to)
            (VP (VB give)
              (NP
                (NP (DT a) (JJ wide) (NN margin))
                (PP (IN of)
                  (NP (NN error)))))))))
    (. .)))


nsubjpass(done-3, it-1)
auxpass(done-3, is-2)
root(ROOT-0, done-3)
aux(give-5, to-4)
xcomp(done-3, give-5)
det(margin-8, a-6)
amod(margin-8, wide-7)
dobj(give-5, margin-8)
prep(margin-8, of-9)
pobj(of-9, error-10)


(ROOT
  (S (-LRB- -LRB-)
    (VP (VB Singlish))
    (: :)))




(ROOT
  (S
    (NP (NNP Kia))
    (VP (VBZ Su))
    (-RRB- -RRB-) (. .)))


nsubj(Su-2, Kia-1)
root(ROOT-0, Su-2)


(ROOT
  (S
    (NP (NN Meat) (NNS proteins))
    (VP (VBP denature)
      (PP (IN at)
        (NP (CD 55-65) (NNS degrees))))
    (. .)))


nn(proteins-2, Meat-1)
nsubj(denature-3, proteins-2)
root(ROOT-0, denature-3)
prep(denature-3, at-4)
num(degrees-6, 55-65-5)
pobj(at-4, degrees-6)


(ROOT
  (S
    (VP (VB ie)
      (SBAR (IN once)
        (S
          (NP (PRP$ your) (NN meat))
          (VP (VBZ reaches)
            (NP
              (NP (CD 65) (NNS degrees))
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (VBZ is)
                    (ADVP (RB essentially))
                    (VP (VBN cooked))))))))))
    (. .)))


root(ROOT-0, ie-1)
mark(reaches-5, once-2)
poss(meat-4, your-3)
nsubj(reaches-5, meat-4)
advcl(ie-1, reaches-5)
num(degrees-7, 65-6)
dobj(reaches-5, degrees-7)
nsubjpass(cooked-11, it-8)
auxpass(cooked-11, is-9)
advmod(cooked-11, essentially-10)
rcmod(degrees-7, cooked-11)


(ROOT
  (S (CC But)
    (PP (IN with)
      (NP (NN chicken)))
    (NP (DT the) (NN concern))
    (VP (VBZ is)
      (NP (NNP Salmonella)))
    (. .)))


cc(Salmonella-7, But-1)
prep(Salmonella-7, with-2)
pobj(with-2, chicken-3)
det(concern-5, the-4)
nsubj(Salmonella-7, concern-5)
cop(Salmonella-7, is-6)
root(ROOT-0, Salmonella-7)


(ROOT
  (S
    (NP (NNP Salmonella))
    (VP (VBZ is)
      (VP (VBN killed)
        (PP (IN at)
          (NP (CD 55) (NNS degrees)))))
    (, ,)))


nsubjpass(killed-3, Salmonella-1)
auxpass(killed-3, is-2)
root(ROOT-0, killed-3)
prep(killed-3, at-4)
num(degrees-6, 55-5)
pobj(at-4, degrees-6)


(ROOT
  (S (CC but)
    (NP (PRP you))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP (VB hold)
            (NP
              (NP (DT that) (NN temperature))
              (PP (IN for)
                (NP (DT a) (NN while))))))))
    (. .)))


cc(have-3, but-1)
nsubj(have-3, you-2)
root(ROOT-0, have-3)
aux(hold-5, to-4)
xcomp(have-3, hold-5)
det(temperature-7, that-6)
dobj(hold-5, temperature-7)
prep(temperature-7, for-8)
det(while-10, a-9)
pobj(for-8, while-10)


(ROOT
  (S
    (NP (DT The) (NN consensus))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB cook)
            (NP (PRP$ your) (NN meat))
            (PP (TO to)
              (NP
                (NP
                  (NP (CD 65) (NNS degrees))
                  (PP (IN for)
                    (NP (CD 10) (NNS minutes))))
                (CC or)
                (NP
                  (NP (CD 70) (NNS degrees))
                  (PP (IN for)
                    (NP (CD 2) (NNS minutes))))))))))
    (. .)))


det(consensus-2, The-1)
nsubj(is-3, consensus-2)
root(ROOT-0, is-3)
aux(cook-5, to-4)
xcomp(is-3, cook-5)
poss(meat-7, your-6)
dobj(cook-5, meat-7)
prep(cook-5, to-8)
num(degrees-10, 65-9)
pobj(to-8, degrees-10)
prep(degrees-10, for-11)
num(minutes-13, 10-12)
pobj(for-11, minutes-13)
cc(degrees-10, or-14)
num(degrees-16, 70-15)
conj(degrees-10, degrees-16)
prep(degrees-16, for-17)
num(minutes-19, 2-18)
pobj(for-17, minutes-19)


(ROOT
  (S
    (PP (IN At)
      (NP (DT these) (NNS temperatures)))
    (NP (PRP you))
    (ADVP (RB essentially))
    (VP (VB kill)
      (NP (PDT all) (DT the) (NNS bacteria)))
    (. .)))


prep(kill-6, At-1)
det(temperatures-3, these-2)
pobj(At-1, temperatures-3)
nsubj(kill-6, you-4)
advmod(kill-6, essentially-5)
root(ROOT-0, kill-6)
predet(bacteria-9, all-7)
det(bacteria-9, the-8)
dobj(kill-6, bacteria-9)


(ROOT
  (S (CC But)
    (NP (DT the) (NN trick))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB ensure)
            (SBAR (IN that)
              (S
                (NP (DT the) (JJ whole) (NN chicken))
                (VP (VBZ is)
                  (VP (VBN cooked)
                    (PP (TO to)
                      (NP (DT that) (NN temperature)))))))))))
    (. .)))


cc(is-4, But-1)
det(trick-3, the-2)
nsubj(is-4, trick-3)
root(ROOT-0, is-4)
aux(ensure-6, to-5)
xcomp(is-4, ensure-6)
mark(cooked-12, that-7)
det(chicken-10, the-8)
amod(chicken-10, whole-9)
nsubjpass(cooked-12, chicken-10)
auxpass(cooked-12, is-11)
ccomp(ensure-6, cooked-12)
prep(cooked-12, to-13)
det(temperature-15, that-14)
pobj(to-13, temperature-15)


(ROOT
  (S
    (ADVP (RB Hence))
    (NP (DT the) (NNP USDA))
    (VP (VBZ recomendations)
      (S
        (VP (TO to)
          (VP
            (ADVP (RB totally))
            (VB annihilate)
            (NP (DT the) (NNS bacteria))
            (PP (IN by)
              (S
                (VP (VBG cooking)
                  (PP (TO to)
                    (NP
                      (NP
                        (NP (CD 74) (NNS degrees))
                        (PP (IN for)
                          (NP (NN chicken) (NNS pieces))))
                      (CC and)
                      (NP
                        (NP (CD 85) (NNS degrees))
                        (PP (IN for)
                          (NP (DT a) (JJ whole) (NN chicken)))))))))))))
    (. .)))


advmod(recomendations-4, Hence-1)
det(USDA-3, the-2)
nsubj(recomendations-4, USDA-3)
root(ROOT-0, recomendations-4)
aux(annihilate-7, to-5)
advmod(annihilate-7, totally-6)
xcomp(recomendations-4, annihilate-7)
det(bacteria-9, the-8)
dobj(annihilate-7, bacteria-9)
prep(annihilate-7, by-10)
pcomp(by-10, cooking-11)
prep(cooking-11, to-12)
num(degrees-14, 74-13)
pobj(to-12, degrees-14)
prep(degrees-14, for-15)
nn(pieces-17, chicken-16)
pobj(for-15, pieces-17)
cc(degrees-14, and-18)
num(degrees-20, 85-19)
conj(degrees-14, degrees-20)
prep(degrees-20, for-21)
det(chicken-24, a-22)
amod(chicken-24, whole-23)
pobj(for-21, chicken-24)


(ROOT
  (PP (RB Aside) (IN from)
    (S
      (VP (VBG making)
        (ADJP (JJ sure))
        (SBAR (IN that)
          (S
            (NP (DT the) (NNP Salmonella))
            (VP (VBZ is)
              (VP (VBN killed)))
            (, ,)))))))


advmod(from-2, Aside-1)
root(ROOT-0, from-2)
pcomp(from-2, making-3)
acomp(making-3, sure-4)
mark(killed-9, that-5)
det(Salmonella-7, the-6)
nsubjpass(killed-9, Salmonella-7)
auxpass(killed-9, is-8)
ccomp(making-3, killed-9)


(ROOT
  (S
    (NP (DT the) (JJ right) (NN cooking) (NN temperature))
    (VP (VBZ is)
      (ADVP (RB also))
      (VP (VBN required)
        (PP (IN for)
          (NP (NN tender) (NN meat)))))
    (. .)))


det(temperature-4, the-1)
amod(temperature-4, right-2)
nn(temperature-4, cooking-3)
nsubjpass(required-7, temperature-4)
auxpass(required-7, is-5)
advmod(required-7, also-6)
root(ROOT-0, required-7)
prep(required-7, for-8)
nn(meat-10, tender-9)
pobj(for-8, meat-10)


(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (VP (VBN recommended)
        (S
          (VP (TO to)
            (VP (VB cook)
              (NP (DT the) (NNS thighs))
              (PP (TO to)
                (NP (CD 85) (NNS degrees)))
              (SBAR (IN because)
                (S
                  (NP (PRP you))
                  (VP (VBD needed)
                    (NP (DT a) (JJR higher) (NN temperature))
                    (S
                      (VP (TO to)
                        (VP (VB break)
                          (PRT (RP down))
                          (NP
                            (NP (DT the) (JJ connective) (NN tissue))
                            (PP (IN in)
                              (NP (DT the) (NN thigh) (NN meat)))))))))))))))
    (. .)))


nsubjpass(recommended-3, It-1)
auxpass(recommended-3, is-2)
root(ROOT-0, recommended-3)
aux(cook-5, to-4)
xcomp(recommended-3, cook-5)
det(thighs-7, the-6)
dobj(cook-5, thighs-7)
prep(cook-5, to-8)
num(degrees-10, 85-9)
pobj(to-8, degrees-10)
mark(needed-13, because-11)
nsubj(needed-13, you-12)
advcl(cook-5, needed-13)
det(temperature-16, a-14)
amod(temperature-16, higher-15)
dobj(needed-13, temperature-16)
aux(break-18, to-17)
xcomp(needed-13, break-18)
prt(break-18, down-19)
det(tissue-22, the-20)
amod(tissue-22, connective-21)
dobj(break-18, tissue-22)
prep(tissue-22, in-23)
det(meat-26, the-24)
nn(meat-26, thigh-25)
pobj(in-23, meat-26)


(ROOT
  (S (CC But)
    (NP (DT that))
    (VP (VBZ is)
      (ADJP (RB only) (JJ applicable))
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP are)
            (VP (VBG using)
              (NP (DT a) (JJ real) (NN kampung)
                (CC or)
                (JJ free) (NN range) (NN chicken)))))))
    (. .)))


cc(applicable-5, But-1)
nsubj(applicable-5, that-2)
cop(applicable-5, is-3)
advmod(applicable-5, only-4)
root(ROOT-0, applicable-5)
mark(using-9, if-6)
nsubj(using-9, you-7)
aux(using-9, are-8)
advcl(applicable-5, using-9)
det(kampung-12, a-10)
amod(kampung-12, real-11)
dobj(using-9, kampung-12)
cc(kampung-12, or-13)
amod(chicken-16, free-14)
nn(chicken-16, range-15)
conj(kampung-12, chicken-16)


(ROOT
  (SBAR (IN If)
    (S
      (NP (PRP you))
      (VP (VBP are)
        (VP (VBG using)
          (NP (DT the) (JJ normal) (NN battery) (NNS hens))))
      (, ,))))


mark(using-4, If-1)
nsubj(using-4, you-2)
aux(using-4, are-3)
root(ROOT-0, using-4)
det(hens-8, the-5)
amod(hens-8, normal-6)
nn(hens-8, battery-7)
dobj(using-4, hens-8)


(ROOT
  (S
    (NP (DT the) (NN thigh) (NN meat))
    (VP (VBZ does) (RB not)
      (VP (VB have)
        (NP
          (ADJP (RB enough) (JJ connective))
          (NN tissue)
          (S
            (VP (TO to)
              (VP (VB be)
                (ADJP (JJ tough))))))))
    (, ,)))


det(meat-3, the-1)
nn(meat-3, thigh-2)
nsubj(have-6, meat-3)
aux(have-6, does-4)
neg(have-6, not-5)
root(ROOT-0, have-6)
advmod(connective-8, enough-7)
amod(tissue-9, connective-8)
dobj(have-6, tissue-9)
aux(tough-12, to-10)
cop(tough-12, be-11)
infmod(tissue-9, tough-12)


(ROOT
  (S (IN so)
    (NP (PRP you))
    (VP (VBP do) (RB n't)
      (ADVP (RB really))
      (VP (VB need)
        (S
          (VP (TO to)
            (VP (VB cook)
              (NP (PRP it))
              (PP (TO to)
                (NP (CD 85) (NNS degrees))))))))
    (. .)))


dep(need-6, so-1)
nsubj(need-6, you-2)
aux(need-6, do-3)
neg(need-6, n't-4)
advmod(need-6, really-5)
root(ROOT-0, need-6)
aux(cook-8, to-7)
xcomp(need-6, cook-8)
dobj(cook-8, it-9)
prep(cook-8, to-10)
num(degrees-12, 85-11)
pobj(to-10, degrees-12)


(ROOT
  (FRAG
    (PP (IN For)
      (NP
        (NP (DT the) (NN purpose))
        (PP (IN of)
          (NP (PRP$ my) (NN roast) (NN chicken)))))
    (, ,)))


root(ROOT-0, For-1)
det(purpose-3, the-2)
pobj(For-1, purpose-3)
prep(purpose-3, of-4)
poss(chicken-7, my-5)
nn(chicken-7, roast-6)
pobj(of-4, chicken-7)


(ROOT
  (S
    (NP (PRP I))
    (VP (VBP try)
      (S
        (VP (TO to)
          (VP (VB get)
            (NP
              (NP (DT an) (JJ internal) (NN temperature))
              (PP (IN of)
                (NP (CD 70) (NNS degrees))))
            (SBAR (IN as)
              (S
                (NP (PRP it))
                (VP (VBZ ensures)
                  (SBAR
                    (SBAR (IN that)
                      (S
                        (NP (DT the) (NN meat))
                        (VP (VBZ is)
                          (ADJP (JJ safe)
                            (S
                              (VP (TO to)
                                (VP (VB eat))))))))
                    (CC and)
                    (SBAR
                      (ADVP (RB as) (RB long))
                      (IN as)
                      (S
                        (NP (PRP you))
                        (VP (VBP do) (RB n't)
                          (VP (VB hold)
                            (S
                              (NP (PRP it))
                              (ADJP (RB too) (JJ long)
                                (PP (IN beyond)
                                  (NP (DT that) (NN temperature)))))))))))))))))
    (, ,)))


nsubj(try-2, I-1)
root(ROOT-0, try-2)
aux(get-4, to-3)
xcomp(try-2, get-4)
det(temperature-7, an-5)
amod(temperature-7, internal-6)
dobj(get-4, temperature-7)
prep(temperature-7, of-8)
num(degrees-10, 70-9)
pobj(of-8, degrees-10)
mark(ensures-13, as-11)
nsubj(ensures-13, it-12)
advcl(get-4, ensures-13)
mark(safe-18, that-14)
det(meat-16, the-15)
nsubj(safe-18, meat-16)
cop(safe-18, is-17)
ccomp(ensures-13, safe-18)
aux(eat-20, to-19)
xcomp(safe-18, eat-20)
cc(safe-18, and-21)
advmod(long-23, as-22)
advmod(hold-28, long-23)
mark(hold-28, as-24)
nsubj(hold-28, you-25)
aux(hold-28, do-26)
neg(hold-28, n't-27)
conj(safe-18, hold-28)
nsubj(long-31, it-29)
advmod(long-31, too-30)
xcomp(hold-28, long-31)
prep(long-31, beyond-32)
det(temperature-34, that-33)
pobj(beyond-32, temperature-34)


(ROOT
  (S
    (NP (DT the) (NN chicken))
    (VP (MD will)
      (VP (VB be)
        (ADJP (JJ nice))))
    (, ,)))


det(chicken-2, the-1)
nsubj(nice-5, chicken-2)
aux(nice-5, will-3)
cop(nice-5, be-4)
root(ROOT-0, nice-5)


(ROOT
  (FRAG
    (ADJP (JJ juicy)
      (CC and)
      (JJ safe))
    (S
      (VP (TO to)
        (VP (VB eat))))
    (. .)))


root(ROOT-0, juicy-1)
cc(juicy-1, and-2)
conj(juicy-1, safe-3)
aux(eat-5, to-4)
dep(juicy-1, eat-5)


(ROOT
  (S
    (NP (PRP I))
    (VP (VBD started)
      (S
        (VP (VBG researching)
          (PP (IN for)
            (NP (DT the) (JJS best) (NN way)))
          (S
            (VP (TO to)
              (VP (VB roast)
                (NP (DT a) (NN chicken))
                (PP (IN by)
                  (S
                    (VP (VBG watching)
                      (NP
                        (NP (NNP Heston) (NNP Blumenthal) (POS 's))
                        (JJ perfect) (NN roast) (NN chicken) (NN recipe)))))))))))
    (. .)))


nsubj(started-2, I-1)
root(ROOT-0, started-2)
xcomp(started-2, researching-3)
prep(researching-3, for-4)
det(way-7, the-5)
amod(way-7, best-6)
pobj(for-4, way-7)
aux(roast-9, to-8)
xcomp(researching-3, roast-9)
det(chicken-11, a-10)
dobj(roast-9, chicken-11)
prep(roast-9, by-12)
pcomp(by-12, watching-13)
nn(Blumenthal-15, Heston-14)
poss(recipe-20, Blumenthal-15)
possessive(Blumenthal-15, 's-16)
amod(recipe-20, perfect-17)
nn(recipe-20, roast-18)
nn(recipe-20, chicken-19)
dobj(watching-13, recipe-20)


(ROOT
  (S
    (NP (PRP He))
    (VP (VBD defined)
      (NP (DT a) (JJ perfect) (NN roast) (NN chicken))
      (PP (IN as)
        (S
          (VP (VBG having)
            (NP (JJ crispy) (NN skin))
            (PP (IN with)
              (NP
                (ADJP (JJ juicy)
                  (CC and)
                  (JJ flavourful))
                (NN breast) (NN meat)))))))
    (. .)))


nsubj(defined-2, He-1)
root(ROOT-0, defined-2)
det(chicken-6, a-3)
amod(chicken-6, perfect-4)
nn(chicken-6, roast-5)
dobj(defined-2, chicken-6)
prep(defined-2, as-7)
pcomp(as-7, having-8)
amod(skin-10, crispy-9)
dobj(having-8, skin-10)
prep(having-8, with-11)
amod(meat-16, juicy-12)
cc(juicy-12, and-13)
conj(juicy-12, flavourful-14)
nn(meat-16, breast-15)
pobj(with-11, meat-16)


(ROOT
  (PP (IN In)
    (NP
      (NP (NN order))
      (PRN
        (PP (TO to)
          (VP (VB do)
            (NP (DT this))))
        (, ,)))))


root(ROOT-0, In-1)
pobj(In-1, order-2)
prep(order-2, to-3)
dep(to-3, do-4)
dobj(do-4, this-5)


(ROOT
  (S
    (NP (RB first) (PRP he))
    (VP (VBD got)
      (S
        (NP (PRP himself))
        (NP
          (NP (DT a) (NNP Poularde) (IN de) (NNP Bresse))
          (PRN (-LRB- -LRB-)
            (NP
              (NP (JJ expensive) (JJ French) (NN chicken))
              (VP (VBN raised)
                (PP (IN in)
                  (NP (CD five) (NN star) (NN resort)))))
            (-RRB- -RRB-)))))
    (, ,)))


advmod(he-2, first-1)
nsubj(got-3, he-2)
root(ROOT-0, got-3)
nsubj(Bresse-8, himself-4)
det(Bresse-8, a-5)
nn(Bresse-8, Poularde-6)
amod(Bresse-8, de-7)
xcomp(got-3, Bresse-8)
amod(chicken-12, expensive-10)
amod(chicken-12, French-11)
dep(Bresse-8, chicken-12)
partmod(chicken-12, raised-13)
prep(raised-13, in-14)
num(resort-17, five-15)
nn(resort-17, star-16)
pobj(in-14, resort-17)


(ROOT
  (SBAR
    (WHNP (WDT which))
    (S
      (NP (PRP he))
      (VP (VBZ brines)
        (PP (IN in)
          (NP (DT a)
            (ADJP (CD 8) (NN %))))))))


dobj(brines-3, which-1)
nsubj(brines-3, he-2)
root(ROOT-0, brines-3)
prep(brines-3, in-4)
det(%-7, a-5)
number(%-7, 8-6)
pobj(in-4, %-7)


(ROOT
  (NP
    (NP (NN salt))
    (NP (NN solution))
    (. .)))


root(ROOT-0, salt-1)
dep(salt-1, solution-2)


(ROOT
  (S
    (ADVP (RB Next))
    (NP (PRP he))
    (VP
      (VP (VBZ parboils)
        (NP
          (NP (DT the) (NN chicken))
          (PP (IN for)
            (NP (CD 30) (NNS seconds))))
        (S
          (VP (TO to)
            (VP (VB kill)
              (NP (DT the) (NNS bacteria))))))
      (CC and)
      (VP
        (ADVP (RB then))
        (VBZ dries)
        (NP (DT the) (NN skin))
        (PP (IN by)
          (S
            (VP (VBG placing)
              (PP (IN in)
                (NP (DT the) (NN fridge))))))))
    (. .)))


advmod(parboils-3, Next-1)
nsubj(parboils-3, he-2)
root(ROOT-0, parboils-3)
det(chicken-5, the-4)
dobj(parboils-3, chicken-5)
prep(chicken-5, for-6)
num(seconds-8, 30-7)
pobj(for-6, seconds-8)
aux(kill-10, to-9)
xcomp(parboils-3, kill-10)
det(bacteria-12, the-11)
dobj(kill-10, bacteria-12)
cc(parboils-3, and-13)
advmod(dries-15, then-14)
conj(parboils-3, dries-15)
det(skin-17, the-16)
dobj(dries-15, skin-17)
prep(dries-15, by-18)
pcomp(by-18, placing-19)
prep(placing-19, in-20)
det(fridge-22, the-21)
pobj(in-20, fridge-22)


(ROOT
  (S
    (NP
      (NP (DT The) (NN drying))
      (PP (IN of)
        (NP (DT the) (NN skin))))
    (VP (MD will)
      (VP (VB ensure)
        (NP (DT a) (JJ crispy) (NN skin))))
    (. .)))


det(drying-2, The-1)
nsubj(ensure-7, drying-2)
prep(drying-2, of-3)
det(skin-5, the-4)
pobj(of-3, skin-5)
aux(ensure-7, will-6)
root(ROOT-0, ensure-7)
det(skin-10, a-8)
amod(skin-10, crispy-9)
dobj(ensure-7, skin-10)


(ROOT
  (S
    (NP (PRP He))
    (ADVP (RB then))
    (VP (VBD cooks)
      (NP (DT the) (NN chicken))
      (PP (IN for)
        (NP
          (QP (CD 4)
            (CC and)
            (DT a) (NN half))
          (NNS hours)))
      (PP (IN at)
        (NP
          (NP (CD 60) (NNS degrees))
          (NP (NNP C)))))
    (, ,)))


nsubj(cooks-3, He-1)
advmod(cooks-3, then-2)
root(ROOT-0, cooks-3)
det(chicken-5, the-4)
dobj(cooks-3, chicken-5)
prep(cooks-3, for-6)
num(hours-11, 4-7)
cc(4-7, and-8)
det(half-10, a-9)
conj(4-7, half-10)
pobj(for-6, hours-11)
prep(cooks-3, at-12)
num(degrees-14, 60-13)
pobj(at-12, degrees-14)
dep(degrees-14, C-15)


(ROOT
  (S
    (NP (RB then))
    (VP (VBZ browns)
      (NP (DT the) (NN skin))
      (PP (IN on)
        (NP (DT a) (NN skillet)))
      (SBAR (IN before)
        (S
          (VP (VBD injected)
            (NP (DT the) (NN breast) (NN meat))
            (PP (IN with)
              (NP
                (NP (NN butter))
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (VBZ has)
                      (VP (VBN been)
                        (VP (VBN flavored)
                          (PP (IN by)
                            (S
                              (VP (VBG frying)
                                (NP (PRP it))
                                (PP (IN with)
                                  (NP (DT the) (NN cut) (NN wing) (NNS tips)))))))))))))))))
    (. .)))


nsubj(browns-2, then-1)
root(ROOT-0, browns-2)
det(skin-4, the-3)
dobj(browns-2, skin-4)
prep(browns-2, on-5)
det(skillet-7, a-6)
pobj(on-5, skillet-7)
mark(injected-9, before-8)
advcl(browns-2, injected-9)
det(meat-12, the-10)
nn(meat-12, breast-11)
dobj(injected-9, meat-12)
prep(injected-9, with-13)
pobj(with-13, butter-14)
nsubjpass(flavored-18, which-15)
aux(flavored-18, has-16)
auxpass(flavored-18, been-17)
rcmod(butter-14, flavored-18)
prep(flavored-18, by-19)
pcomp(by-19, frying-20)
dobj(frying-20, it-21)
prep(frying-20, with-22)
det(tips-26, the-23)
nn(tips-26, cut-24)
nn(tips-26, wing-25)
pobj(with-22, tips-26)


(ROOT
  (FRAG
    (ADVP (RB Now))
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP are)
          (VP (VBG trying)
            (S
              (VP (TO to)
                (VP (VB impress)
                  (NP (PRP$ your) (NN wife))
                  (PP (IN on)
                    (NP (PRP$ your) (JJ first) (NN wedding) (NN anniversary))))))))
        (, ,)))))


root(ROOT-0, Now-1)
mark(trying-5, if-2)
nsubj(trying-5, you-3)
aux(trying-5, are-4)
dep(Now-1, trying-5)
aux(impress-7, to-6)
xcomp(trying-5, impress-7)
poss(wife-9, your-8)
dobj(impress-7, wife-9)
prep(impress-7, on-10)
poss(anniversary-14, your-11)
amod(anniversary-14, first-12)
nn(anniversary-14, wedding-13)
pobj(on-10, anniversary-14)


(ROOT
  (S
    (NP (DT that))
    (VP (VBZ 's)
      (ADJP (JJ fine)))
    (. .)))


nsubj(fine-3, that-1)
cop(fine-3, 's-2)
root(ROOT-0, fine-3)


(ROOT
  (FRAG
    (PP (IN Otherwise))
    (, ,)))


root(ROOT-0, Otherwise-1)


(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (PP (IN for)
        (NP (JJ practical) (NN home) (NN cooking))))
    (, ,)))


nsubj(think-2, I-1)
root(ROOT-0, think-2)
prep(think-2, for-3)
amod(cooking-6, practical-4)
nn(cooking-6, home-5)
pobj(for-3, cooking-6)


(ROOT
  (S
    (S
      (NP (DT this))
      (VP (VBZ is)
        (ADJP (JJ impractical))))
    (CC and)
    (S
      (NP
        (NP (JJS most))
        (PP (IN of)
          (NP (PRP us))))
      (VP (MD will)
        (VP (VB stumble)
          (PP (IN at)
            (NP (DT the) (NNP Poularde) (NNP de) (NNP Bresse) (NN stage))))))
    (. .)))


nsubj(impractical-3, this-1)
cop(impractical-3, is-2)
root(ROOT-0, impractical-3)
cc(impractical-3, and-4)
nsubj(stumble-9, most-5)
prep(most-5, of-6)
pobj(of-6, us-7)
aux(stumble-9, will-8)
conj(impractical-3, stumble-9)
prep(stumble-9, at-10)
det(stage-15, the-11)
nn(stage-15, Poularde-12)
nn(stage-15, de-13)
nn(stage-15, Bresse-14)
pobj(at-10, stage-15)


(ROOT
  (S (IN So)
    (NP (PRP I))
    (VP (VBD wanted)
      (S
        (VP (TO to)
          (VP (VB do)
            (NP
              (NP (NN something))
              (UCP
                (ADJP (JJ practical))
                (CC but)
                (ADVP (RB still))))
            (S
              (VP (VBG employing)
                (NP
                  (NP (DT some))
                  (PP (IN of)
                    (NP
                      (NP (NNP Heston) (POS 's))
                      (NNS techniques)
                      (S
                        (VP (TO to)
                          (VP (VB achieve)
                            (NP (DT a) (NNP Crispy) (NNP Roast) (NNP Chicken))
                            (SBAR (IN like)
                              (S
                                (NP (PRP they))
                                (VP (VBP serve)
                                  (PP (IN in)
                                    (NP (NNP Cantonese) (NNS restaurants))))))))))))))))))
    (. .)))


dep(wanted-3, So-1)
nsubj(wanted-3, I-2)
root(ROOT-0, wanted-3)
aux(do-5, to-4)
xcomp(wanted-3, do-5)
dobj(do-5, something-6)
amod(something-6, practical-7)
cc(practical-7, but-8)
advmod(practical-7, still-9)
xcomp(do-5, employing-10)
dobj(employing-10, some-11)
prep(some-11, of-12)
poss(techniques-15, Heston-13)
possessive(Heston-13, 's-14)
pobj(of-12, techniques-15)
aux(achieve-17, to-16)
infmod(techniques-15, achieve-17)
det(Chicken-21, a-18)
nn(Chicken-21, Crispy-19)
nn(Chicken-21, Roast-20)
dobj(achieve-17, Chicken-21)
mark(serve-24, like-22)
nsubj(serve-24, they-23)
advcl(achieve-17, serve-24)
prep(serve-24, in-25)
nn(restaurants-27, Cantonese-26)
pobj(in-25, restaurants-27)


(ROOT
  (S
    (S
      (NP
        (NP (DT A) (NN lot))
        (PP (IN of)
          (NP (NNS people))))
      (NP (PRP I))
      (VP (VBD spoke)
        (S
          (VP (TO to)
            (VP (VB experience)
              (NP (DT a) (JJ common) (NN problem))
              (PP (IN with)
                (NP (NN roast) (NN chicken))))))))
    (CC and)
    (S
      (NP (DT that))
      (VP (VBZ is)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT the) (NN breast))
              (PP (IN of)
                (NP (DT the) (NN chicken))))
            (VP (VBZ gets)
              (ADJP (RB too) (JJ dry))
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP it))
                  (VP (VBZ is)
                    (VP (VBN cooked))))))))))
    (. .)))


det(lot-2, A-1)
nsubj(spoke-6, lot-2)
prep(lot-2, of-3)
pobj(of-3, people-4)
nsubj(spoke-6, I-5)
root(ROOT-0, spoke-6)
aux(experience-8, to-7)
xcomp(spoke-6, experience-8)
det(problem-11, a-9)
amod(problem-11, common-10)
dobj(experience-8, problem-11)
prep(experience-8, with-12)
nn(chicken-14, roast-13)
pobj(with-12, chicken-14)
cc(spoke-6, and-15)
nsubj(is-17, that-16)
conj(spoke-6, is-17)
mark(dry-26, that-18)
det(breast-20, the-19)
nsubj(dry-26, breast-20)
prep(breast-20, of-21)
det(chicken-23, the-22)
pobj(of-21, chicken-23)
dep(dry-26, gets-24)
advmod(dry-26, too-25)
ccomp(is-17, dry-26)
advmod(cooked-30, when-27)
nsubjpass(cooked-30, it-28)
auxpass(cooked-30, is-29)
advcl(dry-26, cooked-30)


(ROOT
  (S
    (NP (DT This))
    (VP (VBZ happens)
      (SBAR (IN because)
        (S
          (NP
            (NP (DT the) (NNS juices))
            (PP (IN from)
              (PP (IN within)
                (NP
                  (NP (DT the) (NN muscle) (NNS fibers))
                  (PP (IN of)
                    (NP (DT the) (NN breast) (NN meat)))))))
          (VP (VBZ starts)
            (S
              (VP (TO to)
                (VP (VB get)
                  (VP (VBN squeezed)
                    (PRT (RP out))
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (NP (PRP it))
                        (VP (VBZ reaches)
                          (NP (CD 68) (NNS degrees) (NNS Celsius)))))))))))))
    (. .)))


nsubj(happens-2, This-1)
root(ROOT-0, happens-2)
mark(starts-15, because-3)
det(juices-5, the-4)
nsubj(starts-15, juices-5)
prep(juices-5, from-6)
pcomp(from-6, within-7)
det(fibers-10, the-8)
nn(fibers-10, muscle-9)
pobj(within-7, fibers-10)
prep(fibers-10, of-11)
det(meat-14, the-12)
nn(meat-14, breast-13)
pobj(of-11, meat-14)
advcl(happens-2, starts-15)
aux(squeezed-18, to-16)
auxpass(squeezed-18, get-17)
xcomp(starts-15, squeezed-18)
prt(squeezed-18, out-19)
advmod(reaches-22, when-20)
nsubj(reaches-22, it-21)
advcl(squeezed-18, reaches-22)
num(Celsius-25, 68-23)
nn(Celsius-25, degrees-24)
dobj(reaches-22, Celsius-25)


(ROOT
  (S
    (NP
      (NP (DT The) (JJ typical) (NN way))
      (PP (IN of)
        (S
          (VP (VBG roasting)
            (NP (DT a) (NN chicken))))))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB place)
            (NP (DT the) (NN bird))
            (PP (IN on)
              (NP
                (NP (DT the) (JJ roasting) (NN tray)
                  (CC and)
                  (NN roast))
                (PP (IN at)
                  (NP
                    (NP (CD 200) (NNS degrees))
                    (PP (IN for)
                      (NP (CD 40)))))))))))
    (: -)))


det(way-3, The-1)
amod(way-3, typical-2)
nsubj(is-8, way-3)
prep(way-3, of-4)
pcomp(of-4, roasting-5)
det(chicken-7, a-6)
dobj(roasting-5, chicken-7)
root(ROOT-0, is-8)
aux(place-10, to-9)
xcomp(is-8, place-10)
det(bird-12, the-11)
dobj(place-10, bird-12)
prep(place-10, on-13)
det(tray-16, the-14)
amod(tray-16, roasting-15)
pobj(on-13, tray-16)
cc(tray-16, and-17)
conj(tray-16, roast-18)
prep(tray-16, at-19)
num(degrees-21, 200-20)
pobj(at-19, degrees-21)
prep(degrees-21, for-22)
pobj(for-22, 40-23)


(ROOT
  (NP (CD 60) (NNS minutes) (. .)))


num(minutes-2, 60-1)
root(ROOT-0, minutes-2)


(ROOT
  (S
    (NP
      (NP (DT The) (NN problem))
      (PP (IN with)
        (NP (DT this) (NN method))))
    (VP (VBZ is)
      (NP
        (NP (DT that))
        (PP (IN at)
          (NP (DT the) (NN beginning)))))
    (, ,)))


det(problem-2, The-1)
nsubj(that-7, problem-2)
prep(problem-2, with-3)
det(method-5, this-4)
pobj(with-3, method-5)
cop(that-7, is-6)
root(ROOT-0, that-7)
prep(that-7, at-8)
det(beginning-10, the-9)
pobj(at-8, beginning-10)


(ROOT
  (S
    (NP
      (NP (DT the) (NN temperature))
      (ADVP (IN outside)
        (NP (DT the) (NN bird))))
    (VP (VBZ is)
      (NP (CD 200) (NNS degrees)))
    (, ,)))


det(temperature-2, the-1)
nsubj(degrees-8, temperature-2)
advmod(temperature-2, outside-3)
det(bird-5, the-4)
pobj(outside-3, bird-5)
cop(degrees-8, is-6)
num(degrees-8, 200-7)
root(ROOT-0, degrees-8)


(ROOT
  (FRAG
    (SBAR (IN while)
      (S
        (NP
          (NP (DT the) (NN temperature))
          (PP (IN in)
            (NP (DT the) (NN cavity))))
        (VP (VBZ is)
          (NP (CD 25) (NNS degrees)))))
    (. .)))


mark(degrees-9, while-1)
det(temperature-3, the-2)
nsubj(degrees-9, temperature-3)
prep(temperature-3, in-4)
det(cavity-6, the-5)
pobj(in-4, cavity-6)
cop(degrees-9, is-7)
num(degrees-9, 25-8)
root(ROOT-0, degrees-9)


(ROOT
  (S (IN So)
    (NP (DT the) (NN heat))
    (VP (VBZ has)
      (S
        (VP (TO to)
          (VP (VB penetrate)
            (ADVP (RB slowly))
            (PP (IN through)
              (NP (DT the) (NN chicken)))))))
    (. .)))


dep(has-4, So-1)
det(heat-3, the-2)
nsubj(has-4, heat-3)
root(ROOT-0, has-4)
aux(penetrate-6, to-5)
xcomp(has-4, penetrate-6)
advmod(penetrate-6, slowly-7)
prep(penetrate-6, through-8)
det(chicken-10, the-9)
pobj(through-8, chicken-10)


(ROOT
  (PRN
    (S
      (PP (IN By)
        (NP (DT the) (NN time)))
      (NP
        (NP (DT the) (NN inside))
        (PP (IN of)
          (NP (DT the) (NN chicken))))
      (VP (VBZ reaches)
        (NP (CD 68) (NNS degrees))))
    (, ,)))


prep(reaches-9, By-1)
det(time-3, the-2)
pobj(By-1, time-3)
det(inside-5, the-4)
nsubj(reaches-9, inside-5)
prep(inside-5, of-6)
det(chicken-8, the-7)
pobj(of-6, chicken-8)
root(ROOT-0, reaches-9)
num(degrees-11, 68-10)
dobj(reaches-9, degrees-11)


(ROOT
  (S
    (S
      (NP (DT the) (NN outside))
      (VP (VBZ has)
        (VP (VBN gone)
          (NP (NN way))
          (PP (IN beyond)
            (NP (DT that) (NN temperature))))))
    (CC and)
    (RB so)
    (S
      (NP (DT the) (NN breast) (NN meat))
      (VP (VBZ is)
        (ADJP (JJ dry)
          (CC and)
          (JJ unexciting))))
    (. .)))


det(outside-2, the-1)
nsubj(gone-4, outside-2)
aux(gone-4, has-3)
root(ROOT-0, gone-4)
dobj(gone-4, way-5)
prep(gone-4, beyond-6)
det(temperature-8, that-7)
pobj(beyond-6, temperature-8)
cc(gone-4, and-9)
advmod(gone-4, so-10)
det(meat-13, the-11)
nn(meat-13, breast-12)
nsubj(dry-15, meat-13)
cop(dry-15, is-14)
ccomp(gone-4, dry-15)
cc(dry-15, and-16)
conj(dry-15, unexciting-17)


(ROOT
  (S (IN So)
    (NP (DT the) (NN principle))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB try)
            (S
              (VP (TO to)
                (VP
                  (VP (VB cook)
                    (NP (DT the) (NN chicken))
                    (PP (IN at)
                      (NP (DT a) (JJR gentler) (NN temperature))))
                  (CC and)
                  (VP (VB minimize)
                    (NP
                      (NP
                        (NP (DT the) (NN temperature) (NN gradient))
                        (PP (IN between)
                          (NP (DT the) (NN outside))))
                      (CC and)
                      (NP
                        (NP (DT the) (NN inside))
                        (PP (IN of)
                          (NP (DT the) (NN chicken)))))))))))))
    (. .)))


dep(is-4, So-1)
det(principle-3, the-2)
nsubj(is-4, principle-3)
root(ROOT-0, is-4)
aux(try-6, to-5)
xcomp(is-4, try-6)
aux(cook-8, to-7)
xcomp(try-6, cook-8)
det(chicken-10, the-9)
dobj(cook-8, chicken-10)
prep(cook-8, at-11)
det(temperature-14, a-12)
amod(temperature-14, gentler-13)
pobj(at-11, temperature-14)
cc(cook-8, and-15)
conj(cook-8, minimize-16)
det(gradient-19, the-17)
nn(gradient-19, temperature-18)
dobj(minimize-16, gradient-19)
prep(gradient-19, between-20)
det(outside-22, the-21)
pobj(between-20, outside-22)
cc(gradient-19, and-23)
det(inside-25, the-24)
conj(gradient-19, inside-25)
prep(inside-25, of-26)
det(chicken-28, the-27)
pobj(of-26, chicken-28)


(ROOT
  (S
    (NP (PRP You))
    (VP (MD can)
      (PP (IN of)
        (NP (NN course)))
      (VP (VB achieve)
        (NP (DT this))
        (ADVP (RB simply))
        (PP (IN by)
          (S
            (VP
              (VP (VBG cutting)
                (NP
                  (NP (DT the) (NN chicken))
                  (PP (IN in)
                    (NP (NN half)))))
              (CC and)
              (VP (VBG roasting)
                (NP
                  (NP (PRP it))
                  (NP (DT that) (NN way)))))))))
    (, ,)))


nsubj(achieve-5, You-1)
aux(achieve-5, can-2)
prep(achieve-5, of-3)
pobj(of-3, course-4)
root(ROOT-0, achieve-5)
dobj(achieve-5, this-6)
advmod(achieve-5, simply-7)
prep(achieve-5, by-8)
pcomp(by-8, cutting-9)
det(chicken-11, the-10)
dobj(cutting-9, chicken-11)
prep(chicken-11, in-12)
pobj(in-12, half-13)
cc(cutting-9, and-14)
conj(cutting-9, roasting-15)
dobj(roasting-15, it-16)
det(way-18, that-17)
dep(it-16, way-18)


(ROOT
  (S (CC but)
    (NP (DT a)
      (ADJP (JJ whole) (JJ roasted))
      (NN chicken))
    (VP (VBZ is)
      (ADJP (RBR more) (JJ sexy))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP you))
          (VP (VBP present)
            (NP (PRP it))
            (PP (IN on)
              (NP (DT the) (NN table)))))))
    (. .)))


cc(sexy-8, but-1)
det(chicken-5, a-2)
amod(roasted-4, whole-3)
amod(chicken-5, roasted-4)
nsubj(sexy-8, chicken-5)
cop(sexy-8, is-6)
advmod(sexy-8, more-7)
root(ROOT-0, sexy-8)
advmod(present-11, when-9)
nsubj(present-11, you-10)
advcl(sexy-8, present-11)
dobj(present-11, it-12)
prep(present-11, on-13)
det(table-15, the-14)
pobj(on-13, table-15)


(ROOT
  (NP (NNP The) (NNP Chiffon) (NNP Tin) (NNP Gadget)))


nn(Gadget-4, The-1)
nn(Gadget-4, Chiffon-2)
nn(Gadget-4, Tin-3)
root(ROOT-0, Gadget-4)


(ROOT
  (S
    (NP (PRP I))
    (VP (VBD had)
      (ADVP (RB initially))
      (VP (VBN wanted)
        (S
          (VP (TO to)
            (VP (VB try)
              (SBAR
                (S
                  (NP (DT the) (NN beer))
                  (VP (MD can)
                    (VP (VB chicken)
                      (NP (JJ cooking) (NN technique))
                      (SBAR (IN because)
                        (S
                          (NP (PRP I))
                          (VP (VBD thought)
                            (SBAR
                              (S
                                (NP (PRP it))
                                (VP (VBD was)
                                  (NP (DT a) (JJ great) (NN concept)
                                    (S
                                      (VP (TO to)
                                        (VP (VB have)
                                          (NP
                                            (NP (DT the) (NN cavity))
                                            (PP (IN of)
                                              (NP
                                                (NP (DT the) (NN chicken))
                                                (VP (VBN cooked)
                                                  (PP (IN with)
                                                    (NP (DT the) (JJ boiling) (NN beer))))))))))))))))))))))))))
    (. .)))


nsubj(wanted-4, I-1)
aux(wanted-4, had-2)
advmod(wanted-4, initially-3)
root(ROOT-0, wanted-4)
aux(try-6, to-5)
xcomp(wanted-4, try-6)
det(beer-8, the-7)
nsubj(chicken-10, beer-8)
aux(chicken-10, can-9)
ccomp(try-6, chicken-10)
amod(technique-12, cooking-11)
dobj(chicken-10, technique-12)
mark(thought-15, because-13)
nsubj(thought-15, I-14)
advcl(chicken-10, thought-15)
nsubj(concept-20, it-16)
cop(concept-20, was-17)
det(concept-20, a-18)
amod(concept-20, great-19)
ccomp(thought-15, concept-20)
aux(have-22, to-21)
infmod(concept-20, have-22)
det(cavity-24, the-23)
dobj(have-22, cavity-24)
prep(cavity-24, of-25)
det(chicken-27, the-26)
pobj(of-25, chicken-27)
partmod(chicken-27, cooked-28)
prep(cooked-28, with-29)
det(beer-32, the-30)
amod(beer-32, boiling-31)
pobj(with-29, beer-32)


(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBP am) (RB not)
      (NP
        (NP
          (NP (DT a) (NN beer))
          (NP (NN drinker)))
        (, ,)))))


cc(beer-6, But-1)
nsubj(beer-6, I-2)
cop(beer-6, am-3)
neg(beer-6, not-4)
det(beer-6, a-5)
root(ROOT-0, beer-6)
dep(beer-6, drinker-7)


(ROOT
  (S (IN so)
    (NP (PRP I))
    (VP
      (VP (VBD looked)
        (PP (IN in)
          (NP (PRP$ my) (NN cupboard))))
      (CC and)
      (VP (VBD found)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT the) (JJ inner) (NN tube))
              (PP (IN of)
                (NP (PRP$ my) (JJ chiffon) (NN cake) (NN tin))))
            (VP (VBD worked)
              (ADJP
                (ADJP (RB even) (JJR better))
                (SBAR (IN than)
                  (S
                    (NP (DT a) (NN beer))
                    (VP (MD can)))))
              (SBAR (IN as)
                (S
                  (NP (PRP it))
                  (VP (VBD had)
                    (NP
                      (NP (DT a) (NN base))
                      (PP (IN for)
                        (NP (DT the) (NN chicken)
                          (S
                            (VP (TO to)
                              (VP (VB rest)
                                (PRT (RP on))))))))))))))))
    (. .)))


dep(looked-3, so-1)
nsubj(looked-3, I-2)
root(ROOT-0, looked-3)
prep(looked-3, in-4)
poss(cupboard-6, my-5)
pobj(in-4, cupboard-6)
cc(looked-3, and-7)
conj(looked-3, found-8)
mark(worked-18, that-9)
det(tube-12, the-10)
amod(tube-12, inner-11)
nsubj(worked-18, tube-12)
prep(tube-12, of-13)
poss(tin-17, my-14)
amod(tin-17, chiffon-15)
nn(tin-17, cake-16)
pobj(of-13, tin-17)
ccomp(found-8, worked-18)
advmod(better-20, even-19)
acomp(worked-18, better-20)
mark(can-24, than-21)
det(beer-23, a-22)
nsubj(can-24, beer-23)
ccomp(better-20, can-24)
mark(had-27, as-25)
nsubj(had-27, it-26)
advcl(worked-18, had-27)
det(base-29, a-28)
dobj(had-27, base-29)
prep(base-29, for-30)
det(chicken-32, the-31)
pobj(for-30, chicken-32)
aux(rest-34, to-33)
infmod(chicken-32, rest-34)
prt(rest-34, on-35)


(ROOT
  (SINV
    (VP (VBG Placing)
      (NP
        (NP (DT this))
        (PP (IN over)
          (NP
            (NP (DT a) (JJ small) (NN cake) (NN tin))
            (VP (VBN filled)
              (PP (IN with)
                (S
                  (VP (VBG boiling)
                    (NP (NN water))
                    (PP (IN from)
                      (NP (DT the) (NN kettle)))))))))))
    (VP (VBD was))
    (NP
      (NP (DT a) (JJ good) (NN way))
      (PP (IN of)
        (S
          (VP (VBG keeping)
            (S
              (VP (VBG getting)
                (NP
                  (NP (DT the) (NN cavity))
                  (PP (IN of)
                    (NP (DT the) (NN chicken))))
                (PP (TO to)
                  (NP
                    (NP (DT a) (NN temperature))
                    (PP (IN of)
                      (NP
                        (NP
                          (NP (CD 100) (NNS degrees))
                          (PRN
                            (NP (NNP C.)))
                          (PRN (-LRB- -LRB-)
                            (NP
                              (NP (VBG Boiling) (NN point))
                              (PP (IN of)
                                (NP (NN water))))
                            (-RRB- -RRB-)))
                        (PP (IN With)
                          (NP (DT the) (NNP Openspace) (NN oven)))))
                    (, ,)))))))))))


root(ROOT-0, Placing-1)
dobj(Placing-1, this-2)
prep(this-2, over-3)
det(tin-7, a-4)
amod(tin-7, small-5)
nn(tin-7, cake-6)
pobj(over-3, tin-7)
partmod(tin-7, filled-8)
prep(filled-8, with-9)
pcomp(with-9, boiling-10)
dobj(boiling-10, water-11)
prep(boiling-10, from-12)
det(kettle-14, the-13)
pobj(from-12, kettle-14)
aux(Placing-1, was-15)
det(way-18, a-16)
amod(way-18, good-17)
nsubj(Placing-1, way-18)
prep(way-18, of-19)
pcomp(of-19, keeping-20)
xcomp(keeping-20, getting-21)
det(cavity-23, the-22)
dobj(getting-21, cavity-23)
prep(cavity-23, of-24)
det(chicken-26, the-25)
pobj(of-24, chicken-26)
prep(getting-21, to-27)
det(temperature-29, a-28)
pobj(to-27, temperature-29)
prep(temperature-29, of-30)
num(degrees-32, 100-31)
pobj(of-30, degrees-32)
dep(degrees-32, C.-33)
amod(point-36, Boiling-35)
dep(degrees-32, point-36)
prep(point-36, of-37)
pobj(of-37, water-38)
prep(degrees-32, With-40)
det(oven-43, the-41)
nn(oven-43, Openspace-42)
pobj(With-40, oven-43)


(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (NP (DT the) (NN flexibility)
        (S
          (VP (TO to)
            (VP
              (ADVP (RB actually))
              (VB bake)
              (NP
                (NP (DT some) (NN cornbread))
                (PP (IN at)
                  (NP (DT a) (JJ different) (NN temperature))))))))
      (SBAR (IN while)
        (S
          (NP (PRP I))
          (VP (VBP am)
            (VP (VBG roasting)
              (NP (DT the) (NN chicken)))))))
    (. .)))


nsubj(have-2, I-1)
root(ROOT-0, have-2)
det(flexibility-4, the-3)
dobj(have-2, flexibility-4)
aux(bake-7, to-5)
advmod(bake-7, actually-6)
infmod(flexibility-4, bake-7)
det(cornbread-9, some-8)
dobj(bake-7, cornbread-9)
prep(cornbread-9, at-10)
det(temperature-13, a-11)
amod(temperature-13, different-12)
pobj(at-10, temperature-13)
mark(roasting-17, while-14)
nsubj(roasting-17, I-15)
aux(roasting-17, am-16)
advcl(have-2, roasting-17)
det(chicken-19, the-18)
dobj(roasting-17, chicken-19)


(ROOT
  (S
    (NP (DT The) (CD two) (NNS compartments))
    (VP (VBP have)
      (NP (PRP$ their) (JJ own) (NN temperature) (NN control)))
    (. .)))


det(compartments-3, The-1)
num(compartments-3, two-2)
nsubj(have-4, compartments-3)
root(ROOT-0, have-4)
poss(control-8, their-5)
amod(control-8, own-6)
nn(control-8, temperature-7)
dobj(have-4, control-8)


(ROOT
  (FRAG
    (ADVP (RB So))
    (SBAR (IN while)
      (S
        (NP (PRP I))
        (VP (VBP am)
          (VP (VBG roasting)
            (NP (PRP$ my) (NN chicken))
            (PP (IN at)
              (NP (CD 220) (NNS degrees) (, ,)))))))))


root(ROOT-0, So-1)
mark(roasting-5, while-2)
nsubj(roasting-5, I-3)
aux(roasting-5, am-4)
dep(So-1, roasting-5)
poss(chicken-7, my-6)
dobj(roasting-5, chicken-7)
prep(roasting-5, at-8)
num(degrees-10, 220-9)
pobj(at-8, degrees-10)


(ROOT
  (S
    (NP (PRP I))
    (VP (VBD was)
      (VP (VBG baking)
        (NP (PRP$ my) (NN cornbread))
        (PP (IN at)
          (NP (CD 190) (NNS degrees)))))
    (. !)))


nsubj(baking-3, I-1)
aux(baking-3, was-2)
root(ROOT-0, baking-3)
poss(cornbread-5, my-4)
dobj(baking-3, cornbread-5)
prep(baking-3, at-6)
num(degrees-8, 190-7)
pobj(at-6, degrees-8)


(ROOT
  (S (-LRB- -LRB-)
    (VP (VB Note))
    (: :)))




(ROOT
  (S
    (NP (DT The) (NN difference) (NN range))
    (VP (VBZ is)
      (ADJP (VBN limited)
        (PP (TO to)
          (NP
            (NP (CD 50) (NNS degrees))
            (-RRB- -RRB-)
            (SBAR
              (S
                (VP (VBZ Plus)
                  (SBAR (IN if)
                    (S
                      (NP (PRP I))
                      (VP (VBD was)
                        (ADVP (RB just))
                        (VP (VBG roasting)
                          (NP (NN chicken)))))))))
            (, ,)))))))


det(range-3, The-1)
nn(range-3, difference-2)
nsubjpass(limited-5, range-3)
auxpass(limited-5, is-4)
root(ROOT-0, limited-5)
prep(limited-5, to-6)
num(degrees-8, 50-7)
pobj(to-6, degrees-8)
rcmod(degrees-8, Plus-10)
mark(roasting-15, if-11)
nsubj(roasting-15, I-12)
aux(roasting-15, was-13)
advmod(roasting-15, just-14)
advcl(Plus-10, roasting-15)
dobj(roasting-15, chicken-16)


(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB actually))
    (VP (VB save)
      (PP (IN on)
        (NP (NN electricity)))
      (SBAR (IN as)
        (S
          (NP (PRP I))
          (ADVP (RB only))
          (VP (VBP use)
            (NP (DT the) (JJ bottom) (NN compartment))))))
    (. .)))


nsubj(save-3, I-1)
advmod(save-3, actually-2)
root(ROOT-0, save-3)
prep(save-3, on-4)
pobj(on-4, electricity-5)
mark(use-9, as-6)
nsubj(use-9, I-7)
advmod(use-9, only-8)
advcl(save-3, use-9)
det(compartment-12, the-10)
amod(compartment-12, bottom-11)
dobj(use-9, compartment-12)


(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN insulator))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ divides)
              (NP (DT the) (NN oven))
              (PP (IN into)
                (NP (CD two) (NNS compartments))))))))
    (. .)))


expl(is-2, There-1)
root(ROOT-0, is-2)
det(insulator-4, an-3)
nsubj(is-2, insulator-4)
nsubj(divides-6, that-5)
rcmod(insulator-4, divides-6)
det(oven-8, the-7)
dobj(divides-6, oven-8)
prep(divides-6, into-9)
num(compartments-11, two-10)
pobj(into-9, compartments-11)


(ROOT
  (SBAR (IN If)
    (S
      (NP (PRP you))
      (VP (VBZ remove)
        (NP (DT the) (NN insulator)))
      (, ,))))


mark(remove-3, If-1)
nsubj(remove-3, you-2)
root(ROOT-0, remove-3)
det(insulator-5, the-4)
dobj(remove-3, insulator-5)


(ROOT
  (S
    (ADVP (RB then))
    (NP (DT the) (JJ whole) (NN oven))
    (VP (MD can)
      (VP (VB be)
        (VP (VBN used)
          (S
            (VP (TO to)
              (VP (VB say)
                (S
                  (VP (VBG roast)
                    (NP (DT a) (JJ whole) (NN turkey) (NN upright))))))))))
    (. !)))


advmod(used-7, then-1)
det(oven-4, the-2)
amod(oven-4, whole-3)
nsubjpass(used-7, oven-4)
aux(used-7, can-5)
auxpass(used-7, be-6)
root(ROOT-0, used-7)
aux(say-9, to-8)
xcomp(used-7, say-9)
xcomp(say-9, roast-10)
det(upright-14, a-11)
amod(upright-14, whole-12)
nn(upright-14, turkey-13)
dobj(roast-10, upright-14)


(ROOT
  (NP
    (NP (DT All))
    (PP (IN in)
      (NP
        (NP (DT all))
        (, ,)))))


root(ROOT-0, All-1)
prep(All-1, in-2)
pobj(in-2, all-3)


(ROOT
  (S
    (NP (PRP I))
    (VP (VBD found)
      (S
        (NP
          (NP (DT the) (NN flexibility))
          (CC and)
          (NP (DT the) (JJ extra) (NN space)))
        (ADJP (RB very) (JJ useful))))
    (. .)))


nsubj(found-2, I-1)
root(ROOT-0, found-2)
det(flexibility-4, the-3)
nsubj(useful-10, flexibility-4)
cc(flexibility-4, and-5)
det(space-8, the-6)
amod(space-8, extra-7)
conj(flexibility-4, space-8)
advmod(useful-10, very-9)
xcomp(found-2, useful-10)


(ROOT
  (S
    (S
      (NP
        (NP (PRP$ My) (NN Recipe))
        (PP (IN for)
          (NP (DT the) (NNP Crispy) (NNP Roast) (NNP Chicken) (JJ Many) (NNS chickens))))
      (VP (VBD had)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN sacrificed)
                (PP (IN for)
                  (NP
                    (NP (DT the) (NN sake))
                    (PP (IN of)
                      (NP (DT this) (NN post)))))))))))
    (CC and)
    (S
      (NP (PRP I))
      (ADVP (RB always))
      (VP (VBP have)
        (S
          (VP (TO to)
            (VP (VB come)
              (PRT (RP up))
              (PP (IN with)
                (NP
                  (NP (JJ new) (NNS flavors))
                  (PP (IN for)
                    (NP (DT the) (NN chicken)))))
              (SBAR (RB so) (IN that)
                (S
                  (NP (PRP$ my) (NNS kids))
                  (VP (VBP do) (RB n't)
                    (VP (VB complain)
                      (ADVP (RB too) (RB much)))))))))))
    (. .)))


poss(Recipe-2, My-1)
nsubj(had-10, Recipe-2)
prep(Recipe-2, for-3)
det(chickens-9, the-4)
nn(chickens-9, Crispy-5)
nn(chickens-9, Roast-6)
nn(chickens-9, Chicken-7)
amod(chickens-9, Many-8)
pobj(for-3, chickens-9)
root(ROOT-0, had-10)
aux(sacrificed-13, to-11)
auxpass(sacrificed-13, be-12)
xcomp(had-10, sacrificed-13)
prep(sacrificed-13, for-14)
det(sake-16, the-15)
pobj(for-14, sake-16)
prep(sake-16, of-17)
det(post-19, this-18)
pobj(of-17, post-19)
cc(had-10, and-20)
nsubj(have-23, I-21)
advmod(have-23, always-22)
conj(had-10, have-23)
aux(come-25, to-24)
xcomp(have-23, come-25)
prt(come-25, up-26)
prep(come-25, with-27)
amod(flavors-29, new-28)
pobj(with-27, flavors-29)
prep(flavors-29, for-30)
det(chicken-32, the-31)
pobj(for-30, chicken-32)
advmod(complain-39, so-33)
mark(complain-39, that-34)
poss(kids-36, my-35)
nsubj(complain-39, kids-36)
aux(complain-39, do-37)
neg(complain-39, n't-38)
advcl(come-25, complain-39)
advmod(much-41, too-40)
advmod(complain-39, much-41)


(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBP are)
        (NP
          (NP (JJ many) (NNS flavors))
          (SBAR
            (WHNP (WDT which))
            (S
              (NP (PRP I))
              (VP (VBD experimented)
                (PP (IN with))))))))
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (ADVP (RB really))
        (ADVP (RB up)
          (PP (TO to)
            (NP (PRP you))))
        (SBAR
          (SBAR (IN if)
            (S
              (NP (PRP you))
              (VP (VBP want)
                (S
                  (VP (TO to)
                    (VP
                      (VP (VB season)
                        (NP (DT the) (NN chicken))
                        (PP (IN with)
                          (NP
                            (NP (RB just) (NN salt))
                            (CC and)
                            (NP (NN pepper)))))
                      (CC and)
                      (VP (VB baste)
                        (NP (DT the) (NN chicken))
                        (PP (IN with)
                          (NP (NN butter))))))))))
          (CC or)
          (SBAR (IN if)
            (S
              (NP (PRP you))
              (VP (VBP want)
                (S
                  (VP (TO to)
                    (VP (VB go)
                      (NP
                        (NP (DT the) (NN way))
                        (PP (IN of)
                          (S
                            (VP (VBG marinating)
                              (NP (PRP it))
                              (PP (IN with)
                                (NP (JJ satay) (NNS spices))))))))))))))))
    (. .)))


expl(are-2, There-1)
root(ROOT-0, are-2)
amod(flavors-4, many-3)
nsubj(are-2, flavors-4)
pobj(with-8, which-5)
nsubj(experimented-7, I-6)
rcmod(flavors-4, experimented-7)
prep(experimented-7, with-8)
cc(are-2, and-9)
nsubj(is-11, it-10)
conj(are-2, is-11)
advmod(is-11, really-12)
advmod(is-11, up-13)
prep(up-13, to-14)
pobj(to-14, you-15)
mark(want-18, if-16)
nsubj(want-18, you-17)
dep(is-11, want-18)
aux(season-20, to-19)
xcomp(want-18, season-20)
det(chicken-22, the-21)
dobj(season-20, chicken-22)
prep(season-20, with-23)
advmod(salt-25, just-24)
pobj(with-23, salt-25)
cc(salt-25, and-26)
conj(salt-25, pepper-27)
cc(season-20, and-28)
conj(season-20, baste-29)
det(chicken-31, the-30)
dobj(baste-29, chicken-31)
prep(baste-29, with-32)
pobj(with-32, butter-33)
cc(want-18, or-34)
mark(want-37, if-35)
nsubj(want-37, you-36)
conj(want-18, want-37)
aux(go-39, to-38)
xcomp(want-37, go-39)
det(way-41, the-40)
dobj(go-39, way-41)
prep(way-41, of-42)
pcomp(of-42, marinating-43)
dobj(marinating-43, it-44)
prep(marinating-43, with-45)
amod(spices-47, satay-46)
pobj(with-45, spices-47)


(ROOT
  (FRAG
    (ADVP (RB However))
    (ADVP (RB ,))))


root(ROOT-0, However-1)


(ROOT
  (S
    (NP (PRP I))
    (VP (VBD wanted)
      (S
        (VP (TO to)
          (VP (VB post)
            (NP (NN something))
            (SBAR (IN that)
              (S
                (NP (DT no) (NN one) (RB else))
                (VP (VBZ has)
                  (VP (VBN posted)
                    (PP (IN on)
                      (NP (DT the) (NN net)))))))))))
    (, ,)))


nsubj(wanted-2, I-1)
root(ROOT-0, wanted-2)
aux(post-4, to-3)
xcomp(wanted-2, post-4)
dobj(post-4, something-5)
mark(posted-11, that-6)
det(one-8, no-7)
nsubj(posted-11, one-8)
advmod(one-8, else-9)
aux(posted-11, has-10)
ccomp(post-4, posted-11)
prep(posted-11, on-12)
det(net-14, the-13)
pobj(on-12, net-14)


(ROOT
  (S (IN so)
    (NP (PRP I))
    (VP (VBD asked)
      (NP (NNP Francis))
      (PP (IN from)
        (NP (NNP Cafe) (FW de) (NNP Hong) (NNP Kong)))
      (PP (IN for)
        (NP (PRP$ his) (JJ fabulous) (NNP Roast) (NNP Chicken) (NN recipe))))
    (. .)))


dep(asked-3, so-1)
nsubj(asked-3, I-2)
root(ROOT-0, asked-3)
dobj(asked-3, Francis-4)
prep(asked-3, from-5)
nn(Kong-9, Cafe-6)
nn(Kong-9, de-7)
nn(Kong-9, Hong-8)
pobj(from-5, Kong-9)
prep(asked-3, for-10)
poss(recipe-15, his-11)
amod(recipe-15, fabulous-12)
nn(recipe-15, Roast-13)
nn(recipe-15, Chicken-14)
pobj(for-10, recipe-15)


(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP (DT the)
        (ADJP (RB crispy) (JJ skinned))
        (JJ bronzed) (NN chicken))
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (VBP love)
            (S
              (VP (TO to)
                (VP (VB eat)
                  (PP (IN at)
                    (NP (JJ chinese) (NNS restaurants))))))))))
    (. .)))


nsubj(chicken-7, This-1)
cop(chicken-7, is-2)
det(chicken-7, the-3)
advmod(skinned-5, crispy-4)
amod(chicken-7, skinned-5)
amod(chicken-7, bronzed-6)
root(ROOT-0, chicken-7)
mark(love-10, that-8)
nsubj(love-10, I-9)
ccomp(chicken-7, love-10)
aux(eat-12, to-11)
xcomp(love-10, eat-12)
prep(eat-12, at-13)
amod(restaurants-15, chinese-14)
pobj(at-13, restaurants-15)


(ROOT
  (S
    (ADVP (RB Actually))
    (NP (NNP Roast) (NNP Chicken))
    (VP (VBZ is)
      (NP (DT a) (NN misnomer))
      (SBAR (IN since)
        (S
          (NP (DT the) (NN chicken))
          (VP (VBZ is)
            (ADVP (RB actually))
            (ADJP (RB deep) (JJ fried))))))
    (. .)))


advmod(misnomer-6, Actually-1)
nn(Chicken-3, Roast-2)
nsubj(misnomer-6, Chicken-3)
cop(misnomer-6, is-4)
det(misnomer-6, a-5)
root(ROOT-0, misnomer-6)
mark(fried-13, since-7)
det(chicken-9, the-8)
nsubj(fried-13, chicken-9)
cop(fried-13, is-10)
advmod(fried-13, actually-11)
advmod(fried-13, deep-12)
advcl(misnomer-6, fried-13)


(ROOT
  (S (CC But)
    (ADVP
      (ADVP (RB not) (JJ many))
      (PP (IN of)
        (NP (PRP us))))
    (VP (MD would)
      (VP (VB want)
        (S
          (VP (TO to)
            (VP (VB heat)
              (PRT (RP up))
              (NP
                (NP (DT a) (JJ whole) (NN pot))
                (PP (IN of)
                  (NP (NN oil) (RB just))))
              (PP (TO to)
                (NP (JJ deep) (NN fry) (CD one) (NN chicken))))))))
    (, ,)))


cc(want-7, But-1)
dep(many-3, not-2)
advmod(want-7, many-3)
prep(many-3, of-4)
pobj(of-4, us-5)
aux(want-7, would-6)
root(ROOT-0, want-7)
aux(heat-9, to-8)
xcomp(want-7, heat-9)
prt(heat-9, up-10)
det(pot-13, a-11)
amod(pot-13, whole-12)
dobj(heat-9, pot-13)
prep(pot-13, of-14)
pobj(of-14, oil-15)
advmod(oil-15, just-16)
prep(heat-9, to-17)
amod(chicken-21, deep-18)
nn(chicken-21, fry-19)
num(chicken-21, one-20)
pobj(to-17, chicken-21)


(ROOT
  (S (CC so)
    (ADVP (RB here))
    (VP (VBZ is)
      (NP (PRP$ my) (VBN modified) (NN home) (NN version)))
    (: :)))


cc(version-7, so-1)
advmod(version-7, here-2)
dep(version-7, is-3)
poss(version-7, my-4)
amod(version-7, modified-5)
nn(version-7, home-6)
root(ROOT-0, version-7)


(ROOT
  (FRAG
    (NP (CD 1))
    (. .)))


root(ROOT-0, 1-1)


(ROOT
  (S
    (VP (VBG Brining)
      (NP
        (NP (DT the) (NNP Chicken))
        (PRN (-LRB- -LRB-)
          (NP (NNP Optional) (NN Step))
          (-RRB- -RRB-))))))


root(ROOT-0, Brining-1)
det(Chicken-3, the-2)
dobj(Brining-1, Chicken-3)
nn(Step-6, Optional-5)
appos(Chicken-3, Step-6)


(ROOT
  (S
    (NP (DT This) (NN step))
    (VP (VBZ is)
      (ADJP
        (ADJP (JJ optional)
          (PP (IN for)
            (NP (NNS chickens))))
        (CC but)
        (ADJP (JJ essential)
          (PP (IN for)
            (NP (NNS turkeys))))))
    (. .)))


det(step-2, This-1)
nsubj(optional-4, step-2)
cop(optional-4, is-3)
root(ROOT-0, optional-4)
prep(optional-4, for-5)
pobj(for-5, chickens-6)
cc(optional-4, but-7)
conj(optional-4, essential-8)
prep(essential-8, for-9)
pobj(for-9, turkeys-10)


(ROOT
  (S
    (NP (NNP Heston))
    (VP (VBZ brines)
      (NP (PRP$ his) (NN chicken))
      (PP (IN in)
        (NP (DT a)
          (ADJP (CD 8) (NN %)))))))


nsubj(brines-2, Heston-1)
root(ROOT-0, brines-2)
poss(chicken-4, his-3)
dobj(brines-2, chicken-4)
prep(brines-2, in-5)
det(%-8, a-6)
number(%-8, 8-7)
pobj(in-5, %-8)


(ROOT
  (S
    (NP (NN salt) (NN solution))
    (VP (VBP ie)
      (NP
        (NP (JJ 80g) (NN salt))
        (PP (IN per)
          (NP
            (NP (NN litre))
            (PP (IN of)
              (NP
                (NP (NN water))
                (PP (IN for)
                  (NP (CD 4) (NNS hours)))))))))
    (. .)))


nn(solution-2, salt-1)
nsubj(ie-3, solution-2)
root(ROOT-0, ie-3)
amod(salt-5, 80g-4)
dobj(ie-3, salt-5)
prep(salt-5, per-6)
pobj(per-6, litre-7)
prep(litre-7, of-8)
pobj(of-8, water-9)
prep(water-9, for-10)
num(hours-12, 4-11)
pobj(for-10, hours-12)


(ROOT
  (S
    (NP (NNP Brining))
    (VP (MD will)
      (VP
        (VP (VB make)
          (S
            (NP (DT the) (NN chicken))
            (ADJP (RBR more) (JJ juicy))))
        (CC and)
        (VP (VB introduce)
          (NP (DT some) (NN taste))
          (PP (IN into)
            (NP (DT the) (NN meat))))))
    (. .)))


nsubj(make-3, Brining-1)
aux(make-3, will-2)
root(ROOT-0, make-3)
det(chicken-5, the-4)
nsubj(juicy-7, chicken-5)
advmod(juicy-7, more-6)
xcomp(make-3, juicy-7)
cc(make-3, and-8)
conj(make-3, introduce-9)
det(taste-11, some-10)
dobj(introduce-9, taste-11)
prep(introduce-9, into-12)
det(meat-14, the-13)
pobj(into-12, meat-14)


(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBP have)
        (VP (VBN tried)
          (S
            (VP (VBG brining)))))
      (CC but)
      (VP (VBD found)
        (SBAR (IN that)
          (S
            (NP (DT the) (JJ extra) (NN effort))
            (VP (VBZ is) (RB not)
              (NP
                (ADJP (RB really) (JJ worth))
                (DT the) (NN trouble)))))))
    (. .)))


nsubj(tried-3, I-1)
aux(tried-3, have-2)
root(ROOT-0, tried-3)
xcomp(tried-3, brining-4)
cc(tried-3, but-5)
conj(tried-3, found-6)
mark(trouble-16, that-7)
det(effort-10, the-8)
amod(effort-10, extra-9)
nsubj(trouble-16, effort-10)
cop(trouble-16, is-11)
neg(trouble-16, not-12)
advmod(worth-14, really-13)
amod(trouble-16, worth-14)
det(trouble-16, the-15)
ccomp(found-6, trouble-16)


(ROOT
  (FRAG
    (ADVP (RB However))
    (ADVP (RB ,))))


root(ROOT-0, However-1)


(ROOT
  (S
    (NP (PRP I))
    (VP (VBP like)
      (NP
        (NP (DT that)
          (ADJP (RB slightly) (JJ salty))
          (NN flavor))
        (PP (IN in)
          (NP (PRP$ my) (NN chicken)))))
    (, ,)))


nsubj(like-2, I-1)
root(ROOT-0, like-2)
det(flavor-6, that-3)
advmod(salty-5, slightly-4)
amod(flavor-6, salty-5)
dobj(like-2, flavor-6)
prep(flavor-6, in-7)
poss(chicken-9, my-8)
pobj(in-7, chicken-9)


(ROOT
  (S (CC so)
    (SBAR
      (WHNP (WP what))
      (S
        (NP (PRP I))
        (VP (VBP do)
          (ADVP (RB now)))))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP
            (VP (VB use)
              (NP
                (NP
                  (NP (DT a) (NN solution))
                  (VP (VBN made)
                    (PP (IN from)
                      (NP (CD 1\/2) (NN cup) (NNP Soy) (NNP Sauce)))))
                (CC and)
                (NP
                  (NP (CD 1\/2) (NN cup) (NN water))
                  (PP (IN as)
                    (NP (DT the) (VBG brining) (NN solution))))))
            (CC and)
            (VP (VB marinade)
              (NP
                (NP (DT the) (JJ whole) (NN chicken))
                (PP (IN in)
                  (NP (DT a) (JJ sealable) (JJ plastic) (NN bag))))
              (PP
                (ADVP (RB overnight))
                (IN with)
                (NP
                  (NP (PDT all) (DT the) (NN air))
                  (VP (VBN evacuated)
                    (SBAR (RB so) (IN that)
                      (S
                        (NP (DT the) (JJ whole) (NN chicken))
                        (VP (VBZ is)
                          (PP (IN in)
                            (NP
                              (NP (NN contact))
                              (PP (IN with)
                                (NP (DT the) (NN solution))))))))))))))))
    (. .)))


cc(is-6, so-1)
dobj(do-4, what-2)
nsubj(do-4, I-3)
csubj(is-6, do-4)
advmod(do-4, now-5)
root(ROOT-0, is-6)
aux(use-8, to-7)
xcomp(is-6, use-8)
det(solution-10, a-9)
dobj(use-8, solution-10)
partmod(solution-10, made-11)
prep(made-11, from-12)
num(Sauce-16, 1\/2-13)
nn(Sauce-16, cup-14)
nn(Sauce-16, Soy-15)
pobj(from-12, Sauce-16)
cc(solution-10, and-17)
num(water-20, 1\/2-18)
nn(water-20, cup-19)
conj(solution-10, water-20)
prep(water-20, as-21)
det(solution-24, the-22)
amod(solution-24, brining-23)
pobj(as-21, solution-24)
cc(use-8, and-25)
conj(use-8, marinade-26)
det(chicken-29, the-27)
amod(chicken-29, whole-28)
dobj(marinade-26, chicken-29)
prep(chicken-29, in-30)
det(bag-34, a-31)
amod(bag-34, sealable-32)
amod(bag-34, plastic-33)
pobj(in-30, bag-34)
advmod(with-36, overnight-35)
prep(marinade-26, with-36)
predet(air-39, all-37)
det(air-39, the-38)
pobj(with-36, air-39)
partmod(air-39, evacuated-40)
advmod(is-46, so-41)
mark(is-46, that-42)
det(chicken-45, the-43)
amod(chicken-45, whole-44)
nsubj(is-46, chicken-45)
advcl(evacuated-40, is-46)
prep(is-46, in-47)
pobj(in-47, contact-48)
prep(contact-48, with-49)
det(solution-51, the-50)
pobj(with-49, solution-51)


(ROOT
  (S
    (VP (VB Try)
      (S
        (VP (TO to)
          (VP (VB use)
            (NP (DT a) (JJ good) (NN soy) (NN sauce))
            (PP (IN like)
              (NP (NNP Kikkoman) (NNP Special) (NNP Fragrance) (NNP Soy) (NNP Sauce))))))
      (SBAR (IN as)
        (S
          (NP (PRP it))
          (VP (VBP give)
            (NP (PRP it))
            (NP (JJR better) (NN flavor))))))
    (. .)))


root(ROOT-0, Try-1)
aux(use-3, to-2)
xcomp(Try-1, use-3)
det(sauce-7, a-4)
amod(sauce-7, good-5)
nn(sauce-7, soy-6)
dobj(use-3, sauce-7)
prep(use-3, like-8)
nn(Sauce-13, Kikkoman-9)
nn(Sauce-13, Special-10)
nn(Sauce-13, Fragrance-11)
nn(Sauce-13, Soy-12)
pobj(like-8, Sauce-13)
mark(give-16, as-14)
nsubj(give-16, it-15)
advcl(Try-1, give-16)
iobj(give-16, it-17)
amod(flavor-19, better-18)
dobj(give-16, flavor-19)


(ROOT
  (S
    (NP (PRP I))
    (VP (VBP find)
      (SBAR (IN that)
        (S
          (S
            (VP (VBG brining)
              (NP (DT this) (NN way))))
          (VP
            (VP (VBZ gives)
              (NP (PRP it))
              (NP
                (NP (DT that) (NNS juiciness))
                (CC and)
                (NP (NN flavor))))
            (CC but)
            (VP (VBZ does) (RB n't)
              (VP (VB take)
                (PRT (RP up))
                (NP
                  (ADJP (RB too) (JJ much))
                  (NN space))
                (PP (IN in)
                  (NP (DT the) (NN fridge)))))))))
    (. .)))


nsubj(find-2, I-1)
root(ROOT-0, find-2)
mark(gives-7, that-3)
csubj(gives-7, brining-4)
det(way-6, this-5)
dobj(brining-4, way-6)
ccomp(find-2, gives-7)
iobj(gives-7, it-8)
det(juiciness-10, that-9)
dobj(gives-7, juiciness-10)
cc(juiciness-10, and-11)
conj(juiciness-10, flavor-12)
cc(gives-7, but-13)
aux(take-16, does-14)
neg(take-16, n't-15)
conj(gives-7, take-16)
prt(take-16, up-17)
advmod(much-19, too-18)
amod(space-20, much-19)
dobj(take-16, space-20)
prep(take-16, in-21)
det(fridge-23, the-22)
pobj(in-21, fridge-23)


(ROOT
  (SBAR (IN If)
    (S
      (NP (PRP you))
      (VP (VBP wish))
      (, ,))))


mark(wish-3, If-1)
nsubj(wish-3, you-2)
root(ROOT-0, wish-3)


(ROOT
  (S
    (NP (PRP you))
    (VP (MD can)
      (ADVP (RB also))
      (VP (VB add)
        (NP (DT some) (NN coriander) (NN root))
        (S
          (VP (TO to)
            (VP (VB give)
              (NP (PRP it))
              (NP (DT a) (JJ nice) (NN aroma)))))))
    (. .)))


nsubj(add-4, you-1)
aux(add-4, can-2)
advmod(add-4, also-3)
root(ROOT-0, add-4)
det(root-7, some-5)
nn(root-7, coriander-6)
dobj(add-4, root-7)
aux(give-9, to-8)
xcomp(add-4, give-9)
iobj(give-9, it-10)
det(aroma-13, a-11)
amod(aroma-13, nice-12)
dobj(give-9, aroma-13)


(ROOT
  (FRAG
    (NP (CD 2))
    (. .)))


root(ROOT-0, 2-1)


(ROOT
  (S
    (S
      (VP
        (VP (VBG Preparing)
          (NP (DT the) (NN skin)))
        (CC and)
        (VP (VBG marinating)
          (NP (DT the) (NN chicken)))))
    (NP (DT This) (JJ particular) (NN step))
    (VP (VBZ is)
      (NP (DT the) (JJ important) (NN step))
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP wish)
            (S
              (VP (TO to)
                (VP (VB get)
                  (NP (DT that) (JJ golden) (JJ brown) (NN skin))
                  (SBAR (IN that)
                    (S
                      (NP (PRP you))
                      (VP (VBP see)
                        (PP (IN in)
                          (NP (JJ Chinese) (NNS restaurants)))))))))))))
    (. .)))


dep(step-14, Preparing-1)
det(skin-3, the-2)
dobj(Preparing-1, skin-3)
cc(Preparing-1, and-4)
conj(Preparing-1, marinating-5)
det(chicken-7, the-6)
dobj(marinating-5, chicken-7)
det(step-10, This-8)
amod(step-10, particular-9)
nsubj(step-14, step-10)
cop(step-14, is-11)
det(step-14, the-12)
amod(step-14, important-13)
root(ROOT-0, step-14)
mark(wish-17, if-15)
nsubj(wish-17, you-16)
advcl(step-14, wish-17)
aux(get-19, to-18)
xcomp(wish-17, get-19)
det(skin-23, that-20)
amod(skin-23, golden-21)
amod(skin-23, brown-22)
dobj(get-19, skin-23)
mark(see-26, that-24)
nsubj(see-26, you-25)
ccomp(get-19, see-26)
prep(see-26, in-27)
amod(restaurants-29, Chinese-28)
pobj(in-27, restaurants-29)


(ROOT
  (FRAG
    (PP (IN After)
      (NP (DT the) (JJ optional) (NN brining) (NN step)))
    (, ,)))


root(ROOT-0, After-1)
det(step-5, the-2)
amod(step-5, optional-3)
nn(step-5, brining-4)
pobj(After-1, step-5)


(ROOT
  (S
    (VP
      (VP (VB wash)
        (NP (DT the) (NN chicken)))
      (CC and)
      (VP
        (ADVP (RB then))
        (VB parboil)
        (NP (PRP it))
        (PP (IN for)
          (NP
            (NP (NN half))
            (NP (DT a) (NN minute)))))
      (CC and)
      (VP (VB cool)
        (NP (PRP it))
        (PP (IN in)
          (NP (JJ cold) (NN water)))))
    (. .)))


root(ROOT-0, wash-1)
det(chicken-3, the-2)
dobj(wash-1, chicken-3)
cc(wash-1, and-4)
advmod(parboil-6, then-5)
conj(wash-1, parboil-6)
dobj(parboil-6, it-7)
prep(parboil-6, for-8)
pobj(for-8, half-9)
det(minute-11, a-10)
dep(half-9, minute-11)
cc(wash-1, and-12)
conj(wash-1, cool-13)
dobj(cool-13, it-14)
prep(cool-13, in-15)
amod(water-17, cold-16)
pobj(in-15, water-17)


(ROOT
  (S
    (S
      (VP (VBG Repeat)
        (NP (DT this) (NN step))
        (ADVP (RB again))))
    (CC and)
    (S
      (ADVP (RB then))
      (VP (VB pat)
        (ADJP (JJ dry))))
    (. .)))


root(ROOT-0, Repeat-1)
det(step-3, this-2)
dobj(Repeat-1, step-3)
advmod(Repeat-1, again-4)
cc(Repeat-1, and-5)
advmod(pat-7, then-6)
conj(Repeat-1, pat-7)
acomp(pat-7, dry-8)


(ROOT
  (S
    (NP (JJ Season) (DT the) (NN cavity))
    (VP (VBP fo)
      (NP
        (NP (DT the) (NN chicken))
        (PP (IN with)
          (NP (CD 1) (NN tbl) (NN salt)))))
    (, ,)))


amod(cavity-3, Season-1)
det(cavity-3, the-2)
nsubj(fo-4, cavity-3)
root(ROOT-0, fo-4)
det(chicken-6, the-5)
dobj(fo-4, chicken-6)
prep(chicken-6, with-7)
num(salt-10, 1-8)
nn(salt-10, tbl-9)
pobj(with-7, salt-10)


(ROOT
  (NP
    (NP (CD 2) (NN teaspoon))
    (PP (IN of)
      (NP
        (NP (JJ white) (NN pepper))
        (CC and)
        (NP (DT a) (NN pinch))))
    (PP (IN of)
      (NP (CD 5) (NN spice) (NN powder)))
    (. .)))


num(teaspoon-2, 2-1)
root(ROOT-0, teaspoon-2)
prep(teaspoon-2, of-3)
amod(pepper-5, white-4)
pobj(of-3, pepper-5)
cc(pepper-5, and-6)
det(pinch-8, a-7)
conj(pepper-5, pinch-8)
prep(teaspoon-2, of-9)
num(powder-12, 5-10)
nn(powder-12, spice-11)
pobj(of-9, powder-12)


(ROOT
  (S
    (ADVP (RB Now))
    (NP (PRP you))
    (VP (VBP need)
      (S
        (VP (TO to)
          (VP (VB make)
            (NP (DT the) (VBG browning) (NN solution))))))
    (. .)))


advmod(need-3, Now-1)
nsubj(need-3, you-2)
root(ROOT-0, need-3)
aux(make-5, to-4)
xcomp(need-3, make-5)
det(solution-8, the-6)
amod(solution-8, browning-7)
dobj(make-5, solution-8)


(ROOT
  (FRAG
    (PP (IN In)
      (NP (DT a) (NN pot)))
    (, ,)))


root(ROOT-0, In-1)
det(pot-3, a-2)
pobj(In-1, pot-3)


(ROOT
  (S
    (NP (NN mix) (CD 3))
    (VP (VBP tbl)
      (NP (JJ white) (NN vinegar)))
    (, ,)))


nsubj(tbl-3, mix-1)
num(mix-1, 3-2)
root(ROOT-0, tbl-3)
amod(vinegar-5, white-4)
dobj(tbl-3, vinegar-5)


(ROOT
  (S
    (NP (CD 1))
    (VP (VBP tbl)
      (NP (JJ black) (NN vinegar)))
    (, ,)))


nsubj(tbl-2, 1-1)
root(ROOT-0, tbl-2)
amod(vinegar-4, black-3)
dobj(tbl-2, vinegar-4)


(ROOT
  (S
    (LST (LS 1))
    (VP (VB tbl)
      (NP (NN water)
        (CC and)
        (CD 1) (NN tbl) (NN malt) (NN sugar)))
    (. .)))


dep(tbl-2, 1-1)
root(ROOT-0, tbl-2)
nn(sugar-8, water-3)
cc(water-3, and-4)
conj(water-3, 1-5)
nn(sugar-8, tbl-6)
nn(sugar-8, malt-7)
dobj(tbl-2, sugar-8)


(ROOT
  (INTJ (UH -LRB-)))




(ROOT
  (S
    (NP (PRP You))
    (VP (MD can)
      (VP (VB find)
        (NP (DT this)
          (UCP
            (PP (IN in)
              (NP (DT the) (NN supermarket)))
            (CC or)
            (ADVP (RB just)))
          (NN use) (NN honey))
        (S
          (VP (TO to)
            (VP
              (VP (VB substitute) (-RRB- -RRB-)
                (NP (NNP Bring) (DT the) (NN solution))
                (PP (TO to)
                  (NP (DT a) (NN boil))))
              (CC and)
              (VP (VB let)
                (S
                  (NP (PRP it))
                  (ADJP (JJ cool)))))))))
    (. .)))


nsubj(find-3, You-1)
aux(find-3, can-2)
root(ROOT-0, find-3)
det(honey-11, this-4)
prep(honey-11, in-5)
det(supermarket-7, the-6)
pobj(in-5, supermarket-7)
cc(in-5, or-8)
conj(in-5, just-9)
nn(honey-11, use-10)
dobj(find-3, honey-11)
aux(substitute-13, to-12)
xcomp(find-3, substitute-13)
nn(solution-17, Bring-15)
det(solution-17, the-16)
dobj(substitute-13, solution-17)
prep(substitute-13, to-18)
det(boil-20, a-19)
pobj(to-18, boil-20)
cc(substitute-13, and-21)
conj(substitute-13, let-22)
nsubj(cool-24, it-23)
xcomp(let-22, cool-24)


(ROOT
  (S
    (NP (NNP Next))
    (VP
      (VP (VB apply)
        (NP
          (NP (DT this) (NN solution))
          (PP (IN over)
            (NP (DT the) (JJ whole) (NN chicken)))))
      (CC and)
      (VP (VB let)
        (S
          (NP (PRP it))
          (VP (VB air)
            (UCP
              (ADJP (JJ dry)
                (PP (IN for)
                  (NP
                    (QP (IN at) (JJS least) (CD 3))
                    (NNS hours))))
              (CC or)
              (PP
                (ADVP (RB overnight))
                (IN in)
                (NP
                  (NP (DT the) (NN fridge))
                  (VP
                    (ADVP (RB loosely))
                    (VBN covered)
                    (PP (IN with)
                      (NP (JJ baking) (NN paper)))))))))))
    (. .)))


nsubj(apply-2, Next-1)
root(ROOT-0, apply-2)
det(solution-4, this-3)
dobj(apply-2, solution-4)
prep(solution-4, over-5)
det(chicken-8, the-6)
amod(chicken-8, whole-7)
pobj(over-5, chicken-8)
cc(apply-2, and-9)
conj(apply-2, let-10)
nsubj(air-12, it-11)
ccomp(let-10, air-12)
acomp(air-12, dry-13)
prep(dry-13, for-14)
quantmod(3-17, at-15)
mwe(at-15, least-16)
num(hours-18, 3-17)
pobj(for-14, hours-18)
cc(dry-13, or-19)
advmod(in-21, overnight-20)
conj(dry-13, in-21)
det(fridge-23, the-22)
pobj(in-21, fridge-23)
advmod(covered-25, loosely-24)
partmod(fridge-23, covered-25)
prep(covered-25, with-26)
amod(paper-28, baking-27)
pobj(with-26, paper-28)


(ROOT
  (FRAG
    (NP (CD 3))
    (. .)))


root(ROOT-0, 3-1)


(ROOT
  (S
    (VP (VBG Cooking)
      (NP (DT the) (NN chicken) (NN Option) (NN A.))
      (ADVP
        (NP (CD 100) (NN degree))
        (RB Chicken))
      (PRN
        (PP (IN With)
          (NP (PRP$ my) (JJ chiffon) (NN tin) (NN gadget)))
        (, ,)))))


root(ROOT-0, Cooking-1)
det(A.-5, the-2)
nn(A.-5, chicken-3)
nn(A.-5, Option-4)
dobj(Cooking-1, A.-5)
num(degree-7, 100-6)
npadvmod(Chicken-8, degree-7)
advmod(Cooking-1, Chicken-8)
dep(Cooking-1, With-9)
poss(gadget-13, my-10)
amod(gadget-13, chiffon-11)
nn(gadget-13, tin-12)
pobj(With-9, gadget-13)


(ROOT
  (S
    (NP (PRP I))
    (VP (VBD experimented)
      (PP (IN with)
        (NP (JJ different) (NN cooking) (NNS temperatures)
          (CC and)
          (NN cooking) (NNS times))))
    (. .)))


nsubj(experimented-2, I-1)
root(ROOT-0, experimented-2)
prep(experimented-2, with-3)
amod(temperatures-6, different-4)
nn(temperatures-6, cooking-5)
pobj(with-3, temperatures-6)
cc(temperatures-6, and-7)
nn(times-9, cooking-8)
conj(temperatures-6, times-9)


(ROOT
  (S
    (S
      (NP (DT The) (NN key))
      (VP (VBZ is)
        (S
          (VP (TO to)
            (VP (VB cook)
              (NP (DT the) (NN chicken))
              (PP (TO to)
                (NP (CD 70) (NNS degrees))))))))
    (CC and)
    (S
      (NP (EX there))
      (VP (VBP are)
        (NP (JJ various) (NNS ways)
          (S
            (VP (TO to)
              (VP (VB do)
                (NP (DT this))))))))
    (. .)))


det(key-2, The-1)
nsubj(is-3, key-2)
root(ROOT-0, is-3)
aux(cook-5, to-4)
xcomp(is-3, cook-5)
det(chicken-7, the-6)
dobj(cook-5, chicken-7)
prep(cook-5, to-8)
num(degrees-10, 70-9)
pobj(to-8, degrees-10)
cc(is-3, and-11)
expl(are-13, there-12)
conj(is-3, are-13)
amod(ways-15, various-14)
nsubj(are-13, ways-15)
aux(do-17, to-16)
infmod(ways-15, do-17)
dobj(do-17, this-18)


(ROOT
  (FRAG
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP are)
          (NP (DT the) (JJ patient) (NN type)))))
    (. .)))


mark(type-6, If-1)
nsubj(type-6, you-2)
cop(type-6, are-3)
det(type-6, the-4)
amod(type-6, patient-5)
root(ROOT-0, type-6)


(ROOT
  (S
    (NP (PRP You))
    (VP (MD should)
      (VP (VB go)
        (ADJP (JJ low)
          (CC and)
          (JJ slow))
        (PP (IN by)
          (S
            (VP (VBG cooking)
              (NP (DT the) (NN chicken))
              (ADVP (RB just))
              (PP (IN below)
                (NP (CD 100) (NNS degrees))))))))
    (. .)))


nsubj(go-3, You-1)
aux(go-3, should-2)
root(ROOT-0, go-3)
acomp(go-3, low-4)
cc(low-4, and-5)
conj(low-4, slow-6)
prep(go-3, by-7)
pcomp(by-7, cooking-8)
det(chicken-10, the-9)
dobj(cooking-8, chicken-10)
advmod(cooking-8, just-11)
prep(cooking-8, below-12)
num(degrees-14, 100-13)
pobj(below-12, degrees-14)


(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP (DT the) (NN temperature))
      (SBAR (IN that)
        (S
          (NP (PRP they))
          (VP (VBP poach)
            (NP
              (NP (NN chicken))
              (PP (IN in)
                (NP (NN chicken) (NN rice))))))))
    (. .)))


nsubj(temperature-4, This-1)
cop(temperature-4, is-2)
det(temperature-4, the-3)
root(ROOT-0, temperature-4)
mark(poach-7, that-5)
nsubj(poach-7, they-6)
ccomp(temperature-4, poach-7)
dobj(poach-7, chicken-8)
prep(chicken-8, in-9)
nn(rice-11, chicken-10)
pobj(in-9, rice-11)


(ROOT
  (S
    (S
      (NP (DT The) (NN chicken))
      (VP (VBZ cooks)
        (ADVP (RB gently))))
    (CC and)
    (S
      (NP (DT the) (NN meat))
      (VP
        (VP (VBZ is)
          (ADJP (RB very) (JJ juicy)))
        (CC and)
        (VP (VBP tender))))
    (. .)))


det(chicken-2, The-1)
nsubj(cooks-3, chicken-2)
root(ROOT-0, cooks-3)
advmod(cooks-3, gently-4)
cc(cooks-3, and-5)
det(meat-7, the-6)
nsubj(juicy-10, meat-7)
cop(juicy-10, is-8)
advmod(juicy-10, very-9)
conj(cooks-3, juicy-10)
cc(juicy-10, and-11)
conj(juicy-10, tender-12)


(ROOT
  (S (CC But)
    (NP (EX there))
    (VP (VBZ is)
      (NP
        (NP (CD one) (NN problem))
        (CC and)
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (SBAR (IN that)
                (S
                  (NP (DT the) (NN skin))
                  (VP (VBZ does)
                    (NP (RB not) (JJ brown))))))))))
    (. .)))


cc(is-3, But-1)
expl(is-3, there-2)
root(ROOT-0, is-3)
num(problem-5, one-4)
nsubj(is-3, problem-5)
cc(problem-5, and-6)
nsubj(is-8, that-7)
conj(problem-5, is-8)
mark(does-12, that-9)
det(skin-11, the-10)
nsubj(does-12, skin-11)
ccomp(is-8, does-12)
neg(brown-14, not-13)
dobj(does-12, brown-14)


(ROOT
  (PP (IN In)
    (NP
      (NP (NN order))
      (PP (IN for)
        (NP (DT the) (NN skin)
          (S
            (VP (TO to)
              (VP (VB start)
                (NP (NN browning)))))))
      (, ,))))


root(ROOT-0, In-1)
pobj(In-1, order-2)
prep(order-2, for-3)
det(skin-5, the-4)
pobj(for-3, skin-5)
aux(start-7, to-6)
infmod(skin-5, start-7)
dobj(start-7, browning-8)


(ROOT
  (S
    (S
      (NP (DT the) (NNP Maillard) (NN reaction))
      (VP (VBZ has)
        (S
          (VP (TO to)
            (VP (VB occur))))))
    (CC and)
    (S
      (NP (PRP you))
      (VP (VBP need)
        (NP (NNS temperatures))
        (PP (IN in)
          (NP
            (NP (NN excess))
            (PP (IN of)
              (NP (CD 120) (NNS degrees)))))
        (SBAR (IN before)
          (S
            (NP (DT that))
            (VP (VBZ happens))))))
    (. .)))


det(reaction-3, the-1)
nn(reaction-3, Maillard-2)
nsubj(has-4, reaction-3)
root(ROOT-0, has-4)
aux(occur-6, to-5)
xcomp(has-4, occur-6)
cc(has-4, and-7)
nsubj(need-9, you-8)
conj(has-4, need-9)
dobj(need-9, temperatures-10)
prep(need-9, in-11)
pobj(in-11, excess-12)
prep(excess-12, of-13)
num(degrees-15, 120-14)
pobj(of-13, degrees-15)
mark(happens-18, before-16)
nsubj(happens-18, that-17)
advcl(need-9, happens-18)


(ROOT
  (S
    (NP (PRP You))
    (ADVP (RB also))
    (VP (VBP need)
      (S
        (NP (DT a) (DT the) (NN temperature))
        (VP (TO to)
          (VP (VB reach)
            (NP
              (NP (CD 170) (NNS degrees))
              (PP (IN in)
                (NP (NN order))))
            (PP (IN for)
              (NP (DT the) (NNS sugars)))
            (S
              (VP (TO to)
                (VP (VB caramelize))))))))
    (. .)))


nsubj(need-3, You-1)
advmod(need-3, also-2)
root(ROOT-0, need-3)
predet(temperature-6, a-4)
det(temperature-6, the-5)
nsubj(reach-8, temperature-6)
aux(reach-8, to-7)
xcomp(need-3, reach-8)
num(degrees-10, 170-9)
dobj(reach-8, degrees-10)
prep(degrees-10, in-11)
pobj(in-11, order-12)
prep(reach-8, for-13)
det(sugars-15, the-14)
pobj(for-13, sugars-15)
aux(caramelize-17, to-16)
xcomp(reach-8, caramelize-17)


(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN tried)
          (S
            (VP (VBG cooking)
              (S
                (NP (DT the) (NN chicken))
                (NP
                  (NP (DT the) (JJ normal) (NN way))
                  (PP (IN in)
                    (NP (DT a) (CD 100) (NN degree) (NN oven))))))))))
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD took)
        (ADVP (RB forever))
        (S
          (VP (TO to)
            (VP (VB cook))))))
    (. .)))


nsubj(tried-3, I-1)
aux(tried-3, have-2)
root(ROOT-0, tried-3)
xcomp(tried-3, cooking-4)
det(chicken-6, the-5)
nsubj(way-9, chicken-6)
det(way-9, the-7)
amod(way-9, normal-8)
xcomp(cooking-4, way-9)
prep(way-9, in-10)
det(oven-14, a-11)
num(oven-14, 100-12)
nn(oven-14, degree-13)
pobj(in-10, oven-14)
cc(tried-3, and-15)
nsubj(took-17, it-16)
conj(tried-3, took-17)
advmod(took-17, forever-18)
aux(cook-20, to-19)
xcomp(took-17, cook-20)


(ROOT
  (FRAG (CC But)
    (PP (IN with)
      (NP
        (NP (DT the) (NN chiffon) (NN tin))
        (, ,)))))


root(ROOT-0, But-1)
prep(But-1, with-2)
det(tin-5, the-3)
nn(tin-5, chiffon-4)
pobj(with-2, tin-5)


(ROOT
  (S
    (NP (DT the) (NN chicken))
    (VP (MD will)
      (VP (VB be)
        (VP
          (ADVP (RB fully))
          (VBN cooked)
          (PP (IN in)
            (NP (DT an) (CD 1) (NN hour))))))
    (. .)))


det(chicken-2, the-1)
nsubjpass(cooked-6, chicken-2)
aux(cooked-6, will-3)
auxpass(cooked-6, be-4)
advmod(cooked-6, fully-5)
root(ROOT-0, cooked-6)
prep(cooked-6, in-7)
det(hour-10, an-8)
num(hour-10, 1-9)
pobj(in-7, hour-10)


(ROOT
  (S
    (NP (DT This))
    (VP (VBZ achieves)
      (NP
        (NP (RB almost) (DT the) (JJ same) (NN result))
        (PP (IN as)
          (NP
            (NP (NNP Heston) (POS 's))
            (NN chicken)))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBD was)
              (VP (VBN cooked)
                (PP (IN at)
                  (NP
                    (NP (CD 60) (NNS degrees))
                    (PP (IN for)
                      (NP
                        (QP (CD four)
                          (CC and)
                          (DT a) (NN half))
                        (NNS hours)))))))))))
    (. !)))


nsubj(achieves-2, This-1)
root(ROOT-0, achieves-2)
advmod(result-6, almost-3)
det(result-6, the-4)
amod(result-6, same-5)
dobj(achieves-2, result-6)
prep(result-6, as-7)
poss(chicken-10, Heston-8)
possessive(Heston-8, 's-9)
pobj(as-7, chicken-10)
nsubjpass(cooked-13, which-11)
auxpass(cooked-13, was-12)
rcmod(result-6, cooked-13)
prep(cooked-13, at-14)
num(degrees-16, 60-15)
pobj(at-14, degrees-16)
prep(degrees-16, for-17)
num(hours-22, four-18)
cc(four-18, and-19)
det(half-21, a-20)
conj(four-18, half-21)
pobj(for-17, hours-22)


(ROOT
  (S (-LRB- -LRB-)
    (NP
      (NP (PRP$ His) (NN chicken))
      (SBAR
        (S
          (VP (VBZ is)
            (ADVP (RB also))
            (ADJP (JJR bigger))
            (SBAR (CC but)
              (S
                (NP (PRP I))
                (VP (VBP do) (RB n't)
                  (VP (VB know)
                    (NP
                      (NP (DT the) (NN timing))
                      (PP (IN for)
                        (NP (DT a) (CD 1.6) (NNP kg) (NN chicken) (-RRB- -RRB-))))))))))))
    (ADVP (RB Once)
      (NP (DT the) (NN chicken)))
    (VP (VBZ is)
      (VP (VBN cooked)
        (PP (TO to)
          (NP (CD 70) (NNS degrees)))))
    (, ,)))


poss(chicken-3, His-2)
nsubjpass(cooked-24, chicken-3)
cop(bigger-6, is-4)
advmod(bigger-6, also-5)
rcmod(chicken-3, bigger-6)
cc(know-11, but-7)
nsubj(know-11, I-8)
aux(know-11, do-9)
neg(know-11, n't-10)
ccomp(bigger-6, know-11)
det(timing-13, the-12)
dobj(know-11, timing-13)
prep(timing-13, for-14)
det(chicken-18, a-15)
num(chicken-18, 1.6-16)
nn(chicken-18, kg-17)
pobj(for-14, chicken-18)
advmod(cooked-24, Once-20)
det(chicken-22, the-21)
pobj(Once-20, chicken-22)
auxpass(cooked-24, is-23)
root(ROOT-0, cooked-24)
prep(cooked-24, to-25)
num(degrees-27, 70-26)
pobj(to-25, degrees-27)


(ROOT
  (S
    (VP
      (VP (VB remove)
        (NP (PRP it))
        (PP (IN from)
          (NP (DT the) (NN oven))))
      (CC and)
      (VP (VB let)
        (S
          (NP (PRP it))
          (NP
            (NP (NN rest)
              (CC and)
              (NN drain))
            (PP (IN of)
              (NP (PRP$ its) (NNS juices)))))))
    (. .)))


root(ROOT-0, remove-1)
dobj(remove-1, it-2)
prep(remove-1, from-3)
det(oven-5, the-4)
pobj(from-3, oven-5)
cc(remove-1, and-6)
conj(remove-1, let-7)
nsubj(rest-9, it-8)
xcomp(let-7, rest-9)
cc(rest-9, and-10)
conj(rest-9, drain-11)
prep(rest-9, of-12)
poss(juices-14, its-13)
pobj(of-12, juices-14)


(ROOT
  (PRN (-LRB- -LRB-)
    (ADJP
      (NP (RB about) (CD 15) (NNS mins))
      (CC or)
      (ADJP (JJR longer)))
    (-RRB- -RRB-)))


advmod(mins-4, about-2)
num(mins-4, 15-3)
root(ROOT-0, mins-4)
cc(mins-4, or-5)
conj(mins-4, longer-6)


(ROOT
  (S
    (NP (DT The) (NN skin))
    (VP (MD should)
      (ADVP (RB now))
      (VP (VB be)
        (ADJP (RB slightly) (JJ wrinkly))))
    (, ,)))


det(skin-2, The-1)
nsubj(wrinkly-7, skin-2)
aux(wrinkly-7, should-3)
advmod(wrinkly-7, now-4)
cop(wrinkly-7, be-5)
advmod(wrinkly-7, slightly-6)
root(ROOT-0, wrinkly-7)


(ROOT
  (FRAG
    (ADJP (JJ pale)
      (CC and)
      (JJ dry))
    (. .)))


root(ROOT-0, pale-1)
cc(pale-1, and-2)
conj(pale-1, dry-3)


(ROOT
  (S
    (ADVP (RB Now))
    (VP (VB heat)
      (PRT (RP up))
      (NP
        (NP (CD one) (NN inch))
        (PP (IN of)
          (NP
            (NP (NN vegetable) (NN oil))
            (PP (IN in)
              (NP
                (NP (DT a) (NN wok))
                (CC and)
                (NP
                  (NP (JJ shallow) (NN fry))
                  (NP
                    (NP (DT the) (NN chicken))
                    (PP (IN in)
                      (NP (DT the) (JJ hot) (NN oil)))))
                (, ,)))))))))


advmod(heat-2, Now-1)
root(ROOT-0, heat-2)
prt(heat-2, up-3)
num(inch-5, one-4)
dobj(heat-2, inch-5)
prep(inch-5, of-6)
nn(oil-8, vegetable-7)
pobj(of-6, oil-8)
prep(oil-8, in-9)
det(wok-11, a-10)
pobj(in-9, wok-11)
cc(wok-11, and-12)
amod(fry-14, shallow-13)
conj(wok-11, fry-14)
det(chicken-16, the-15)
dep(fry-14, chicken-16)
prep(chicken-16, in-17)
det(oil-20, the-18)
amod(oil-20, hot-19)
pobj(in-17, oil-20)


(ROOT
  (S
    (S
      (VP (VBG turning)
        (NP (DT the) (NN chicken))
        (PP (IN in)
          (NP (NN quarter)))))
    (VP (VBZ turns)
      (SBAR (IN until)
        (S
          (NP (DT the) (JJ whole) (NN chicken))
          (VP (VBZ turns)
            (PP (IN into)
              (NP (DT a) (JJ crispy) (NN bronze) (NN color)))))))
    (. .)))


csubj(turns-6, turning-1)
det(chicken-3, the-2)
dobj(turning-1, chicken-3)
prep(turning-1, in-4)
pobj(in-4, quarter-5)
root(ROOT-0, turns-6)
mark(turns-11, until-7)
det(chicken-10, the-8)
amod(chicken-10, whole-9)
nsubj(turns-11, chicken-10)
advcl(turns-6, turns-11)
prep(turns-11, into-12)
det(color-16, a-13)
amod(color-16, crispy-14)
nn(color-16, bronze-15)
pobj(into-12, color-16)


(ROOT
  (S
    (VP
      (VP (VB Chop)
        (PRT (RP up))
        (NP (DT the) (NN chicken)))
      (CC and)
      (VP (VB serve)
        (PP (IN with)
          (NP
            (NP (DT a) (NN mixture))
            (PP (IN of)
              (NP (NN pepper)
                (CC and)
                (NN salt)))))))
    (. .)))


root(ROOT-0, Chop-1)
prt(Chop-1, up-2)
det(chicken-4, the-3)
dobj(Chop-1, chicken-4)
cc(Chop-1, and-5)
conj(Chop-1, serve-6)
prep(serve-6, with-7)
det(mixture-9, a-8)
pobj(with-7, mixture-9)
prep(mixture-9, of-10)
pobj(of-10, pepper-11)
cc(pepper-11, and-12)
conj(pepper-11, salt-13)


(ROOT
  (S
    (NP (CD Option) (NNP B.) (CD 200) (NN degree))
    (VP (VBZ Chicken)
      (ADVP (RB Now)))
    (, ,)))


num(degree-4, Option-1)
nn(degree-4, B.-2)
num(degree-4, 200-3)
nsubj(Chicken-5, degree-4)
root(ROOT-0, Chicken-5)
advmod(Chicken-5, Now-6)


(ROOT
  (S
    (NP (PRP I))
    (VP (VBP know)
      (SBAR (IN that)
        (S
          (NP (JJS most) (NNPS Singaporeans))
          (VP (VBP are)
            (ADJP (RB very) (JJ busy))))))
    (, ,)))


nsubj(know-2, I-1)
root(ROOT-0, know-2)
mark(busy-8, that-3)
amod(Singaporeans-5, most-4)
nsubj(busy-8, Singaporeans-5)
cop(busy-8, are-6)
advmod(busy-8, very-7)
ccomp(know-2, busy-8)


(ROOT
  (FRAG
    (S (RB so)
      (VP (VBG cooking)
        (NP (NN chicken))
        (S
          (VP (VBG using)
            (NP (NN Option))))))))


advmod(cooking-2, so-1)
root(ROOT-0, cooking-2)
dobj(cooking-2, chicken-3)
xcomp(cooking-2, using-4)
dobj(using-4, Option-5)


(ROOT
  (S
    (NP (NNP A))
    (VP (MD might) (RB not)
      (VP (VB be)
        (ADJP (JJ practical))))
    (. .)))


nsubj(practical-5, A-1)
aux(practical-5, might-2)
neg(practical-5, not-3)
cop(practical-5, be-4)
root(ROOT-0, practical-5)


(ROOT
  (S (IN So)
    (NP (RB here))
    (VP (VBZ is)
      (NP (DT a) (JJR simpler) (NN method)))
    (. .)))


dep(method-6, So-1)
nsubj(method-6, here-2)
cop(method-6, is-3)
det(method-6, a-4)
amod(method-6, simpler-5)
root(ROOT-0, method-6)


(ROOT
  (FRAG
    (PP (IN After)
      (NP (JJ prepping) (DT the) (NN skin)))
    (, ,)))


root(ROOT-0, After-1)
amod(skin-4, prepping-2)
det(skin-4, the-3)
pobj(After-1, skin-4)


(ROOT
  (S
    (VP (VB pop)
      (NP (DT the) (JJ whole) (NN chicken))
      (PP (IN in)
        (NP (DT a) (CD 200) (NNS degrees) (NN oven))))
    (. .)))


root(ROOT-0, pop-1)
det(chicken-4, the-2)
amod(chicken-4, whole-3)
dobj(pop-1, chicken-4)
prep(pop-1, in-5)
det(oven-9, a-6)
num(oven-9, 200-7)
nn(oven-9, degrees-8)
pobj(in-5, oven-9)


(ROOT
  (S
    (S
      (NP (DT The) (NN chicken))
      (VP (MD will)
        (ADVP (RB only))
        (VP (VB take)
          (NP (CD 35) (NNS minutes))
          (S
            (VP (TO to)
              (VP (VB cook)
                (PRT (RP through))))))))
    (CC and)
    (S
      (NP (DT the) (NN flesh))
      (VP (MD will)
        (VP (VB reach)
          (NP
            (NP (DT a) (NN temperature))
            (PP (IN of)
              (NP (CD 70) (NNS degrees)))))))
    (. .)))


det(chicken-2, The-1)
nsubj(take-5, chicken-2)
aux(take-5, will-3)
advmod(take-5, only-4)
root(ROOT-0, take-5)
num(minutes-7, 35-6)
dobj(take-5, minutes-7)
aux(cook-9, to-8)
xcomp(take-5, cook-9)
prt(cook-9, through-10)
cc(take-5, and-11)
det(flesh-13, the-12)
nsubj(reach-15, flesh-13)
aux(reach-15, will-14)
conj(take-5, reach-15)
det(temperature-17, a-16)
dobj(reach-15, temperature-17)
prep(temperature-17, of-18)
num(degrees-20, 70-19)
pobj(of-18, degrees-20)


(ROOT
  (PRN (-LRB- -LRB-)
    (VP (VBN Start)
      (PP (IN with)
        (NP (NN chicken)))
      (PP (IN at)
        (NP (NN room) (NN temperature))))
    (-RRB- -RRB-)))


root(ROOT-0, Start-2)
prep(Start-2, with-3)
pobj(with-3, chicken-4)
prep(Start-2, at-5)
nn(temperature-7, room-6)
pobj(at-5, temperature-7)


(ROOT
  (S
    (NP (DT The) (NN skin))
    (VP (MD will)
      (ADVP (RB also))
      (VP (VB be)
        (VP (VBN browned)
          (SBAR (IN although)
            (S
              (NP (PRP it))
              (VP (VBZ is) (RB not)
                (ADJP (RB quite) (RB as) (JJ attractive))
                (SBAR (IN as)
                  (S
                    (NP
                      (NP (DT the) (NN chicken))
                      (PP (IN in)
                        (NP (NN Option) (NN A.))))
                    (ADVP (RB Just))
                    (VP (VB make)
                      (ADJP (JJ sure)
                        (SBAR
                          (S
                            (NP (PRP you))
                            (VP (VB remove)
                              (NP (DT the) (NN chicken))
                              (ADVP (RB quickly))
                              (SBAR (IN as)
                                (S
                                  (NP (PRP it))
                                  (VP (MD can)
                                    (ADVP (RB quickly))
                                    (VP (VB become)
                                      (ADJP (JJ dry)))))))))))))))))))
    (. .)))


det(skin-2, The-1)
nsubjpass(browned-6, skin-2)
aux(browned-6, will-3)
advmod(browned-6, also-4)
auxpass(browned-6, be-5)
root(ROOT-0, browned-6)
mark(attractive-13, although-7)
nsubj(attractive-13, it-8)
cop(attractive-13, is-9)
neg(attractive-13, not-10)
advmod(attractive-13, quite-11)
advmod(attractive-13, as-12)
advcl(browned-6, attractive-13)
mark(make-21, as-14)
det(chicken-16, the-15)
nsubj(make-21, chicken-16)
prep(chicken-16, in-17)
nn(A.-19, Option-18)
pobj(in-17, A.-19)
advmod(make-21, Just-20)
advcl(attractive-13, make-21)
acomp(make-21, sure-22)
nsubj(remove-24, you-23)
ccomp(sure-22, remove-24)
det(chicken-26, the-25)
dobj(remove-24, chicken-26)
advmod(remove-24, quickly-27)
mark(dry-33, as-28)
nsubj(dry-33, it-29)
aux(dry-33, can-30)
advmod(dry-33, quickly-31)
cop(dry-33, become-32)
advcl(remove-24, dry-33)


(ROOT
  (S
    (NP (DT The) (NN skin))
    (VP (MD will) (RB not)
      (VP (VB be)
        (ADJP (RB as) (JJ nice))))
    (, ,)))


det(skin-2, The-1)
nsubj(nice-7, skin-2)
aux(nice-7, will-3)
neg(nice-7, not-4)
cop(nice-7, be-5)
advmod(nice-7, as-6)
root(ROOT-0, nice-7)


(ROOT
  (UCP
    (ADJP (JJ crisp))
    (CC and)
    (VP
      (ADVP (RB evenly))
      (VBN browned)
      (PP (IN as)
        (NP (DT the) (JJ first) (NN method)))
      (, ,))))


root(ROOT-0, crisp-1)
cc(crisp-1, and-2)
advmod(browned-4, evenly-3)
conj(crisp-1, browned-4)
prep(browned-4, as-5)
det(method-8, the-6)
amod(method-8, first-7)
pobj(as-5, method-8)


(ROOT
  (S (CC but)
    (NP (PRP it))
    (ADVP (RB sure))
    (VP (VBZ saves)
      (NP
        (NP (DT a) (NN lot))
        (PP (IN of)
          (NP (NN time)
            (CC and)
            (NN effort)))))
    (. .)))


cc(saves-4, but-1)
nsubj(saves-4, it-2)
advmod(saves-4, sure-3)
root(ROOT-0, saves-4)
det(lot-6, a-5)
dobj(saves-4, lot-6)
prep(lot-6, of-7)
pobj(of-7, time-8)
cc(time-8, and-9)
conj(time-8, effort-10)


(ROOT
  (NP (VB Note) (: :)))


root(ROOT-0, Note-1)


(ROOT
  (FRAG
    (NP (CD 1))
    (. .)))


root(ROOT-0, 1-1)


(ROOT
  (S
    (NP (WDT Whatever))
    (VP (VBD method)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP use)))))
    (, ,)))


nsubj(method-2, Whatever-1)
root(ROOT-0, method-2)
nsubj(use-4, you-3)
ccomp(method-2, use-4)


(ROOT
  (S
    (VP (VB make)
      (ADJP
        (ADJP (JJ sure)
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBP rest)
                (NP
                  (NP (DT the) (NN chicken))
                  (PP (IN for)
                    (NP
                      (QP (IN at) (JJS least) (CD 15))
                      (NNS minutes))))
                (PP (IN before)
                  (S
                    (VP (VBG cutting)
                      (NP (PRP it))
                      (PRT (RP up)))))))))
        (SBAR (IN as)
          (S
            (NP (PRP it))
            (VP (MD will)
              (VP (VB allow)
                (S
                  (NP (DT the) (NNS juices))
                  (VP (TO to)
                    (VP (VB be)
                      (VP (VBN reabsorbed)
                        (PP (IN into)
                          (NP (DT the) (NN meat)))))))))))))
    (. .)))


root(ROOT-0, make-1)
acomp(make-1, sure-2)
nsubj(rest-4, you-3)
ccomp(sure-2, rest-4)
det(chicken-6, the-5)
dobj(rest-4, chicken-6)
prep(chicken-6, for-7)
quantmod(15-10, at-8)
mwe(at-8, least-9)
num(minutes-11, 15-10)
pobj(for-7, minutes-11)
prep(rest-4, before-12)
pcomp(before-12, cutting-13)
dobj(cutting-13, it-14)
prt(cutting-13, up-15)
mark(allow-19, as-16)
nsubj(allow-19, it-17)
aux(allow-19, will-18)
dep(sure-2, allow-19)
det(juices-21, the-20)
nsubjpass(reabsorbed-24, juices-21)
aux(reabsorbed-24, to-22)
auxpass(reabsorbed-24, be-23)
xcomp(allow-19, reabsorbed-24)
prep(reabsorbed-24, into-25)
det(meat-27, the-26)
pobj(into-25, meat-27)


(ROOT
  (FRAG
    (NP (CD 2))
    (. .)))


root(ROOT-0, 2-1)


(ROOT
  (S
    (NP (DT An) (JJ instant) (VBN read) (NN meat) (NN thermometer))
    (VP (VBZ is)
      (NP (DT an)
        (ADJP (RB extremely) (JJ useful))
        (NN device)))
    (. .)))


det(thermometer-5, An-1)
amod(thermometer-5, instant-2)
amod(thermometer-5, read-3)
nn(thermometer-5, meat-4)
nsubj(device-10, thermometer-5)
cop(device-10, is-6)
det(device-10, an-7)
advmod(useful-9, extremely-8)
amod(device-10, useful-9)
root(ROOT-0, device-10)


(ROOT
  (S
    (S
      (NP
        (NP (DT The) (JJ cooking) (NNS times))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VB publish)
              (ADVP (RB here))))))
      (VP (VBZ is)
        (VP (VBN based)
          (PP (IN on)
            (NP (PRP$ my) (NNP Ariston) (NNP Openspace) (NN oven))))))
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD may)
        (VP (VB need)
          (S
            (VP (TO to)
              (VP (VB adjust)
                (S
                  (NP (DT the) (NNS timings))
                  (VP (TO to)
                    (VP (VB suit)
                      (NP (PRP$ your) (JJ own) (NN home) (NN oven)))))))))))
    (. .)))


det(times-3, The-1)
amod(times-3, cooking-2)
nsubjpass(based-8, times-3)
nsubj(publish-5, I-4)
rcmod(times-3, publish-5)
advmod(publish-5, here-6)
auxpass(based-8, is-7)
root(ROOT-0, based-8)
prep(based-8, on-9)
poss(oven-13, my-10)
nn(oven-13, Ariston-11)
nn(oven-13, Openspace-12)
pobj(on-9, oven-13)
cc(based-8, and-14)
nsubj(need-17, you-15)
aux(need-17, may-16)
conj(based-8, need-17)
aux(adjust-19, to-18)
xcomp(need-17, adjust-19)
det(timings-21, the-20)
nsubj(suit-23, timings-21)
aux(suit-23, to-22)
xcomp(adjust-19, suit-23)
poss(oven-27, your-24)
amod(oven-27, own-25)
nn(oven-27, home-26)
dobj(suit-23, oven-27)


(ROOT
  (S
    (NP (DT The) (NN timing))
    (VP (VBZ is)
      (VP (VBN based)
        (PP (IN on)
          (NP
            (NP (DT the) (JJ standard) (CD 1.6) (NN kg) (NN chicken))
            (SBAR
              (S
                (NP (PRP you))
                (VP (VBP buy)
                  (PP (IN from)
                    (NP (DT the) (NNS supermarkets))))))))))
    (. .)))


det(timing-2, The-1)
nsubjpass(based-4, timing-2)
auxpass(based-4, is-3)
root(ROOT-0, based-4)
prep(based-4, on-5)
det(chicken-10, the-6)
amod(chicken-10, standard-7)
num(chicken-10, 1.6-8)
nn(chicken-10, kg-9)
pobj(on-5, chicken-10)
nsubj(buy-12, you-11)
rcmod(chicken-10, buy-12)
prep(buy-12, from-13)
det(supermarkets-15, the-14)
pobj(from-13, supermarkets-15)


(ROOT
  (FRAG
    (ADVP (RB So))
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP have)
          (NP (JJR bigger) (NNS chickens)))
        (, ,)))))


root(ROOT-0, So-1)
mark(have-4, if-2)
nsubj(have-4, you-3)
dep(So-1, have-4)
amod(chickens-6, bigger-5)
dobj(have-4, chickens-6)


(ROOT
  (S
    (NP (PRP you))
    (VP (MD would)
      (VP (VB need)
        (S
          (VP (TO to)
            (VP (VB adjust)
              (NP (DT the) (NN timing))
              (ADVP (RB accordingly)))))))
    (. .)))


nsubj(need-3, you-1)
aux(need-3, would-2)
root(ROOT-0, need-3)
aux(adjust-5, to-4)
xcomp(need-3, adjust-5)
det(timing-7, the-6)
dobj(adjust-5, timing-7)
advmod(adjust-5, accordingly-8)


(ROOT
  (S
    (NP
      (NP (DT The)
        (ADJP (RBS most) (JJ precise))
        (NN way))
      (PP (IN of)
        (S
          (VP (VBG doing)
            (NP (DT this))))))
    (VP (VBZ is)
      (PP (IN with)
        (NP (DT a) (NN meat) (NN thermometer))))
    (. !)))


det(way-4, The-1)
advmod(precise-3, most-2)
amod(way-4, precise-3)
nsubj(is-8, way-4)
prep(way-4, of-5)
pcomp(of-5, doing-6)
dobj(doing-6, this-7)
root(ROOT-0, is-8)
prep(is-8, with-9)
det(thermometer-12, a-10)
nn(thermometer-12, meat-11)
pobj(with-9, thermometer-12)


(ROOT
  (FRAG
    (ADVP (RB Definitely))
    (NP (DT a) (JJ good) (NN investment))
    (. !)))


dep(investment-4, Definitely-1)
det(investment-4, a-2)
amod(investment-4, good-3)
root(ROOT-0, investment-4)


(ROOT
  (FRAG
    (ADVP (RB Now))
    (ADVP (RB ,))))


root(ROOT-0, Now-1)


(ROOT
  (SBAR (IN while)
    (S
      (NP (PRP$ my) (NN chicken))
      (VP (VBZ is)
        (VP (VBG roasting)
          (PP (IN in)
            (NP (DT the) (JJ bottom) (NN compartment)))))
      (, ,))))


mark(roasting-5, while-1)
poss(chicken-3, my-2)
nsubj(roasting-5, chicken-3)
aux(roasting-5, is-4)
root(ROOT-0, roasting-5)
prep(roasting-5, in-6)
det(compartment-9, the-7)
amod(compartment-9, bottom-8)
pobj(in-6, compartment-9)


(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD can)
        (ADVP (RB still))
        (VP (VB use)
          (NP (DT the) (JJ upper) (NN compartment))
          (PP (TO to)
            (NP (NN grill)
              (CC or)
              (NN bake))))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN done)
          (NP (DT a) (JJ few) (NNS things))
          (PP (IN from)
            (NP
              (NP (VBG baking) (NN cornbread))
              (PP (TO to)
                (NP (NN potato) (NN dauphinoise))))))))
    (. .)))


nsubj(use-4, I-1)
aux(use-4, can-2)
advmod(use-4, still-3)
root(ROOT-0, use-4)
det(compartment-7, the-5)
amod(compartment-7, upper-6)
dobj(use-4, compartment-7)
prep(use-4, to-8)
pobj(to-8, grill-9)
cc(grill-9, or-10)
conj(grill-9, bake-11)
cc(use-4, and-12)
nsubj(done-15, I-13)
aux(done-15, have-14)
conj(use-4, done-15)
det(things-18, a-16)
amod(things-18, few-17)
dobj(done-15, things-18)
prep(done-15, from-19)
amod(cornbread-21, baking-20)
pobj(from-19, cornbread-21)
prep(cornbread-21, to-22)
nn(dauphinoise-24, potato-23)
pobj(to-22, dauphinoise-24)


(ROOT
  (SBAR (IN If)
    (S
      (NP (PRP you))
      (VP (VBP are)
        (ADJP (JJ interested)
          (PP (IN in)
            (ADJP (JJ cornbread)))))
      (, ,))))


mark(interested-4, If-1)
nsubj(interested-4, you-2)
cop(interested-4, are-3)
root(ROOT-0, interested-4)
prep(interested-4, in-5)
pobj(in-5, cornbread-6)


(ROOT
  (S
    (NP (PRP I))
    (VP (VBP use)
      (NP (DT the) (NN one))
      (PP (IN by)
        (NP
          (NP
            (NP (NNP Mark) (NNP Bittman))
            (-LRB- -LRB-)
            (NP (JJR lighter) (NN version))
            (-RRB- -RRB-))
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (MD can)
                (VP (VB be)
                  (VP (VBN found)
                    (ADVP (RB here))))))))))
    (. .)))


nsubj(use-2, I-1)
root(ROOT-0, use-2)
det(one-4, the-3)
dobj(use-2, one-4)
prep(use-2, by-5)
nn(Bittman-7, Mark-6)
pobj(by-5, Bittman-7)
amod(version-10, lighter-9)
dep(Bittman-7, version-10)
nsubjpass(found-15, which-12)
aux(found-15, can-13)
auxpass(found-15, be-14)
rcmod(Bittman-7, found-15)
advmod(found-15, here-16)


(ROOT
  (S
    (S
      (NP (NNP Conclusion) (NNP My) (NNP Roast) (NNP Chicken))
      (VP (VBZ is)
        (ADVP (RB still))
        (ADVP (RB far)
          (PP (IN from)
            (ADJP (JJ perfect))))))
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (ADJP (RB quite) (VBN pleased)
          (PP (IN with)
            (NP (DT the) (NNP Chiffon) (NN Tin) (NN roasting) (NN technique)))
          (SBAR (IN as)
            (S
              (NP (PRP it))
              (VP
                (VP (VBZ helps)
                  (S
                    (VP (TO to)
                      (VP (VB cut)
                        (NP (JJ cooking) (NN time))))))
                (CC and)
                (VP (VBZ prevents)
                  (NP (DT the) (NN chicken))
                  (PP (IN from)
                    (S
                      (VP (VBG drying)
                        (PRT (RP out))))))))))))
    (. .)))


nn(Chicken-4, Conclusion-1)
nn(Chicken-4, My-2)
nn(Chicken-4, Roast-3)
nsubj(is-5, Chicken-4)
root(ROOT-0, is-5)
advmod(is-5, still-6)
advmod(is-5, far-7)
prep(far-7, from-8)
pobj(from-8, perfect-9)
cc(is-5, but-10)
nsubjpass(pleased-14, I-11)
auxpass(pleased-14, am-12)
advmod(pleased-14, quite-13)
conj(is-5, pleased-14)
prep(pleased-14, with-15)
det(technique-20, the-16)
nn(technique-20, Chiffon-17)
nn(technique-20, Tin-18)
nn(technique-20, roasting-19)
pobj(with-15, technique-20)
mark(helps-23, as-21)
nsubj(helps-23, it-22)
dep(pleased-14, helps-23)
aux(cut-25, to-24)
xcomp(helps-23, cut-25)
amod(time-27, cooking-26)
dobj(cut-25, time-27)
cc(helps-23, and-28)
conj(helps-23, prevents-29)
det(chicken-31, the-30)
dobj(prevents-29, chicken-31)
prep(prevents-29, from-32)
pcomp(from-32, drying-33)
prt(drying-33, out-34)


(ROOT
  (S
    (NP (NNP Do))
    (VP (VBP give)
      (SBAR
        (S
          (NP (PRP it) (DT a))
          (VP (VBP go)
            (CC and)
            (VBP share)
            (NP
              (NP (DT some))
              (PP (IN of)
                (NP (PRP$ your) (NNS recipes))))
            (PP
              (ADVP (RB here))
              (IN with)
              (NP
                (NP (DT the) (NN rest))
                (PP (IN of)
                  (NP (PRP$ our) (NNS readers)))))))))
    (. !)))


nsubj(give-2, Do-1)
root(ROOT-0, give-2)
nsubj(go-5, it-3)
dep(it-3, a-4)
ccomp(give-2, go-5)
cc(go-5, and-6)
conj(go-5, share-7)
dobj(go-5, some-8)
prep(some-8, of-9)
poss(recipes-11, your-10)
pobj(of-9, recipes-11)
advmod(with-13, here-12)
prep(go-5, with-13)
det(rest-15, the-14)
pobj(with-13, rest-15)
prep(rest-15, of-16)
poss(readers-18, our-17)
pobj(of-16, readers-18)


(ROOT
  (S
    (NP
      (NP (JJ Special) (NN Deal))
      (PP (IN for)
        (NP
          (NP (NNP Ariston) (NNP OpenSpace) (NNP Ovens))
          (PP (IN for)
            (NP (JJ ieatishootipost) (NNS readers))))))
    (VP
      (VP (VBD Print)
        (PRT (RP out))
        (NP (DT the) (NN coupon)))
      (CC and)
      (VP (VBP enjoy)
        (NP (CD 20) (NN %))))))


amod(Deal-2, Special-1)
nsubj(Print-10, Deal-2)
prep(Deal-2, for-3)
nn(Ovens-6, Ariston-4)
nn(Ovens-6, OpenSpace-5)
pobj(for-3, Ovens-6)
prep(Ovens-6, for-7)
amod(readers-9, ieatishootipost-8)
pobj(for-7, readers-9)
root(ROOT-0, Print-10)
prt(Print-10, out-11)
det(coupon-13, the-12)
dobj(Print-10, coupon-13)
cc(Print-10, and-14)
conj(Print-10, enjoy-15)
num(%-17, 20-16)
dobj(enjoy-15, %-17)


(ROOT
  (PP (IN off)
    (NP (DT the) (NNP Ariston) (NNP Openspace) (NNP Oven) (NNP -LRB-))))


det(-LRB--6, the-2)
nn(-LRB--6, Ariston-3)
nn(-LRB--6, Openspace-4)
nn(-LRB--6, Oven-5)


(ROOT
  (NP
    (NP (DT The) (NN one))
    (VP (VBN featured)
      (PP (IN in)
        (NP
          (NP (DT this) (NN post) (-RRB- -RRB-) (NN plus))
          (NP (DT a) (JJ free) (NNP KitchenAid) (NN Cookbook) (NN worth)))))
    (X (SYM $))))


det(one-2, The-1)
root(ROOT-0, one-2)
partmod(one-2, featured-3)
prep(featured-3, in-4)
det(plus-8, this-5)
nn(plus-8, post-6)
pobj(in-4, plus-8)
det(worth-13, a-9)
amod(worth-13, free-10)
nn(worth-13, KitchenAid-11)
nn(worth-13, Cookbook-12)
dep(plus-8, worth-13)
dep(one-2, $-14)


(ROOT
  (NP
    (NP (CD 69)
      (CC and)
      (CD 2))
    (VP (VBG baking)
      (NP (NNS classes)))
    (. .)))


root(ROOT-0, 69-1)
cc(69-1, and-2)
conj(69-1, 2-3)
partmod(69-1, baking-4)
dobj(baking-4, classes-5)


(ROOT
  (S
    (NP (NN Offer))
    (VP (VBD valid)
      (PP (IN till)
        (NP (CD 31)))
      (NP (NNP Jan) (CD 2011)))
    (. .)))


nsubj(valid-2, Offer-1)
root(ROOT-0, valid-2)
prep(valid-2, till-3)
pobj(till-3, 31-4)
dobj(valid-2, Jan-5)
num(Jan-5, 2011-6)


(ROOT
  (NP (JJ Happy) (NN Roasting) (. !)))


amod(Roasting-2, Happy-1)
root(ROOT-0, Roasting-2)


