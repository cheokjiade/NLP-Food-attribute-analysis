(ROOT
  (S
    (NP (PRP I))
    (VP (VBP guess)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (NP
              (NP (NN part))
              (PP (IN of)
                (NP (DT the) (NNP Singaporean) (NN character)))
              (S
                (VP (TO to)
                  (VP (VB look)
                    (PP (IN for)
                      (NP
                        (NP (NNS things))
                        (SBAR
                          (WHNP (WDT that))
                          (S
                            (VP (VBP are)
                              (ADJP (JJ cheap)
                                (CC and)
                                (JJ good)))))))))))))))
    (. .)))


nsubj(guess-2, I-1)
root(ROOT-0, guess-2)
nsubj(part-5, it-3)
cop(part-5, is-4)
ccomp(guess-2, part-5)
prep(part-5, of-6)
det(character-9, the-7)
nn(character-9, Singaporean-8)
pobj(of-6, character-9)
aux(look-11, to-10)
infmod(part-5, look-11)
prep(look-11, for-12)
pobj(for-12, things-13)
nsubj(cheap-16, that-14)
cop(cheap-16, are-15)
rcmod(things-13, cheap-16)
cc(cheap-16, and-17)
conj(cheap-16, good-18)


(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (ADJP (RB especially) (JJ true))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP it))
          (VP (VBZ comes)
            (PP (TO to)
              (NP (NN food)))))))
    (. .)))


nsubj(true-4, This-1)
cop(true-4, is-2)
advmod(true-4, especially-3)
root(ROOT-0, true-4)
advmod(comes-7, when-5)
nsubj(comes-7, it-6)
advcl(true-4, comes-7)
prep(comes-7, to-8)
pobj(to-8, food-9)


(ROOT
  (FRAG
    (ADVP (RB However))
    (ADVP (RB ,))))


root(ROOT-0, However-1)


(ROOT
  (S
    (NP (JJ many) (NNS foodies))
    (VP (VBP are)
      (ADVP (RB also))
      (ADJP (JJ ready)
        (S
          (VP (TO to)
            (VP (VB fork)
              (PRT (RP out))
              (NP (PRP$ their) (NN cash))))))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP they))
          (VP (VBP come)
            (PP (IN across)
              (NP
                (ADJP (RB really) (JJ good))
                (NN food)))))))
    (. .)))


amod(foodies-2, many-1)
nsubj(ready-5, foodies-2)
cop(ready-5, are-3)
advmod(ready-5, also-4)
root(ROOT-0, ready-5)
aux(fork-7, to-6)
xcomp(ready-5, fork-7)
prt(fork-7, out-8)
poss(cash-10, their-9)
dobj(fork-7, cash-10)
advmod(come-13, when-11)
nsubj(come-13, they-12)
advcl(ready-5, come-13)
prep(come-13, across-14)
advmod(good-16, really-15)
amod(food-17, good-16)
pobj(across-14, food-17)


(ROOT
  (S
    (S
      (NP (DT The) (NN fact))
      (VP (VBZ is)
        (SBAR (IN that)
          (S
            (NP (DT the) (`` ``) (NNP Good) ('' ''))
            (VP (VBZ is) (RB not)
              (ADJP (JJ cheap)))))))
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (VP (VBN compounded)
          (PP (IN by)
            (NP (DT the) (NN fact)))
          (SBAR (IN that)
            (S
              (NP (DT the) (`` ``) (NN Cheap) ('' ''))
              (VP (VBZ is) (RB not)
                (ADJP (RB as) (JJ good)
                  (PP (IN as)
                    (NP
                      (NP (DT the) (`` ``) (NNP Good) ('' ''))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBZ is) (RB not)
                            (ADJP (JJ cheap))))))))))))))
    (. .)))


det(fact-2, The-1)
nsubj(is-3, fact-2)
root(ROOT-0, is-3)
mark(cheap-11, that-4)
det(Good-7, the-5)
nsubj(cheap-11, Good-7)
cop(cheap-11, is-9)
neg(cheap-11, not-10)
ccomp(is-3, cheap-11)
cc(is-3, and-12)
nsubjpass(compounded-15, it-13)
auxpass(compounded-15, is-14)
conj(is-3, compounded-15)
prep(compounded-15, by-16)
det(fact-18, the-17)
pobj(by-16, fact-18)
mark(good-27, that-19)
det(Cheap-22, the-20)
nsubj(good-27, Cheap-22)
cop(good-27, is-24)
neg(good-27, not-25)
advmod(good-27, as-26)
ccomp(compounded-15, good-27)
prep(good-27, as-28)
det(Good-31, the-29)
pobj(as-28, Good-31)
nsubj(cheap-36, that-33)
cop(cheap-36, is-34)
neg(cheap-36, not-35)
rcmod(Good-31, cheap-36)


(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (ADVP (RB only))
      (NP
        (NP (DT a) (NN handful))
        (PP (IN of)
          (NP
            (NP (NNS hawkers))
            (PP (IN in)
              (NP (NNP Singapore)))))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (MD can)
              (ADVP (RB actually))
              (VP (VB command)
                (NP
                  (NP (JJ such) (VBG unquestioning) (NN allegiance))
                  (PP (IN from)
                    (NP (PRP$ their) (NNS customers))))))))))
    (. .)))


expl(are-2, There-1)
root(ROOT-0, are-2)
advmod(are-2, only-3)
det(handful-5, a-4)
nsubj(are-2, handful-5)
prep(handful-5, of-6)
pobj(of-6, hawkers-7)
prep(hawkers-7, in-8)
pobj(in-8, Singapore-9)
nsubj(command-13, who-10)
aux(command-13, can-11)
advmod(command-13, actually-12)
rcmod(handful-5, command-13)
amod(allegiance-16, such-14)
amod(allegiance-16, unquestioning-15)
dobj(command-13, allegiance-16)
prep(allegiance-16, from-17)
poss(customers-19, their-18)
pobj(from-17, customers-19)


(ROOT
  (S
    (NP (PRP$ Their) (NN food))
    (VP (VBZ is)
      (ADJP (RB so) (JJ good))
      (SBAR (IN that)
        (S
          (NP (PRP$ their) (NNS customers))
          (VP (VBP do) (RB n't)
            (VP
              (VP (VB mind)
                (S
                  (VP (VBG paying)
                    (NP (DT the) (NN premium)))))
              (CONJP (RB as) (RB well) (IN as))
              (VP (VB suffer)
                (NP (JJ potential) (JJ verbal) (NN abuse))
                (SBAR (IN in) (NN order)
                  (S
                    (VP (TO to)
                      (VP (VB have)
                        (NP
                          (NP (PRP$ their) (NN taste) (NNS buds))
                          (VP (VBN tickled)))))))))))))
    (. .)))


poss(food-2, Their-1)
nsubj(good-5, food-2)
cop(good-5, is-3)
advmod(good-5, so-4)
root(ROOT-0, good-5)
mark(mind-11, that-6)
poss(customers-8, their-7)
nsubj(mind-11, customers-8)
aux(mind-11, do-9)
neg(mind-11, n't-10)
ccomp(good-5, mind-11)
xcomp(mind-11, paying-12)
det(premium-14, the-13)
dobj(paying-12, premium-14)
advmod(well-16, as-15)
cc(mind-11, well-16)
mwe(well-16, as-17)
conj(mind-11, suffer-18)
amod(abuse-21, potential-19)
amod(abuse-21, verbal-20)
dobj(suffer-18, abuse-21)
mark(have-25, in-22)
dep(have-25, order-23)
aux(have-25, to-24)
advcl(suffer-18, have-25)
poss(buds-28, their-26)
nn(buds-28, taste-27)
dobj(have-25, buds-28)
partmod(buds-28, tickled-29)


(ROOT
  (PP (VBG According)
    (PP (TO to)
      (NP
        (NP (NNP Damien))
        (, ,)))))


root(ROOT-0, According-1)
pcomp(According-1, to-2)
pobj(to-2, Damien-3)


(ROOT
  (S
    (NP (DT this))
    (VP (VBZ is)
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP (PRP them)))))
    (. .)))


nsubj(one-3, this-1)
cop(one-3, is-2)
root(ROOT-0, one-3)
prep(one-3, of-4)
pobj(of-4, them-5)


(ROOT
  (S
    (NP (PRP I))
    (VP (VBD was)
      (PP (IN of)
        (NP (NN course)))
      (ADJP (JJ skeptical)))
    (. .)))


nsubj(skeptical-5, I-1)
cop(skeptical-5, was-2)
prep(skeptical-5, of-3)
pobj(of-3, course-4)
root(ROOT-0, skeptical-5)


(ROOT
  (SBARQ
    (WHADJP (WRB How) (JJ good))
    (SQ (MD can)
      (NP (JJ braised) (NN duck))
      (VP
        (ADVP (RB really))
        (VB get)))
    (. ?)))


advmod(good-2, How-1)
dep(get-7, good-2)
aux(get-7, can-3)
amod(duck-5, braised-4)
nsubj(get-7, duck-5)
advmod(get-7, really-6)
root(ROOT-0, get-7)


(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (ADVP (RB yet))
      (S
        (VP (TO to)
          (VP (VB find)
            (NP (DT a) (JJ braised) (NN duck))
            (SBAR (IN that)
              (S
                (NP (PRP I))
                (VP (MD could)
                  (VP (VB have)
                    (NP (DT a) (NN craving))
                    (PP (IN for))))))))))
    (. .)))


nsubj(have-2, I-1)
root(ROOT-0, have-2)
advmod(have-2, yet-3)
aux(find-5, to-4)
xcomp(have-2, find-5)
det(duck-8, a-6)
amod(duck-8, braised-7)
dobj(find-5, duck-8)
mark(have-12, that-9)
nsubj(have-12, I-10)
aux(have-12, could-11)
ccomp(find-5, have-12)
det(craving-14, a-13)
dobj(have-12, craving-14)
prep(have-12, for-15)


(ROOT
  (FRAG
    (PP (IN Well))
    (, ,)))


root(ROOT-0, Well-1)


(ROOT
  (S
    (NP (PDT all) (DT that))
    (VP (VBZ is)
      (VP (IN about)
        (S
          (VP (TO to)
            (VP (VB change))))))
    (. .)))


predet(that-2, all-1)
nsubj(about-4, that-2)
aux(about-4, is-3)
root(ROOT-0, about-4)
aux(change-6, to-5)
xcomp(about-4, change-6)


(ROOT
  (S
    (NP (DT The) (NN duck))
    (ADVP (RB here))
    (VP (VBZ is)
      (ADVP (RB actually))
      (ADJP (RB very) (JJ enjoyable)))
    (. .)))


det(duck-2, The-1)
nsubj(enjoyable-7, duck-2)
advmod(enjoyable-7, here-3)
cop(enjoyable-7, is-4)
advmod(enjoyable-7, actually-5)
advmod(enjoyable-7, very-6)
root(ROOT-0, enjoyable-7)


(ROOT
  (S
    (NP (DT The) (NN meat))
    (VP (VBD was)
      (NP
        (NP (NN moist)
          (CC and)
          (NN tender))
        (CC and)
        (NP (DT the) (JJ unique))))
    (, ,)))


det(meat-2, The-1)
nsubj(moist-4, meat-2)
cop(moist-4, was-3)
root(ROOT-0, moist-4)
cc(moist-4, and-5)
conj(moist-4, tender-6)
cc(moist-4, and-7)
det(unique-9, the-8)
conj(moist-4, unique-9)


(ROOT
  (S
    (NP (JJ sweet) (NN vinegar) (NNS chilli))
    (VP (VBD was)
      (NP
        (NP (DT the) (JJ perfect) (NN accompaniment))
        (PP (IN for)
          (NP (DT the) (NN duck)))))
    (. .)))


amod(chilli-3, sweet-1)
nn(chilli-3, vinegar-2)
nsubj(accompaniment-7, chilli-3)
cop(accompaniment-7, was-4)
det(accompaniment-7, the-5)
amod(accompaniment-7, perfect-6)
root(ROOT-0, accompaniment-7)
prep(accompaniment-7, for-8)
det(duck-10, the-9)
pobj(for-8, duck-10)


(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (ADVP (RB actually))
      (ADJP (RB quite) (JJ shiok)))
    (. !)))


nsubj(shiok-5, It-1)
cop(shiok-5, was-2)
advmod(shiok-5, actually-3)
advmod(shiok-5, quite-4)
root(ROOT-0, shiok-5)


(ROOT
  (FRAG
    (PP (IN Just)
      (NP (CD one) (NN problem)))
    (, ,)))


root(ROOT-0, Just-1)
num(problem-3, one-2)
pobj(Just-1, problem-3)


(ROOT
  (NP
    (NP (DT the) (NN plate))
    (NP
      (NP (JJ small) (NN plate))
      (PP (IN of)
        (NP
          (ADJP (RB thinly) (JJ sliced))
          (NN duck) (NNS costs))))
    (NP (NNP $))))


det(plate-2, the-1)
root(ROOT-0, plate-2)
amod(plate-4, small-3)
dep(plate-2, plate-4)
prep(plate-4, of-5)
advmod(sliced-7, thinly-6)
amod(costs-9, sliced-7)
nn(costs-9, duck-8)
pobj(of-5, costs-9)
dep(plate-2, $-10)


(ROOT
  (UCP
    (NP (CD 5))
    (CC and)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP go)
          (PP (IN during)
            (NP (JJ peak) (NNS periods))))
        (, ,)))))


root(ROOT-0, 5-1)
cc(5-1, and-2)
mark(go-5, if-3)
nsubj(go-5, you-4)
conj(5-1, go-5)
prep(go-5, during-6)
amod(periods-8, peak-7)
pobj(during-6, periods-8)


(ROOT
  (S
    (NP (DT the) (NN wait))
    (VP (MD can)
      (VP (VB be)
        (ADJP (RB pretty) (JJ long))))
    (. .)))


det(wait-2, the-1)
nsubj(long-6, wait-2)
aux(long-6, can-3)
cop(long-6, be-4)
advmod(long-6, pretty-5)
root(ROOT-0, long-6)


(ROOT
  (SINV
    (ADJP (RB Really) (JJ nice))
    (VP (VBD braised)
      (NP (NN duck))
      (PP (IN with)
        (NP (DT a) (NN shiok))))
    (NP (CD chilli) (NN sauce) (NN dip))
    (. .)))


advmod(nice-2, Really-1)
dep(braised-3, nice-2)
root(ROOT-0, braised-3)
dobj(braised-3, duck-4)
prep(braised-3, with-5)
det(shiok-7, a-6)
pobj(with-5, shiok-7)
num(dip-10, chilli-8)
nn(dip-10, sauce-9)
nsubj(braised-3, dip-10)


(ROOT
  (ADJP
    (ADJP (JJ Good))
    (RB enough)
    (S
      (VP (TO to)
        (VP (VB get)
          (S
            (NP (PRP me))
            (VP (VBG thinking)
              (PP (IN about)
                (S
                  (VP (VBG traveling)
                    (NP (PDT all) (DT the) (NN way))
                    (PP (IN out)
                      (NP (NNP West)))
                    (S
                      (VP (TO to)
                        (VP (VB eat)
                          (NP (PRP it))))))
                  (, ,))))))))))


root(ROOT-0, Good-1)
advmod(Good-1, enough-2)
aux(get-4, to-3)
xcomp(Good-1, get-4)
nsubj(thinking-6, me-5)
dep(get-4, thinking-6)
prep(thinking-6, about-7)
pcomp(about-7, traveling-8)
predet(way-11, all-9)
det(way-11, the-10)
dobj(traveling-8, way-11)
prep(traveling-8, out-12)
pobj(out-12, West-13)
aux(eat-15, to-14)
xcomp(traveling-8, eat-15)
dobj(eat-15, it-16)


(ROOT
  (S (CC but)
    (NP (RB not) (PDT quite) (DT that) (JJ good))
    (ADVP (RB enough)
      (PP (IN for)
        (NP (PRP me))))
    (VP
      (VP (VB pay)
        (NP (DT a) (NN premium)))
      (CC and)
      (VP
        (ADVP (RB still))
        (VB suffer)
        (NP (DT a) (JJ long) (NN queue))
        (PP (IN for))))
    (. .)))


cc(pay-9, but-1)
neg(good-5, not-2)
predet(good-5, quite-3)
det(good-5, that-4)
nsubj(pay-9, good-5)
advmod(pay-9, enough-6)
prep(enough-6, for-7)
pobj(for-7, me-8)
root(ROOT-0, pay-9)
det(premium-11, a-10)
dobj(pay-9, premium-11)
cc(pay-9, and-12)
advmod(suffer-14, still-13)
conj(pay-9, suffer-14)
det(queue-17, a-15)
amod(queue-17, long-16)
dobj(suffer-14, queue-17)
prep(suffer-14, for-18)


