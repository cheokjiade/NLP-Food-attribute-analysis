(ROOT
  (S
    (NP (PRP It))
    (ADVP (RB just))
    (VP (VBZ goes)
      (S
        (VP (TO to)
          (VP (VB show)
            (SBAR (IN that)
              (S
                (NP (PRP you))
                (ADVP (RB just))
                (VP (VBP need)
                  (S
                    (VP (TO to)
                      (VP
                        (VP (VB think)
                          (PRT (RP out))
                          (PP (IN of)
                            (NP
                              (NP (DT the) (NN box))
                              (NP (DT a) (JJ little)))))
                        (CC and)
                        (VP (VB differentiate)
                          (NP (PRP$ your) (NN product))
                          (PP (IN from)
                            (NP (DT the) (NNS others)))
                          (S
                            (VP (TO to)
                              (VP (VB be)
                                (ADJP (JJ successful))))))))))))))))
    (. .)))


nsubj(goes-3, It-1)
advmod(goes-3, just-2)
root(ROOT-0, goes-3)
aux(show-5, to-4)
xcomp(goes-3, show-5)
mark(need-9, that-6)
nsubj(need-9, you-7)
advmod(need-9, just-8)
ccomp(show-5, need-9)
aux(think-11, to-10)
xcomp(need-9, think-11)
prt(think-11, out-12)
prep(think-11, of-13)
det(box-15, the-14)
pobj(of-13, box-15)
det(little-17, a-16)
dep(box-15, little-17)
cc(think-11, and-18)
conj(think-11, differentiate-19)
poss(product-21, your-20)
dobj(differentiate-19, product-21)
prep(differentiate-19, from-22)
det(others-24, the-23)
pobj(from-22, others-24)
aux(successful-27, to-25)
cop(successful-27, be-26)
xcomp(differentiate-19, successful-27)


(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (ADVP (RB always))
      (VP (VBN wondered)
        (SBAR
          (WHADVP (WRB why))
          (FRAG
            (PP (IN in)
              (NP (DT every) (NNP Food) (NNP Centre)))))
        (, ,)))))


nsubj(wondered-4, I-1)
aux(wondered-4, have-2)
advmod(wondered-4, always-3)
root(ROOT-0, wondered-4)
advmod(in-6, why-5)
advcl(wondered-4, in-6)
det(Centre-9, every-7)
nn(Centre-9, Food-8)
pobj(in-6, Centre-9)


(ROOT
  (S
    (NP (EX there))
    (VP (VBP are)
      (NP
        (NP (DT a) (JJ few) (NNS hawkers))
        (VP (VBG trying)
          (S
            (VP
              (VP (TO to)
                (VP (VB sell)
                  (NP (DT the) (JJ same) (NN thing))))
              (CC and)
              (ADVP (RB no)
                (NP (CD one) (NNS bothers)))
              (VP (TO to)
                (VP (VB try)
                  (S
                    (VP (TO to)
                      (VP (VB differentiate)
                        (NP (PRP$ their) (NN product))))))))))))
    (. .)))


expl(are-2, there-1)
root(ROOT-0, are-2)
det(hawkers-5, a-3)
amod(hawkers-5, few-4)
nsubj(are-2, hawkers-5)
partmod(hawkers-5, trying-6)
aux(sell-8, to-7)
ccomp(trying-6, sell-8)
det(thing-11, the-9)
amod(thing-11, same-10)
dobj(sell-8, thing-11)
cc(sell-8, and-12)
advmod(sell-8, no-13)
num(bothers-15, one-14)
pobj(no-13, bothers-15)
aux(try-17, to-16)
conj(sell-8, try-17)
aux(differentiate-19, to-18)
xcomp(try-17, differentiate-19)
poss(product-21, their-20)
dobj(differentiate-19, product-21)


(ROOT
  (S
    (NP
      (NP (DT The) (JJS best) (NN example))
      (SBAR
        (S
          (NP (PRP I))
          (VP (MD can)
            (VP (VB think)
              (PP (IN of)))))))
    (VP (VBZ is)
      (NP
        (NP (NNP Satay))
        (PP (IN at)
          (NP
            (NP (NNS places))
            (PP (JJ such) (IN as)
              (NP (NNP Lao) (NNP Pa) (NNP Sat) (, ,)))))))))


det(example-3, The-1)
amod(example-3, best-2)
nsubj(Satay-9, example-3)
nsubj(think-6, I-4)
aux(think-6, can-5)
rcmod(example-3, think-6)
prep(think-6, of-7)
cop(Satay-9, is-8)
root(ROOT-0, Satay-9)
prep(Satay-9, at-10)
pobj(at-10, places-11)
mwe(as-13, such-12)
prep(places-11, as-13)
nn(Sat-16, Lao-14)
nn(Sat-16, Pa-15)
pobj(as-13, Sat-16)


(ROOT
  (S
    (NP (NNP East) (NNP Coast))
    (VP (VBZ Lagoon)
      (NP
        (NP (NNP Food) (NNP Village))
        (CC and)
        (NP (NNP Clarke) (NNP Quay))))
    (. .)))


nn(Coast-2, East-1)
nsubj(Lagoon-3, Coast-2)
root(ROOT-0, Lagoon-3)
nn(Village-5, Food-4)
dobj(Lagoon-3, Village-5)
cc(Village-5, and-6)
nn(Quay-8, Clarke-7)
conj(Village-5, Quay-8)


(ROOT
  (S
    (NP (PRP You))
    (VP (VBP get)
      (SBAR
        (S
          (NP
            (NP (RB there))
            (CC and)
            (NP (PDT all) (DT the) (NN Satay)))
          (VP (VBZ looks)
            (NP (DT the) (JJ same))))))
    (, ,)))


nsubj(get-2, You-1)
root(ROOT-0, get-2)
nsubj(looks-8, there-3)
cc(there-3, and-4)
predet(Satay-7, all-5)
det(Satay-7, the-6)
conj(there-3, Satay-7)
ccomp(get-2, looks-8)
det(same-10, the-9)
dobj(looks-8, same-10)


(ROOT
  (FRAG
    (ADVP (RB so))
    (SBAR
      (WHNP (WDT which))
      (S
        (NP (PRP one))
        (VP (TO to)
          (VP (VB pick)))))
    (. ?)))


root(ROOT-0, so-1)
dobj(pick-5, which-2)
nsubj(pick-5, one-3)
aux(pick-5, to-4)
dep(so-1, pick-5)


(ROOT
  (FRAG
    (ADVP (RB Back)
      (PP (TO to)
        (NP
          (NP (DT the) (NN subject))
          (PP (IN of)
            (NP (NNP Sour) (NNP Sop))))))
    (. .)))


root(ROOT-0, Back-1)
prep(Back-1, to-2)
det(subject-4, the-3)
pobj(to-2, subject-4)
prep(subject-4, of-5)
nn(Sop-7, Sour-6)
pobj(of-5, Sop-7)


(ROOT
  (S
    (NP (DT This) (NN seller))
    (VP (VBD was)
      (ADVP (RB originally))
      (VP (VBG selling)
        (NP (NN sugar) (NN cane))))
    (, ,)))


det(seller-2, This-1)
nsubj(selling-5, seller-2)
aux(selling-5, was-3)
advmod(selling-5, originally-4)
root(ROOT-0, selling-5)
nn(cane-7, sugar-6)
dobj(selling-5, cane-7)


(ROOT
  (S (CC but)
    (VP (VBD decided)
      (S
        (VP (TO to)
          (VP (VB differentiate)
            (PP (IN by)
              (S
                (VP (VBG selling)
                  (NP (NN soursop))
                  (ADVP (RB instead)))))))))
    (. .)))


cc(decided-2, but-1)
root(ROOT-0, decided-2)
aux(differentiate-4, to-3)
xcomp(decided-2, differentiate-4)
prep(differentiate-4, by-5)
pcomp(by-5, selling-6)
dobj(selling-6, soursop-7)
advmod(selling-6, instead-8)


(ROOT
  (S (RB Then)
    (NP (PRP he))
    (VP (VBD came)
      (PRT (RP up))
      (PP (IN with)
        (NP
          (NP (DT an) (NN ice) (JJ blended) (NN version))
          (PP (IN of)
            (NP (DT the) (JJ original) (NN soursop) (NN drink)))))
      (SBAR (IN because)
        (S
          (NP (PRP he))
          (VP (VBD said)
            (SBAR (IN that)
              (S
                (NP
                  (NP (NNS people))
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (VB take)
                        (PRT (RP away))
                        (NP (DT the) (JJ original) (NN drink))))))
                (VP (VBD had)
                  (NP
                    (NP (NN trouble))
                    (VP (VBG trying)
                      (S
                        (VP (TO to)
                          (VP (VB drink)
                            (NP (PRP it))
                            (PP (IN while)
                              (NP (VBG driving)))))))))))))))
    (. .)))


advmod(came-3, Then-1)
nsubj(came-3, he-2)
root(ROOT-0, came-3)
prt(came-3, up-4)
prep(came-3, with-5)
det(version-9, an-6)
nn(version-9, ice-7)
amod(version-9, blended-8)
pobj(with-5, version-9)
prep(version-9, of-10)
det(drink-14, the-11)
amod(drink-14, original-12)
nn(drink-14, soursop-13)
pobj(of-10, drink-14)
mark(said-17, because-15)
nsubj(said-17, he-16)
advcl(came-3, said-17)
mark(had-26, that-18)
nsubj(had-26, people-19)
nsubj(take-21, who-20)
rcmod(people-19, take-21)
prt(take-21, away-22)
det(drink-25, the-23)
amod(drink-25, original-24)
dobj(take-21, drink-25)
ccomp(said-17, had-26)
dobj(had-26, trouble-27)
partmod(trouble-27, trying-28)
aux(drink-30, to-29)
xcomp(trying-28, drink-30)
dobj(drink-30, it-31)
prep(drink-30, while-32)
pobj(while-32, driving-33)


(ROOT
  (S
    (PP (RB Just) (IN in)
      (NP (NN case)))
    (NP (PRP you))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (ADJP (JJ easy)
              (S
                (VP (TO to)
                  (VP (VB do)
                    (NP (DT this))
                    (PP (IN at)
                      (NP (NN home)))))))
            (, ,)))))))


advmod(in-2, Just-1)
prep(think-5, in-2)
pobj(in-2, case-3)
nsubj(think-5, you-4)
root(ROOT-0, think-5)
nsubj(easy-8, it-6)
cop(easy-8, is-7)
ccomp(think-5, easy-8)
aux(do-10, to-9)
xcomp(easy-8, do-10)
dobj(do-10, this-11)
prep(do-10, at-12)
pobj(at-12, home-13)


(ROOT
  (S
    (NP (DT the) (JJ big) (NN hurdle))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB get)
            (NP (PRP$ your) (NNS hands))
            (PP (IN on)
              (NP
                (ADJP (RB really) (JJ good))
                (NN quality) (NNS soursops)))))))
    (. .)))


det(hurdle-3, the-1)
amod(hurdle-3, big-2)
nsubj(is-4, hurdle-3)
root(ROOT-0, is-4)
aux(get-6, to-5)
xcomp(is-4, get-6)
poss(hands-8, your-7)
dobj(get-6, hands-8)
prep(get-6, on-9)
advmod(good-11, really-10)
amod(soursops-13, good-11)
nn(soursops-13, quality-12)
pobj(on-9, soursops-13)


(ROOT
  (S
    (VP (VB Look)
      (PP (IN at)
        (NP (DT these) (NNS beauties))))
    (. .)))


root(ROOT-0, Look-1)
prep(Look-1, at-2)
det(beauties-4, these-3)
pobj(at-2, beauties-4)


(ROOT
  (S
    (NP (PRP You))
    (VP (MD ca) (RB n't)
      (VP (VB find)
        (NP (PRP them))
        (PP (IN at)
          (NP (DT any) (JJ ordinary) (NN fruit) (NN shop)))))
    (. .)))


nsubj(find-4, You-1)
aux(find-4, ca-2)
neg(find-4, n't-3)
root(ROOT-0, find-4)
dobj(find-4, them-5)
prep(find-4, at-6)
det(shop-10, any-7)
amod(shop-10, ordinary-8)
nn(shop-10, fruit-9)
pobj(at-6, shop-10)


(ROOT
  (S
    (ADVP (RB Then))
    (NP (PRP you))
    (ADVP (RB also))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP (VB do)
            (NP (NN something))
            (PP (TO to)
              (NP
                (NP (DT the) (NN soursop))
                (ADVP (RB aside))))
            (PP (IN from)
              (S
                (ADVP (RB just))
                (VP
                  (VP (VBG peeling)
                    (PRT (RP off))
                    (NP (DT the) (NN skin)))
                  (CC and)
                  (VP (VBG making)
                    (NP (PRP it))
                    (PP (IN into)
                      (NP (DT a) (NN puree)))))))))))
    (. .)))


advmod(have-4, Then-1)
nsubj(have-4, you-2)
advmod(have-4, also-3)
root(ROOT-0, have-4)
aux(do-6, to-5)
xcomp(have-4, do-6)
dobj(do-6, something-7)
prep(do-6, to-8)
det(soursop-10, the-9)
pobj(to-8, soursop-10)
advmod(soursop-10, aside-11)
prep(do-6, from-12)
advmod(peeling-14, just-13)
pcomp(from-12, peeling-14)
prt(peeling-14, off-15)
det(skin-17, the-16)
dobj(peeling-14, skin-17)
cc(peeling-14, and-18)
conj(peeling-14, making-19)
dobj(making-19, it-20)
prep(making-19, into-21)
det(puree-23, a-22)
pobj(into-21, puree-23)


(ROOT
  (INTJ (UH -LRB-)))




(ROOT
  (S
    (NP (PRP I))
    (VP (MD could)
      (VP (VB tell)
        (NP (PRP you))))
    (, ,)))


nsubj(tell-3, I-1)
aux(tell-3, could-2)
root(ROOT-0, tell-3)
dobj(tell-3, you-4)


(ROOT
  (S (CC but)
    (NP (NNP Uncle))
    (VP (MD will)
      (VP (VB be)
        (ADJP (RB very) (JJ sour)
          (PP (IN about)
            (NP (PRP it))))))
    (-RRB- -RRB-) (. .)))


cc(sour-6, but-1)
nsubj(sour-6, Uncle-2)
aux(sour-6, will-3)
cop(sour-6, be-4)
advmod(sour-6, very-5)
root(ROOT-0, sour-6)
prep(sour-6, about-7)
pobj(about-7, it-8)


(ROOT
  (SBAR (IN Unless)
    (S
      (NP (PRP you))
      (ADVP (RB really))
      (VP (VBP enjoy)
        (S
          (VP (VBG sucking)
            (PP (IN at)
              (NP (DT the) (NN seed))
              (, ,))))))))


mark(enjoy-4, Unless-1)
nsubj(enjoy-4, you-2)
advmod(enjoy-4, really-3)
root(ROOT-0, enjoy-4)
xcomp(enjoy-4, sucking-5)
prep(sucking-5, at-6)
det(seed-8, the-7)
pobj(at-6, seed-8)


(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB highly))
    (VP (VBP recommend)
      (NP (DT the) (NN ice) (JJ blended) (NN version)))
    (. .)))


nsubj(recommend-3, I-1)
advmod(recommend-3, highly-2)
root(ROOT-0, recommend-3)
det(version-7, the-4)
nn(version-7, ice-5)
amod(version-7, blended-6)
dobj(recommend-3, version-7)


(ROOT
  (S
    (NP
      (NP (DT The) (NN intensity))
      (PP (IN of)
        (NP (DT the) (NN soursop) (NN taste))))
    (VP (VBZ is)
      (NP
        (NP
          (NP (NN tongue))
          (ADJP (RB tinglingly) (JJ titillating)))
        (CC and)
        (NP
          (NP (DT a)
            (ADJP (RB very) (JJ refreshing))
            (NN accompaniment))
          (PP (TO to)
            (NP
              (NP (PDT all) (DT that) (JJ great) (NN hawker) (NN food))
              (PP (IN at)
                (NP (NNP Old) (NNP Airport) (NNP Road))))))))
    (. .)))


det(intensity-2, The-1)
nsubj(tongue-8, intensity-2)
prep(intensity-2, of-3)
det(taste-6, the-4)
nn(taste-6, soursop-5)
pobj(of-3, taste-6)
cop(tongue-8, is-7)
root(ROOT-0, tongue-8)
advmod(titillating-10, tinglingly-9)
amod(tongue-8, titillating-10)
cc(tongue-8, and-11)
det(accompaniment-15, a-12)
advmod(refreshing-14, very-13)
amod(accompaniment-15, refreshing-14)
conj(tongue-8, accompaniment-15)
prep(accompaniment-15, to-16)
predet(food-21, all-17)
det(food-21, that-18)
amod(food-21, great-19)
nn(food-21, hawker-20)
pobj(to-16, food-21)
prep(food-21, at-22)
nn(Road-25, Old-23)
nn(Road-25, Airport-24)
pobj(at-22, Road-25)


(ROOT
  (INTJ (UH $)))


root(ROOT-0, $-1)


(ROOT
  (NP
    (NP (CD 2.50) (JJ Great) (NN service))
    (PP (IN from)
      (NP
        (NP (DT this) (NNP Teochew) (NNP Ah) (NNP Hia))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ insists)
              (SBAR (IN that)
                (S
                  (NP
                    (NP (DT all))
                    (PP (IN of)
                      (NP
                        (NP (DT the) (NNS hawkers))
                        (PP (IN at)
                          (NP (NNP Old) (NNP Airport) (NNP Road))))))
                  (VP (VBP have)
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (NP
                            (NP (NNP TeoChew))
                            (PP (IN in)
                              (NP (NN order)))))))
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (ADJP (JJ able)
                            (S
                              (VP (TO to)
                                (VP (VB rent)
                                  (NP (DT a) (NN store))
                                  (ADVP (RB there)))))))))))))))))
    (. !)))


num(service-3, 2.50-1)
amod(service-3, Great-2)
root(ROOT-0, service-3)
prep(service-3, from-4)
det(Hia-8, this-5)
nn(Hia-8, Teochew-6)
nn(Hia-8, Ah-7)
pobj(from-4, Hia-8)
nsubj(insists-10, who-9)
rcmod(Hia-8, insists-10)
mark(have-20, that-11)
nsubj(have-20, all-12)
prep(all-12, of-13)
det(hawkers-15, the-14)
pobj(of-13, hawkers-15)
prep(hawkers-15, at-16)
nn(Road-19, Old-17)
nn(Road-19, Airport-18)
pobj(at-16, Road-19)
ccomp(insists-10, have-20)
aux(TeoChew-23, to-21)
cop(TeoChew-23, be-22)
xcomp(have-20, TeoChew-23)
prep(TeoChew-23, in-24)
pobj(in-24, order-25)
aux(able-28, to-26)
cop(able-28, be-27)
xcomp(have-20, able-28)
aux(rent-30, to-29)
xcomp(able-28, rent-30)
det(store-32, a-31)
dobj(rent-30, store-32)
advmod(rent-30, there-33)


(ROOT
  (SINV
    (S
      (NP (PRP You))
      (VP (MD can)
        (VP (VB tell)
          (SBAR (IN that)
            (S
              (NP (PRP we))
              (VP (VBD had)
                (NP
                  (NP (DT a) (NN bit))
                  (PP (IN of)
                    (NP
                      (NP (DT a) (NN laugh))
                      (VP (VBG taking)
                        (NP (PRP$ his) (NN picture))))))))))))
    (VP (MD ca) (RB n't))
    (NP (PRP you))
    (. ?)))


nsubj(tell-3, You-1)
aux(tell-3, can-2)
dep(ca-15, tell-3)
mark(had-6, that-4)
nsubj(had-6, we-5)
ccomp(tell-3, had-6)
det(bit-8, a-7)
dobj(had-6, bit-8)
prep(bit-8, of-9)
det(laugh-11, a-10)
pobj(of-9, laugh-11)
partmod(laugh-11, taking-12)
poss(picture-14, his-13)
dobj(taking-12, picture-14)
root(ROOT-0, ca-15)
neg(ca-15, n't-16)
nsubj(ca-15, you-17)


